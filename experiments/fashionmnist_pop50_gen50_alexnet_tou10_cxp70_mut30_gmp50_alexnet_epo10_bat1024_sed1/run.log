2023-08-22 19:49:47,431 INFO: Starting experiment with the arguments logged below.
2023-08-22 19:49:47,432 INFO: Namespace(results_path='/mnt/lustre/users/mbornman1/evoopt-cnn/experiments/fashionmnist_pop50_gen50_alexnet_tou10_cxp70_mut30_gmp50_alexnet_epo10_bat1024_sed1', cpu_count=4, seed=1, dataset='fashion_mnist', pop_size=50, ngen=50, model='alexnet', epochs=10, batch_size=1024, tournsize=10, cxpb=0.7, mutpb=0.3, gene_mut_prob=0.5)
2023-08-22 19:49:47,432 INFO: Setting the random number generator seed for this experiment.
2023-08-22 19:49:47,432 INFO: Initializing the multiprocessing pool.
2023-08-22 19:49:47,445 INFO: Running the evolutionary algorithm with the given hyper-parameters. This may take a while. Statistics for every generation will be printed below.
2023-08-22 19:49:47,445 INFO: Setting up DEAP toolbox.
2023-08-22 19:49:47,446 INFO: Registering individual initialization method.
2023-08-22 19:49:47,446 INFO: Registering population initialization method.
2023-08-22 19:49:47,446 INFO: Registering the selection method.
2023-08-22 19:49:47,446 INFO: Registering the evaluation method.
2023-08-22 19:49:47,446 INFO: Registering the genetic operators.
2023-08-22 19:49:47,446 INFO: Setting up the hall of fame and stats we want to keep track of.
2023-08-22 19:49:47,446 INFO: Initializing the initial population.
2023-08-22 19:49:47,460 INFO: Running the evolutionary algorithm.
2023-08-22 19:49:47,460 INFO: Evaluating fitness for the initial generation of individuals.
2023-08-22 19:49:47,460 INFO: Will evaluate fitness for 50 individuals.
2023-08-22 19:49:49,217 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 19:49:49,217 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 19:49:49,217 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 19:49:49,217 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 19:49:49,502 DEBUG: Creating converter from 7 to 5
2023-08-22 19:49:49,502 DEBUG: Creating converter from 7 to 5
2023-08-22 19:49:49,502 DEBUG: Creating converter from 7 to 5
2023-08-22 19:49:49,502 DEBUG: Creating converter from 7 to 5
2023-08-22 19:49:49,502 DEBUG: Creating converter from 5 to 7
2023-08-22 19:49:49,502 DEBUG: Creating converter from 5 to 7
2023-08-22 19:49:49,502 DEBUG: Creating converter from 5 to 7
2023-08-22 19:49:49,502 DEBUG: Creating converter from 7 to 5
2023-08-22 19:49:49,502 DEBUG: Creating converter from 5 to 7
2023-08-22 19:49:49,502 DEBUG: Creating converter from 7 to 5
2023-08-22 19:49:49,502 DEBUG: Creating converter from 7 to 5
2023-08-22 19:49:49,502 DEBUG: Creating converter from 5 to 7
2023-08-22 19:49:49,502 DEBUG: Creating converter from 7 to 5
2023-08-22 19:49:49,502 DEBUG: Creating converter from 5 to 7
2023-08-22 19:49:49,502 DEBUG: Creating converter from 5 to 7
2023-08-22 19:49:49,502 DEBUG: Creating converter from 5 to 7
2023-08-22 19:49:55,719 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-22 19:49:55,719 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-22 19:49:55,731 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-22 19:49:55,731 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-22 19:49:55,735 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-22 19:49:55,736 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-22 19:49:55,801 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-22 19:49:55,801 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-22 19:50:21,485 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-22 19:50:21,485 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-22 19:50:22,390 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:50:22,390 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:50:22,543 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 19:50:22,543 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 19:50:26,077 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-22 19:50:26,078 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-22 19:50:41,626 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-22 19:50:41,626 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-22 19:50:42,844 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-22 19:50:42,844 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-22 19:50:43,097 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-22 19:50:43,097 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-22 19:50:52,684 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 19:50:52,684 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 19:51:02,042 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 19:51:02,042 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 19:51:03,691 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-22 19:51:03,691 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-22 19:51:09,246 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 19:51:09,246 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 19:51:13,529 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 19:51:13,530 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 19:51:22,192 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:51:22,193 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:51:29,280 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.19191919191919193 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=1.0 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.18181818181818182].
2023-08-22 19:51:29,280 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.19191919191919193 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=1.0 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.18181818181818182].
2023-08-22 19:51:32,318 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.5252525252525253 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.4747474747474748].
2023-08-22 19:51:32,318 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.5252525252525253 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.4747474747474748].
2023-08-22 19:51:34,397 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5656565656565657 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.36363636363636365].
2023-08-22 19:51:34,397 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5656565656565657 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.36363636363636365].
2023-08-22 19:51:43,835 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-22 19:51:43,835 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-22 19:51:50,021 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-22 19:51:50,021 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-22 19:51:54,895 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.8989898989898991 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7373737373737375 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-22 19:51:54,895 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.8989898989898991 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7373737373737375 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-22 19:51:57,139 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.696969696969697, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.4545454545454546 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.13131313131313133].
2023-08-22 19:51:57,139 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.696969696969697, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.4545454545454546 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.13131313131313133].
2023-08-22 19:52:05,197 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-22 19:52:05,197 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-22 19:52:10,554 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5858585858585859 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7373737373737375].
2023-08-22 19:52:10,554 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5858585858585859 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7373737373737375].
2023-08-22 19:52:15,457 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008788 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.6565656565656566 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.10101010101010102].
2023-08-22 19:52:15,458 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008788 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.6565656565656566 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.10101010101010102].
2023-08-22 19:52:18,739 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 19:52:18,739 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 19:52:27,029 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-22 19:52:27,029 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-22 19:52:31,719 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 19:52:31,719 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 19:52:36,121 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.4141414141414142 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5252525252525253].
2023-08-22 19:52:36,122 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.4141414141414142 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5252525252525253].
2023-08-22 19:52:38,312 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.696969696969697 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.7171717171717172 ,epsilon=1e-10 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.595959595959596].
2023-08-22 19:52:38,312 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.696969696969697 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.7171717171717172 ,epsilon=1e-10 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.595959595959596].
2023-08-22 19:52:51,251 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9595959595959597, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7474747474747475 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8989898989898991].
2023-08-22 19:52:51,251 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9595959595959597, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7474747474747475 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8989898989898991].
2023-08-22 19:52:54,637 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.030303030303030304].
2023-08-22 19:52:54,638 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.030303030303030304].
2023-08-22 19:52:57,026 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 19:52:57,027 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 19:52:59,935 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9191919191919192, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5454545454545455 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.4747474747474748 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4040404040404041].
2023-08-22 19:52:59,936 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9191919191919192, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5454545454545455 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.4747474747474748 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4040404040404041].
2023-08-22 19:53:15,334 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.9393939393939394 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.17171717171717174 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5656565656565657].
2023-08-22 19:53:15,335 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.9393939393939394 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.17171717171717174 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5656565656565657].
2023-08-22 19:53:17,037 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.22222222222222224 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=1.0 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.9090909090909092 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8787878787878789].
2023-08-22 19:53:17,037 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.22222222222222224 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=1.0 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.9090909090909092 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8787878787878789].
2023-08-22 19:53:18,514 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.04040404040404041].
2023-08-22 19:53:18,514 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.04040404040404041].
2023-08-22 19:53:21,753 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.9393939393939394].
2023-08-22 19:53:21,753 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.9393939393939394].
2023-08-22 19:53:37,559 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-22 19:53:37,559 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-22 19:53:40,874 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.31313131313131315 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 19:53:40,874 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.31313131313131315 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 19:53:41,298 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 19:53:41,299 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 19:53:41,460 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.13131313131313133 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.07070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.020202020202020204].
2023-08-22 19:53:41,460 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.13131313131313133 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.07070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.020202020202020204].
2023-08-22 19:53:59,045 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0.11111111111111112 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.3434343434343435 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.9494949494949496].
2023-08-22 19:53:59,046 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0.11111111111111112 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.3434343434343435 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.9494949494949496].
2023-08-22 19:54:01,320 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.7777777777777778 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5454545454545455].
2023-08-22 19:54:01,321 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.7777777777777778 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5454545454545455].
2023-08-22 19:54:02,605 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.04040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.008485000000000001 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.888888888888889 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.48484848484848486 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.21212121212121213].
2023-08-22 19:54:02,605 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.04040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.008485000000000001 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.888888888888889 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.48484848484848486 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.21212121212121213].
2023-08-22 19:54:04,547 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.4141414141414142 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.686868686868687].
2023-08-22 19:54:04,547 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.4141414141414142 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.686868686868687].
2023-08-22 19:54:19,851 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5353535353535354, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.4040404040404041 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.4646464646464647].
2023-08-22 19:54:19,852 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5353535353535354, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.4040404040404041 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.4646464646464647].
2023-08-22 19:54:41,084 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.8989898989898991 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.43434343434343436].
2023-08-22 19:54:41,084 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.8989898989898991 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.43434343434343436].
2023-08-22 19:55:06,549 INFO: Applying selection operators for generation 1.
2023-08-22 19:55:06,549 INFO: Applying genetic operators for generation 1.
2023-08-22 19:55:06,552 INFO: Evaluating fitness for for generation 1.
2023-08-22 19:55:06,552 INFO: Will evaluate fitness for 36 individuals.
2023-08-22 19:55:07,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:55:07,090 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:55:07,092 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 19:55:07,092 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 19:55:07,098 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7373737373737375].
2023-08-22 19:55:07,098 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7373737373737375].
2023-08-22 19:55:07,114 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.29292929292929293 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.15151515151515152].
2023-08-22 19:55:07,114 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.29292929292929293 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.15151515151515152].
2023-08-22 19:55:27,938 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:55:27,938 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:55:28,892 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:55:28,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:55:29,069 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5858585858585859 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-22 19:55:29,069 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5858585858585859 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-22 19:55:29,116 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:55:29,117 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:55:48,776 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:55:48,776 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:55:50,017 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.6767676767676768 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.5454545454545455].
2023-08-22 19:55:50,018 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.6767676767676768 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.5454545454545455].
2023-08-22 19:55:50,371 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 19:55:50,371 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 19:55:51,098 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.9292929292929294].
2023-08-22 19:55:51,099 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.9292929292929294].
2023-08-22 19:56:09,457 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.696969696969697 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.5454545454545455].
2023-08-22 19:56:09,457 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.696969696969697 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.5454545454545455].
2023-08-22 19:56:10,314 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 19:56:10,315 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 19:56:11,173 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 19:56:11,173 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 19:56:13,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-22 19:56:13,963 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-22 19:56:32,859 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:56:32,859 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:56:33,001 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.4040404040404041].
2023-08-22 19:56:33,001 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.4040404040404041].
2023-08-22 19:56:35,246 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 19:56:35,246 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 19:56:36,946 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:56:36,947 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:56:52,214 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.8585858585858587 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.05050505050505051].
2023-08-22 19:56:52,214 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.8585858585858587 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.05050505050505051].
2023-08-22 19:56:53,109 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6464646464646465].
2023-08-22 19:56:53,109 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6464646464646465].
2023-08-22 19:56:54,937 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 19:56:54,938 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 19:56:58,352 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.38383838383838387].
2023-08-22 19:56:58,353 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.38383838383838387].
2023-08-22 19:57:12,666 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:57:12,667 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:57:13,379 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 19:57:13,379 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 19:57:14,845 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.4646464646464647 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.21212121212121213 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.6161616161616162].
2023-08-22 19:57:14,845 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.4646464646464647 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.21212121212121213 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.6161616161616162].
2023-08-22 19:57:20,919 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:57:20,920 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:57:33,214 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.6565656565656566 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.696969696969697 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.18181818181818182].
2023-08-22 19:57:33,214 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.6565656565656566 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.696969696969697 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.18181818181818182].
2023-08-22 19:57:34,823 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 19:57:34,824 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 19:57:36,653 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 19:57:36,654 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 19:57:41,399 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.4040404040404041].
2023-08-22 19:57:41,399 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.4040404040404041].
2023-08-22 19:57:54,191 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.696969696969697 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.04040404040404041].
2023-08-22 19:57:54,191 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.696969696969697 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.04040404040404041].
2023-08-22 19:57:56,184 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 19:57:56,184 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 19:57:56,739 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:57:56,740 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:58:01,374 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6767676767676768].
2023-08-22 19:58:01,374 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6767676767676768].
2023-08-22 19:58:20,794 INFO: Applying selection operators for generation 2.
2023-08-22 19:58:20,794 INFO: Applying genetic operators for generation 2.
2023-08-22 19:58:20,798 INFO: Evaluating fitness for for generation 2.
2023-08-22 19:58:20,798 INFO: Will evaluate fitness for 44 individuals.
2023-08-22 19:58:21,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:58:21,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:58:21,339 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 19:58:21,340 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 19:58:21,353 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 19:58:21,354 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 19:58:21,359 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.8383838383838385 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 19:58:21,359 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.8383838383838385 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 19:58:39,761 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:58:39,761 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:58:41,048 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 19:58:41,048 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 19:58:42,521 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-22 19:58:42,521 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-22 19:58:42,637 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.18181818181818182].
2023-08-22 19:58:42,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.18181818181818182].
2023-08-22 19:58:59,587 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:58:59,587 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:59:01,091 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.20202020202020204 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.9090909090909092].
2023-08-22 19:59:01,091 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.20202020202020204 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.9090909090909092].
2023-08-22 19:59:02,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-22 19:59:02,093 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.06060606060606061].
2023-08-22 19:59:02,272 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.6565656565656566 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:59:02,272 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.6565656565656566 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:59:17,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:59:17,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 19:59:20,608 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5858585858585859, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.5757575757575758 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.6767676767676768].
2023-08-22 19:59:20,608 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5858585858585859, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.5757575757575758 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.6767676767676768].
2023-08-22 19:59:23,195 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 19:59:23,196 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 19:59:23,944 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 19:59:23,945 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 19:59:39,094 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:59:39,094 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:59:39,547 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9595959595959597 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6767676767676768].
2023-08-22 19:59:39,548 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9595959595959597 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6767676767676768].
2023-08-22 19:59:41,426 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 19:59:41,426 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 19:59:45,439 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 19:59:45,440 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 19:59:57,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 19:59:57,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:00:00,251 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 20:00:00,251 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 20:00:01,248 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 20:00:01,248 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 20:00:05,141 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:00:05,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:00:17,765 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:00:17,765 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:00:18,787 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.13131313131313133].
2023-08-22 20:00:18,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.13131313131313133].
2023-08-22 20:00:20,537 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7373737373737375, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 20:00:20,537 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7373737373737375, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.7070707070707072 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 20:00:24,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:00:24,874 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:00:39,758 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.5555555555555556 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.42424242424242425].
2023-08-22 20:00:39,759 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.5555555555555556 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.42424242424242425].
2023-08-22 20:00:40,097 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 20:00:40,097 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 20:00:42,114 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:00:42,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:00:44,935 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 20:00:44,936 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 20:00:58,827 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:00:58,827 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:01:00,141 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 20:01:00,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 20:01:03,696 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:01:03,696 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:01:05,473 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 20:01:05,474 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 20:01:20,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:01:20,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:01:21,675 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.4545454545454546, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.797979797979798 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.22222222222222224].
2023-08-22 20:01:21,675 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.4545454545454546, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.797979797979798 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.22222222222222224].
2023-08-22 20:01:23,178 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.8585858585858587 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.14141414141414144 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6464646464646465].
2023-08-22 20:01:23,178 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.8585858585858587 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.14141414141414144 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.6464646464646465].
2023-08-22 20:01:40,656 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0019200000000000003 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.9393939393939394].
2023-08-22 20:01:40,656 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0019200000000000003 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.9393939393939394].
2023-08-22 20:01:42,849 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 20:01:42,850 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 20:01:44,864 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6767676767676768].
2023-08-22 20:01:44,864 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6767676767676768].
2023-08-22 20:02:03,055 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 20:02:03,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 20:02:03,339 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:02:03,339 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:02:24,105 INFO: Applying selection operators for generation 3.
2023-08-22 20:02:24,105 INFO: Applying genetic operators for generation 3.
2023-08-22 20:02:24,109 INFO: Evaluating fitness for for generation 3.
2023-08-22 20:02:24,109 INFO: Will evaluate fitness for 41 individuals.
2023-08-22 20:02:24,651 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.7676767676767677 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.3535353535353536].
2023-08-22 20:02:24,651 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.7676767676767677 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.3535353535353536].
2023-08-22 20:02:24,655 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:02:24,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:02:24,660 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.5555555555555556 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:02:24,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.5555555555555556 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:02:24,775 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:02:24,776 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:02:43,699 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.09090909090909091 ,rho=0.13131313131313133 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.686868686868687].
2023-08-22 20:02:43,699 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.09090909090909091 ,rho=0.13131313131313133 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.686868686868687].
2023-08-22 20:02:44,473 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:02:44,473 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:02:47,138 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 20:02:47,139 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 20:02:47,188 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8484848484848485].
2023-08-22 20:02:47,188 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8484848484848485].
2023-08-22 20:03:05,010 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.7575757575757577 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6464646464646465].
2023-08-22 20:03:05,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.7575757575757577 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6464646464646465].
2023-08-22 20:03:05,516 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 20:03:05,516 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 20:03:06,441 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.595959595959596 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6464646464646465].
2023-08-22 20:03:06,441 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.595959595959596 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.6464646464646465].
2023-08-22 20:03:06,929 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.42424242424242425].
2023-08-22 20:03:06,929 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.42424242424242425].
2023-08-22 20:03:24,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:03:24,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:03:24,876 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.030303030303030304].
2023-08-22 20:03:24,877 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.030303030303030304].
2023-08-22 20:03:27,483 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.9090909090909092].
2023-08-22 20:03:27,483 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.9090909090909092].
2023-08-22 20:03:28,949 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6767676767676768].
2023-08-22 20:03:28,949 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6767676767676768].
2023-08-22 20:03:43,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.030303030303030304].
2023-08-22 20:03:43,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.030303030303030304].
2023-08-22 20:03:44,435 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.6464646464646465].
2023-08-22 20:03:44,435 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.6464646464646465].
2023-08-22 20:03:47,652 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.494949494949495 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.9797979797979799].
2023-08-22 20:03:47,653 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.494949494949495 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.9797979797979799].
2023-08-22 20:03:49,009 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:03:49,009 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:04:03,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.20202020202020204 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:04:03,214 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.20202020202020204 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:04:06,377 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=1.0].
2023-08-22 20:04:06,377 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=1.0].
2023-08-22 20:04:09,490 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8282828282828284, momentum=0.8585858585858587 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.9494949494949496 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.8585858585858587].
2023-08-22 20:04:09,490 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8282828282828284, momentum=0.8585858585858587 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.9494949494949496 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.8585858585858587].
2023-08-22 20:04:10,988 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:04:10,988 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:04:24,841 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:04:24,842 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:04:29,001 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.29292929292929293 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.696969696969697 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.4040404040404041].
2023-08-22 20:04:29,001 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.29292929292929293 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.696969696969697 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.4040404040404041].
2023-08-22 20:04:30,289 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.9191919191919192 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.8282828282828284 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8686868686868687].
2023-08-22 20:04:30,290 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.9191919191919192 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.8282828282828284 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8686868686868687].
2023-08-22 20:04:32,573 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:04:32,573 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:04:46,911 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:04:46,911 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:04:50,397 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:04:50,397 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:04:51,864 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.686868686868687 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.4040404040404041].
2023-08-22 20:04:51,865 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.686868686868687 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.4040404040404041].
2023-08-22 20:04:52,892 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:04:52,892 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:05:06,947 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:05:06,947 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:05:12,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:05:12,239 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:05:12,938 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.696969696969697].
2023-08-22 20:05:12,939 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.696969696969697].
2023-08-22 20:05:16,295 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:05:16,296 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:05:26,822 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:05:26,822 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:05:33,316 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.4040404040404041].
2023-08-22 20:05:33,316 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.4040404040404041].
2023-08-22 20:05:47,067 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:05:47,068 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:05:53,037 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.5555555555555556 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.42424242424242425].
2023-08-22 20:05:53,037 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.5555555555555556 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.42424242424242425].
2023-08-22 20:06:06,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:06:06,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:06:26,136 INFO: Applying selection operators for generation 4.
2023-08-22 20:06:26,136 INFO: Applying genetic operators for generation 4.
2023-08-22 20:06:26,140 INFO: Evaluating fitness for for generation 4.
2023-08-22 20:06:26,140 INFO: Will evaluate fitness for 34 individuals.
2023-08-22 20:06:26,709 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.696969696969697 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:06:26,709 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.696969696969697 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:06:26,722 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:06:26,722 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:06:26,722 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.8282828282828284 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8686868686868687].
2023-08-22 20:06:26,722 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.8282828282828284 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8686868686868687].
2023-08-22 20:06:26,735 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.4545454545454546 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.5050505050505051].
2023-08-22 20:06:26,735 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.4545454545454546 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.5050505050505051].
2023-08-22 20:06:45,207 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=1.0].
2023-08-22 20:06:45,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=1.0].
2023-08-22 20:06:46,621 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.08080808080808081 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.30303030303030304 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=1.0].
2023-08-22 20:06:46,621 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.08080808080808081 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.30303030303030304 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=1.0].
2023-08-22 20:06:47,169 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8181818181818182 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.696969696969697 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=1.0].
2023-08-22 20:06:47,169 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8181818181818182 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.696969696969697 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=1.0].
2023-08-22 20:06:52,354 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:06:52,354 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:07:06,075 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.29292929292929293 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.595959595959596 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.4040404040404041].
2023-08-22 20:07:06,075 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.29292929292929293 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.595959595959596 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.4040404040404041].
2023-08-22 20:07:08,405 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:07:08,405 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:07:09,478 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:07:09,478 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:07:14,819 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:07:14,820 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:07:27,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:07:27,080 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:07:30,118 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.3434343434343435 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.030303030303030304].
2023-08-22 20:07:30,119 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.3434343434343435 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.030303030303030304].
2023-08-22 20:07:31,286 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.17171717171717174 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.5353535353535354].
2023-08-22 20:07:31,286 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.17171717171717174 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.5353535353535354].
2023-08-22 20:07:34,641 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.797979797979798 ,nesterov=True ,amsgrad=False ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=1.0 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.4040404040404041].
2023-08-22 20:07:34,641 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.797979797979798 ,nesterov=True ,amsgrad=False ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=1.0 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.4040404040404041].
2023-08-22 20:07:49,443 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.26262626262626265 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:07:49,444 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.26262626262626265 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:07:52,018 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.5151515151515152 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:07:52,018 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.5151515151515152 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:07:53,714 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.9595959595959597 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8181818181818182].
2023-08-22 20:07:53,715 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.9595959595959597 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8181818181818182].
2023-08-22 20:07:57,486 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.6464646464646465].
2023-08-22 20:07:57,486 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.6464646464646465].
2023-08-22 20:08:12,087 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8484848484848485].
2023-08-22 20:08:12,087 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8484848484848485].
2023-08-22 20:08:13,086 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.009091 ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.7676767676767677 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.3535353535353536].
2023-08-22 20:08:13,086 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.009091 ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.7676767676767677 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.3535353535353536].
2023-08-22 20:08:15,257 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.7676767676767677 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:08:15,258 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.7676767676767677 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 20:08:16,231 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.26262626262626265, momentum=0.26262626262626265 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.4646464646464647 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=1.0].
2023-08-22 20:08:16,231 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.26262626262626265, momentum=0.26262626262626265 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.4646464646464647 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=1.0].
2023-08-22 20:08:32,612 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.6262626262626263 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.8585858585858587 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.4040404040404041].
2023-08-22 20:08:32,612 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.6262626262626263 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.8585858585858587 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.4040404040404041].
2023-08-22 20:08:32,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.32323232323232326 ,rho=0.5555555555555556 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=1.0].
2023-08-22 20:08:32,631 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.32323232323232326 ,rho=0.5555555555555556 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=1.0].
2023-08-22 20:08:37,601 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.29292929292929293 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.686868686868687 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.5050505050505051].
2023-08-22 20:08:37,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.29292929292929293 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.686868686868687 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.5050505050505051].
2023-08-22 20:08:37,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:08:37,922 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:08:55,100 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:08:55,100 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:08:55,128 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.9797979797979799 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.030303030303030304].
2023-08-22 20:08:55,129 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.9797979797979799 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.030303030303030304].
2023-08-22 20:09:00,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:09:00,559 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:09:13,554 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:09:13,555 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:09:17,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:09:17,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:09:20,891 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:09:20,891 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:09:40,952 INFO: Applying selection operators for generation 5.
2023-08-22 20:09:40,953 INFO: Applying genetic operators for generation 5.
2023-08-22 20:09:40,955 INFO: Evaluating fitness for for generation 5.
2023-08-22 20:09:40,955 INFO: Will evaluate fitness for 38 individuals.
2023-08-22 20:09:41,508 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:09:41,509 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:09:41,516 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:09:41,516 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:09:41,555 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:09:41,555 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:09:41,560 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:09:41,560 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:09:59,917 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:09:59,917 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:09:59,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:09:59,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:10:00,711 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:10:00,711 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:10:03,212 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:10:03,212 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:10:20,167 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:10:20,167 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:10:20,212 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:10:20,213 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:10:21,184 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.6565656565656566 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.8686868686868687].
2023-08-22 20:10:21,184 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.6565656565656566 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.8686868686868687].
2023-08-22 20:10:23,740 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=False ,weight_decay=0.0035360000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.05050505050505051 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=1.0].
2023-08-22 20:10:23,740 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=False ,weight_decay=0.0035360000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.05050505050505051 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=1.0].
2023-08-22 20:10:38,975 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.030303030303030304].
2023-08-22 20:10:38,975 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.030303030303030304].
2023-08-22 20:10:40,522 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:10:40,522 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:10:43,692 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:10:43,692 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:10:46,851 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.31313131313131315, momentum=0.37373737373737376 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.5555555555555556 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.7575757575757577].
2023-08-22 20:10:46,851 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.31313131313131315, momentum=0.37373737373737376 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.5555555555555556 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.7575757575757577].
2023-08-22 20:10:59,340 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:10:59,340 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:10:59,463 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:10:59,464 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:11:02,812 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=1.0].
2023-08-22 20:11:02,812 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.0 ,beta=1.0].
2023-08-22 20:11:07,607 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:11:07,607 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:11:19,043 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:11:19,044 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:11:19,498 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:11:19,499 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:11:25,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:11:25,544 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:11:28,139 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.5555555555555556 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.494949494949495 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.030303030303030304].
2023-08-22 20:11:28,139 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.5555555555555556 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.494949494949495 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.030303030303030304].
2023-08-22 20:11:39,326 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:11:39,326 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:11:40,060 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:11:40,060 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=1.0].
2023-08-22 20:11:46,113 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:11:46,113 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:11:50,820 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:11:50,820 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:12:00,084 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:12:00,084 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:12:00,794 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.8282828282828284 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.17171717171717174].
2023-08-22 20:12:00,794 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.8282828282828284 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.17171717171717174].
2023-08-22 20:12:04,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:12:04,745 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:12:13,888 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.21212121212121213 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:12:13,889 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.21212121212121213 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:12:20,396 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:12:20,396 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:12:22,325 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.9191919191919192 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8686868686868687].
2023-08-22 20:12:22,325 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.9191919191919192 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8686868686868687].
2023-08-22 20:12:25,642 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:12:25,642 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:12:34,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=1.0 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.030303030303030304].
2023-08-22 20:12:34,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=1.0 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.030303030303030304].
2023-08-22 20:12:39,047 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0.9191919191919192 ,nesterov=False ,amsgrad=True ,weight_decay=0.0030310000000000007 ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.9696969696969697 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.8484848484848485].
2023-08-22 20:12:39,048 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0.9191919191919192 ,nesterov=False ,amsgrad=True ,weight_decay=0.0030310000000000007 ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.9696969696969697 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.8484848484848485].
2023-08-22 20:13:00,658 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.030303030303030304].
2023-08-22 20:13:00,658 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.030303030303030304].
2023-08-22 20:13:20,726 INFO: Applying selection operators for generation 6.
2023-08-22 20:13:20,726 INFO: Applying genetic operators for generation 6.
2023-08-22 20:13:20,730 INFO: Evaluating fitness for for generation 6.
2023-08-22 20:13:20,730 INFO: Will evaluate fitness for 39 individuals.
2023-08-22 20:13:21,285 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0.26262626262626265 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.3535353535353536 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.5858585858585859].
2023-08-22 20:13:21,286 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0.26262626262626265 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.3535353535353536 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.5858585858585859].
2023-08-22 20:13:21,292 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4040404040404041].
2023-08-22 20:13:21,293 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4040404040404041].
2023-08-22 20:13:21,328 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:13:21,328 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:13:21,339 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:13:21,339 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:13:39,886 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.20202020202020204].
2023-08-22 20:13:39,887 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.20202020202020204].
2023-08-22 20:13:41,674 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:13:41,674 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:13:42,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:13:42,091 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:13:43,968 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.888888888888889, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.29292929292929293 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8989898989898991].
2023-08-22 20:13:43,968 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.888888888888889, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.29292929292929293 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8989898989898991].
2023-08-22 20:13:58,479 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.5555555555555556 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.18181818181818182].
2023-08-22 20:13:58,479 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.5555555555555556 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.18181818181818182].
2023-08-22 20:14:02,461 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.030303030303030304].
2023-08-22 20:14:02,462 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.030303030303030304].
2023-08-22 20:14:02,577 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.8080808080808082 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:14:02,577 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.8080808080808082 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:14:06,711 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:14:06,711 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:14:22,187 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:14:22,187 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:14:22,924 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.26262626262626265 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.37373737373737376].
2023-08-22 20:14:22,925 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.26262626262626265 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.37373737373737376].
2023-08-22 20:14:25,181 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.030303030303030304].
2023-08-22 20:14:25,182 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.030303030303030304].
2023-08-22 20:14:25,210 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:14:25,210 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:14:42,724 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:14:42,724 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:14:45,336 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:14:45,336 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:14:45,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:14:45,579 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:14:46,466 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:14:46,467 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:15:03,135 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:15:03,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:15:05,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.4040404040404041].
2023-08-22 20:15:05,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.4040404040404041].
2023-08-22 20:15:06,024 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:15:06,024 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:15:06,476 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.4444444444444445].
2023-08-22 20:15:06,476 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.4444444444444445].
2023-08-22 20:15:23,960 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:15:23,961 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:15:24,509 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:15:24,509 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:15:24,606 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:15:24,606 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:15:27,716 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8686868686868687, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8282828282828284].
2023-08-22 20:15:27,717 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8686868686868687, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8282828282828284].
2023-08-22 20:15:42,600 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:15:42,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:15:42,961 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:15:42,961 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:15:44,994 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:15:44,994 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:15:48,612 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:15:48,612 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:16:02,946 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:16:02,946 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:16:05,448 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.19191919191919193 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.8585858585858587 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:16:05,448 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.19191919191919193 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.8585858585858587 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:16:05,814 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:16:05,814 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:16:07,866 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:16:07,866 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:16:23,268 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9090909090909092 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.030303030303030304].
2023-08-22 20:16:23,269 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9090909090909092 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.030303030303030304].
2023-08-22 20:16:46,131 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.030303030303030304].
2023-08-22 20:16:46,131 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.030303030303030304].
2023-08-22 20:17:08,347 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.030303030303030304].
2023-08-22 20:17:08,347 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.030303030303030304].
2023-08-22 20:17:37,167 INFO: Applying selection operators for generation 7.
2023-08-22 20:17:37,167 INFO: Applying genetic operators for generation 7.
2023-08-22 20:17:37,170 INFO: Evaluating fitness for for generation 7.
2023-08-22 20:17:37,170 INFO: Will evaluate fitness for 37 individuals.
2023-08-22 20:17:37,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8585858585858587 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8080808080808082].
2023-08-22 20:17:37,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8585858585858587 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8080808080808082].
2023-08-22 20:17:37,735 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:17:37,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:17:37,742 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:17:37,742 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:17:37,759 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.14141414141414144 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.4040404040404041].
2023-08-22 20:17:37,760 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.14141414141414144 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.4040404040404041].
2023-08-22 20:17:55,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:17:55,807 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:17:56,788 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:17:56,788 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:17:58,509 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:17:58,509 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:17:59,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5656565656565657 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.030303030303030304].
2023-08-22 20:17:59,373 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5656565656565657 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.030303030303030304].
2023-08-22 20:18:16,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:18:16,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:18:17,056 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.030303030303030304].
2023-08-22 20:18:17,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.030303030303030304].
2023-08-22 20:18:18,765 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:18:18,765 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:18:22,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:18:22,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:18:37,353 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.6565656565656566 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.7171717171717172].
2023-08-22 20:18:37,353 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.6565656565656566 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.7171717171717172].
2023-08-22 20:18:37,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.030303030303030304].
2023-08-22 20:18:37,421 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.030303030303030304].
2023-08-22 20:18:40,205 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:18:40,205 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:18:42,879 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:18:42,879 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:18:55,844 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.7676767676767677 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:18:55,845 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.7676767676767677 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:18:58,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8080808080808082, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.30303030303030304 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.29292929292929293].
2023-08-22 20:18:58,045 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8080808080808082, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.30303030303030304 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.29292929292929293].
2023-08-22 20:19:00,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:19:00,745 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:19:03,034 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.030303030303030304].
2023-08-22 20:19:03,035 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.030303030303030304].
2023-08-22 20:19:15,042 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.37373737373737376, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.4444444444444445 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.6464646464646465].
2023-08-22 20:19:15,042 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.37373737373737376, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.4444444444444445 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.6464646464646465].
2023-08-22 20:19:20,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:19:20,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:19:21,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:19:21,126 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:19:23,352 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.4646464646464647, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:19:23,352 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.4646464646464647, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:19:34,334 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:19:34,334 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:19:41,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:19:41,533 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:19:41,889 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:19:41,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:19:41,993 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:19:41,993 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:19:57,476 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:19:57,477 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:20:00,764 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:20:00,764 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:20:02,188 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.07070707070707072 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.030303030303030304].
2023-08-22 20:20:02,188 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.07070707070707072 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.030303030303030304].
2023-08-22 20:20:04,125 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:20:04,125 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:20:19,158 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:20:19,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:20:21,342 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:20:21,343 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:20:22,728 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.09090909090909091, momentum=0.4646464646464647 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.4040404040404041].
2023-08-22 20:20:22,728 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.09090909090909091, momentum=0.4646464646464647 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.4040404040404041].
2023-08-22 20:20:25,464 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:20:25,465 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:20:39,596 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:20:39,596 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:20:57,572 INFO: Applying selection operators for generation 8.
2023-08-22 20:20:57,573 INFO: Applying genetic operators for generation 8.
2023-08-22 20:20:57,577 INFO: Evaluating fitness for for generation 8.
2023-08-22 20:20:57,577 INFO: Will evaluate fitness for 39 individuals.
2023-08-22 20:20:58,142 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7676767676767677].
2023-08-22 20:20:58,142 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7676767676767677].
2023-08-22 20:20:58,200 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.393939393939394 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.98989898989899].
2023-08-22 20:20:58,200 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.393939393939394 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.98989898989899].
2023-08-22 20:20:58,207 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.98989898989899].
2023-08-22 20:20:58,207 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.98989898989899].
2023-08-22 20:20:58,237 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:20:58,237 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:21:19,219 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:21:19,220 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:21:19,774 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.595959595959596 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.030303030303030304].
2023-08-22 20:21:19,776 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.595959595959596 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.030303030303030304].
2023-08-22 20:21:20,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:21:20,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:21:22,176 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8484848484848485].
2023-08-22 20:21:22,177 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8484848484848485].
2023-08-22 20:21:39,506 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:21:39,506 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:21:41,049 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:21:41,049 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:21:42,618 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:21:42,618 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:21:43,085 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.7474747474747475 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.595959595959596 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.030303030303030304].
2023-08-22 20:21:43,086 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.7474747474747475 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.595959595959596 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.030303030303030304].
2023-08-22 20:21:59,772 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0.32323232323232326 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:21:59,773 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0.32323232323232326 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 20:22:01,376 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:22:01,376 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:22:02,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:22:02,983 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:22:14,424 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=0.008182 ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.030303030303030304].
2023-08-22 20:22:14,424 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=0.008182 ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.030303030303030304].
2023-08-22 20:22:21,637 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:22:21,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:22:23,988 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.8181818181818182 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.6565656565656566].
2023-08-22 20:22:23,988 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.8181818181818182 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.6565656565656566].
2023-08-22 20:22:24,486 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8484848484848485 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:22:24,486 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8484848484848485 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:22:34,670 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:22:34,671 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:22:42,499 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.7171717171717172 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.5555555555555556].
2023-08-22 20:22:42,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.7171717171717172 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.5555555555555556].
2023-08-22 20:22:46,503 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:22:46,503 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:22:47,591 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8787878787878789].
2023-08-22 20:22:47,592 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8787878787878789].
2023-08-22 20:22:55,783 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.8585858585858587 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:22:55,783 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.8585858585858587 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:23:05,988 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.22222222222222224 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.09090909090909091 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-22 20:23:05,988 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.22222222222222224 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.09090909090909091 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-22 20:23:06,628 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:23:06,629 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:23:08,766 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:23:08,767 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:23:19,147 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.4747474747474748 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.030303030303030304].
2023-08-22 20:23:19,148 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.4747474747474748 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.030303030303030304].
2023-08-22 20:23:27,376 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.5555555555555556 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.030303030303030304].
2023-08-22 20:23:27,377 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.5555555555555556 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.030303030303030304].
2023-08-22 20:23:28,742 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.595959595959596 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.030303030303030304].
2023-08-22 20:23:28,743 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.595959595959596 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.030303030303030304].
2023-08-22 20:23:29,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:23:29,791 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:23:41,510 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3535353535353536, momentum=0.25252525252525254 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.04040404040404041 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.030303030303030304].
2023-08-22 20:23:41,510 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3535353535353536, momentum=0.25252525252525254 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.04040404040404041 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.030303030303030304].
2023-08-22 20:23:49,167 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.21212121212121213 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.030303030303030304].
2023-08-22 20:23:49,167 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.21212121212121213 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.030303030303030304].
2023-08-22 20:23:50,631 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:23:50,632 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:23:52,617 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.18181818181818182 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:23:52,617 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.18181818181818182 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:24:04,760 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:24:04,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:24:11,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:24:11,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:24:31,879 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-22 20:24:31,879 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-22 20:24:52,975 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.5555555555555556 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.030303030303030304].
2023-08-22 20:24:52,975 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.5555555555555556 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.030303030303030304].
2023-08-22 20:25:14,831 INFO: Applying selection operators for generation 9.
2023-08-22 20:25:14,832 INFO: Applying genetic operators for generation 9.
2023-08-22 20:25:14,836 INFO: Evaluating fitness for for generation 9.
2023-08-22 20:25:14,836 INFO: Will evaluate fitness for 44 individuals.
2023-08-22 20:25:15,394 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:25:15,394 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:25:15,468 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8080808080808082 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.4646464646464647].
2023-08-22 20:25:15,468 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8080808080808082 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.4646464646464647].
2023-08-22 20:25:15,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:25:15,522 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:25:15,536 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.5656565656565657 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.26262626262626265].
2023-08-22 20:25:15,536 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.5656565656565657 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.26262626262626265].
2023-08-22 20:25:36,122 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.17171717171717174 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7676767676767677].
2023-08-22 20:25:36,122 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.17171717171717174 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7676767676767677].
2023-08-22 20:25:36,439 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:25:36,439 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:25:38,353 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=1.0 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.6363636363636365].
2023-08-22 20:25:38,353 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=1.0 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.6363636363636365].
2023-08-22 20:25:46,244 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.797979797979798 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.030303030303030304].
2023-08-22 20:25:46,244 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.797979797979798 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.030303030303030304].
2023-08-22 20:25:56,862 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.11111111111111112 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.98989898989899].
2023-08-22 20:25:56,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.11111111111111112 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.98989898989899].
2023-08-22 20:25:59,222 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:25:59,223 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:26:02,145 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.393939393939394].
2023-08-22 20:26:02,146 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.393939393939394].
2023-08-22 20:26:17,663 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8787878787878789, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.030303030303030304].
2023-08-22 20:26:17,664 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8787878787878789, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.030303030303030304].
2023-08-22 20:26:18,849 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.030303030303030304].
2023-08-22 20:26:18,849 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.030303030303030304].
2023-08-22 20:26:19,974 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.4545454545454546].
2023-08-22 20:26:19,974 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.4545454545454546].
2023-08-22 20:26:24,980 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:26:24,981 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:26:40,622 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:26:40,622 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:26:40,685 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:26:40,685 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:26:42,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:26:42,519 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:26:45,403 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.8282828282828284 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.030303030303030304].
2023-08-22 20:26:45,404 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.8282828282828284 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.030303030303030304].
2023-08-22 20:27:01,260 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:01,260 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:01,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:01,366 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:03,367 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.5555555555555556 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.030303030303030304].
2023-08-22 20:27:03,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.5555555555555556 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.030303030303030304].
2023-08-22 20:27:17,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:17,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:22,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:22,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:22,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:22,653 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:26,289 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:26,289 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:37,981 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.030303030303030304].
2023-08-22 20:27:37,981 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.030303030303030304].
2023-08-22 20:27:43,221 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.14141414141414144 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-22 20:27:43,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.14141414141414144 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-22 20:27:43,301 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:43,301 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:46,428 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:46,429 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:56,629 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:27:56,630 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:28:04,059 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:28:04,060 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:28:06,532 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.5555555555555556 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.0].
2023-08-22 20:28:06,533 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.5555555555555556 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.0].
2023-08-22 20:28:07,095 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.25252525252525254 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:28:07,095 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.25252525252525254 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:28:17,576 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.5555555555555556 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.030303030303030304].
2023-08-22 20:28:17,577 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.5555555555555556 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.030303030303030304].
2023-08-22 20:28:25,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:28:25,327 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:28:29,934 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.5353535353535354 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.030303030303030304].
2023-08-22 20:28:29,934 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.5353535353535354 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.030303030303030304].
2023-08-22 20:28:37,483 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=1.0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.4747474747474748].
2023-08-22 20:28:37,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=1.0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.4747474747474748].
2023-08-22 20:28:41,259 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:28:41,259 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:28:46,173 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5252525252525253 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.030303030303030304].
2023-08-22 20:28:46,173 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5252525252525253 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.030303030303030304].
2023-08-22 20:29:00,334 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:29:00,335 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:29:01,513 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:29:01,513 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:29:10,063 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:29:10,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:29:21,037 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.030303030303030304].
2023-08-22 20:29:21,037 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.030303030303030304].
2023-08-22 20:29:42,749 INFO: Applying selection operators for generation 10.
2023-08-22 20:29:42,750 INFO: Applying genetic operators for generation 10.
2023-08-22 20:29:42,753 INFO: Evaluating fitness for for generation 10.
2023-08-22 20:29:42,753 INFO: Will evaluate fitness for 37 individuals.
2023-08-22 20:29:43,304 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:29:43,305 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:29:43,331 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:29:43,331 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:29:43,424 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.07070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4141414141414142].
2023-08-22 20:29:43,425 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.07070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4141414141414142].
2023-08-22 20:29:43,460 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:29:43,460 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:03,429 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:03,429 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:03,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:03,519 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:03,665 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:03,666 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:06,491 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:06,491 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:23,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:23,909 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:24,170 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5353535353535354 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.12121212121212122].
2023-08-22 20:30:24,170 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5353535353535354 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.12121212121212122].
2023-08-22 20:30:24,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.8585858585858587 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.06060606060606061].
2023-08-22 20:30:24,239 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.8585858585858587 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.06060606060606061].
2023-08-22 20:30:27,180 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.787878787878788, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=True ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.31313131313131315 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.030303030303030304].
2023-08-22 20:30:27,180 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.787878787878788, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=True ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.31313131313131315 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.030303030303030304].
2023-08-22 20:30:44,189 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:44,189 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:47,146 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.030303030303030304].
2023-08-22 20:30:47,147 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.030303030303030304].
2023-08-22 20:30:48,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:48,205 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:30:49,322 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.5555555555555556 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.4646464646464647].
2023-08-22 20:30:49,322 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.5555555555555556 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.4646464646464647].
2023-08-22 20:31:05,379 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.9393939393939394 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.7171717171717172 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.030303030303030304].
2023-08-22 20:31:05,379 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.9393939393939394 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.7171717171717172 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.030303030303030304].
2023-08-22 20:31:05,831 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:31:05,832 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:31:08,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.797979797979798 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.030303030303030304].
2023-08-22 20:31:08,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.797979797979798 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.030303030303030304].
2023-08-22 20:31:13,253 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:31:13,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:31:25,642 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.030303030303030304].
2023-08-22 20:31:25,643 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.030303030303030304].
2023-08-22 20:31:26,026 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:31:26,026 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:31:29,542 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.12121212121212122 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.030303030303030304].
2023-08-22 20:31:29,542 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.12121212121212122 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.030303030303030304].
2023-08-22 20:31:34,177 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:31:34,177 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:31:45,998 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.030303030303030304].
2023-08-22 20:31:45,998 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.030303030303030304].
2023-08-22 20:31:46,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9090909090909092 ,epsilon=1e-10 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.10101010101010102].
2023-08-22 20:31:46,799 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9090909090909092 ,epsilon=1e-10 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.10101010101010102].
2023-08-22 20:31:52,934 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.14141414141414144 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-22 20:31:52,934 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.14141414141414144 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-22 20:31:54,916 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.04040404040404041 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.030303030303030304].
2023-08-22 20:31:54,917 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.04040404040404041 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.030303030303030304].
2023-08-22 20:32:07,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:32:07,713 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:32:09,804 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.14141414141414144 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:32:09,804 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.14141414141414144 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:32:14,278 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5252525252525253].
2023-08-22 20:32:14,279 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5252525252525253].
2023-08-22 20:32:18,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:32:18,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:32:28,157 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.14141414141414144 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-22 20:32:28,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.14141414141414144 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.10101010101010102].
2023-08-22 20:32:32,752 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:32:32,753 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:32:35,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:32:35,015 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:32:39,708 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=1.0 ,epsilon=1e-10 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.030303030303030304].
2023-08-22 20:32:39,708 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=1.0 ,epsilon=1e-10 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.030303030303030304].
2023-08-22 20:32:51,455 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:32:51,455 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:33:11,060 INFO: Applying selection operators for generation 11.
2023-08-22 20:33:11,061 INFO: Applying genetic operators for generation 11.
2023-08-22 20:33:11,065 INFO: Evaluating fitness for for generation 11.
2023-08-22 20:33:11,065 INFO: Will evaluate fitness for 46 individuals.
2023-08-22 20:33:11,613 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.24242424242424243 ,epsilon=0.0007070707363636364 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.20202020202020204].
2023-08-22 20:33:11,614 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.24242424242424243 ,epsilon=0.0007070707363636364 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.20202020202020204].
2023-08-22 20:33:11,615 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.5151515151515152 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.030303030303030304].
2023-08-22 20:33:11,615 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.5151515151515152 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.030303030303030304].
2023-08-22 20:33:11,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004445000000000001 ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.6363636363636365 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.24242424242424243].
2023-08-22 20:33:11,774 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004445000000000001 ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.6363636363636365 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.24242424242424243].
2023-08-22 20:33:11,779 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.797979797979798 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.21212121212121213].
2023-08-22 20:33:11,779 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.797979797979798 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.21212121212121213].
2023-08-22 20:33:35,169 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.23232323232323235, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0023240000000000005 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.5858585858585859].
2023-08-22 20:33:35,169 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.23232323232323235, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0023240000000000005 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.5858585858585859].
2023-08-22 20:33:35,268 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:33:35,269 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:33:35,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:33:35,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:33:35,979 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.3535353535353536 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8484848484848485].
2023-08-22 20:33:35,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.3535353535353536 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8484848484848485].
2023-08-22 20:33:55,476 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:33:55,477 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:33:55,583 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:33:55,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:33:56,835 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:33:56,835 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:00,298 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.43434343434343436 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.05050505050505051].
2023-08-22 20:34:00,299 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.43434343434343436 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.05050505050505051].
2023-08-22 20:34:15,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:15,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:15,813 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:15,813 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:17,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:17,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:24,414 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:24,415 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:36,379 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:36,379 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:36,656 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.7676767676767677 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6060606060606061].
2023-08-22 20:34:36,656 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.7676767676767677 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.6060606060606061].
2023-08-22 20:34:38,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:38,070 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:45,691 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.595959595959596 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.09090909090909091].
2023-08-22 20:34:45,691 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.595959595959596 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.09090909090909091].
2023-08-22 20:34:56,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:56,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:59,221 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:59,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:59,626 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.14141414141414144 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:34:59,626 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.14141414141414144 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:35:09,391 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:35:09,391 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:35:16,882 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:35:16,882 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:35:19,975 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.797979797979798 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.030303030303030304].
2023-08-22 20:35:19,975 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.797979797979798 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.030303030303030304].
2023-08-22 20:35:20,189 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.5555555555555556 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:35:20,189 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.5555555555555556 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:35:30,032 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.18181818181818182 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7373737373737375].
2023-08-22 20:35:30,032 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.18181818181818182 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7373737373737375].
2023-08-22 20:35:37,606 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:35:37,606 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:35:38,911 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.9595959595959597 ,epsilon=0.0008585858727272726 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.7777777777777778].
2023-08-22 20:35:38,911 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.9595959595959597 ,epsilon=0.0008585858727272726 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.7777777777777778].
2023-08-22 20:35:40,993 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5555555555555556 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.030303030303030304].
2023-08-22 20:35:40,993 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5555555555555556 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.030303030303030304].
2023-08-22 20:35:53,851 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.030303030303030304].
2023-08-22 20:35:53,852 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.030303030303030304].
2023-08-22 20:35:57,927 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:35:57,927 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:01,162 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:01,163 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:04,499 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:04,499 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:17,164 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:17,165 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:18,174 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0015160000000000002 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.030303030303030304].
2023-08-22 20:36:18,175 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0015160000000000002 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.030303030303030304].
2023-08-22 20:36:22,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.5555555555555556 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.6464646464646465].
2023-08-22 20:36:22,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.5555555555555556 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.6464646464646465].
2023-08-22 20:36:24,915 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:24,915 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:37,877 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:37,877 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:42,343 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:42,343 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:45,154 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:45,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:46,035 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:36:46,035 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:37:02,670 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:37:02,671 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:37:06,035 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:37:06,035 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:37:06,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:37:06,789 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:37:26,460 INFO: Applying selection operators for generation 12.
2023-08-22 20:37:26,461 INFO: Applying genetic operators for generation 12.
2023-08-22 20:37:26,464 INFO: Evaluating fitness for for generation 12.
2023-08-22 20:37:26,464 INFO: Will evaluate fitness for 39 individuals.
2023-08-22 20:37:26,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.797979797979798 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.030303030303030304].
2023-08-22 20:37:26,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.797979797979798 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.030303030303030304].
2023-08-22 20:37:27,016 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.8686868686868687 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6767676767676768].
2023-08-22 20:37:27,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.8686868686868687 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6767676767676768].
2023-08-22 20:37:27,024 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.5555555555555556 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:37:27,024 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.5555555555555556 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:37:27,149 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.25252525252525254 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.05050505050505051].
2023-08-22 20:37:27,149 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.25252525252525254 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.05050505050505051].
2023-08-22 20:37:47,951 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8585858585858587].
2023-08-22 20:37:47,951 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8585858585858587].
2023-08-22 20:37:49,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:37:49,633 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:37:49,993 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:37:49,993 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:37:50,875 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:37:50,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:10,375 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 20:38:10,375 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 20:38:10,663 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:10,663 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:11,300 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.7272727272727273 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.32323232323232326].
2023-08-22 20:38:11,301 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.7272727272727273 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.32323232323232326].
2023-08-22 20:38:11,546 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:11,546 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:30,891 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:30,891 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:32,188 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5858585858585859 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.030303030303030304].
2023-08-22 20:38:32,189 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5858585858585859 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.030303030303030304].
2023-08-22 20:38:33,932 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:33,932 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:35,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:35,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:51,150 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.5353535353535354 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7373737373737375].
2023-08-22 20:38:51,150 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.5353535353535354 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7373737373737375].
2023-08-22 20:38:51,716 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:51,717 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:54,223 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:54,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:38:56,627 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.48484848484848486 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.030303030303030304].
2023-08-22 20:38:56,627 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.48484848484848486 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.030303030303030304].
2023-08-22 20:39:12,682 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:12,682 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:12,913 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:12,913 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:14,379 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:14,379 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:21,059 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:21,059 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:33,288 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:33,288 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:33,737 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9494949494949496].
2023-08-22 20:39:33,737 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9494949494949496].
2023-08-22 20:39:35,236 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:35,237 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:41,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:41,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:53,783 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:53,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:55,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:55,536 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:56,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:39:56,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:40:02,880 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.010101010101010102].
2023-08-22 20:40:02,880 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.010101010101010102].
2023-08-22 20:40:14,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:40:14,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:40:15,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.13131313131313133 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:40:15,799 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.13131313131313133 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:40:17,019 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.07070707070707072 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.030303030303030304].
2023-08-22 20:40:17,019 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.07070707070707072 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.030303030303030304].
2023-08-22 20:40:26,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:40:26,426 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:40:35,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.5555555555555556 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.98989898989899].
2023-08-22 20:40:35,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.5555555555555556 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.98989898989899].
2023-08-22 20:40:59,117 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:40:59,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:41:20,118 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:41:20,118 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:41:39,847 INFO: Applying selection operators for generation 13.
2023-08-22 20:41:39,848 INFO: Applying genetic operators for generation 13.
2023-08-22 20:41:39,851 INFO: Evaluating fitness for for generation 13.
2023-08-22 20:41:39,851 INFO: Will evaluate fitness for 39 individuals.
2023-08-22 20:41:40,417 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:41:40,417 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:41:40,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.6060606060606061 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.6262626262626263].
2023-08-22 20:41:40,433 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.6060606060606061 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.6262626262626263].
2023-08-22 20:41:40,433 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:41:40,433 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:41:40,456 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:41:40,457 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:00,634 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.797979797979798 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.5555555555555556 ,epsilon=0.0002828283545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.030303030303030304].
2023-08-22 20:42:00,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.797979797979798 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.5555555555555556 ,epsilon=0.0002828283545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.030303030303030304].
2023-08-22 20:42:00,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.686868686868687 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=1.0 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:00,918 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.686868686868687 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=1.0 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:01,568 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:01,568 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:03,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009596 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.25252525252525254 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.27272727272727276].
2023-08-22 20:42:03,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009596 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.25252525252525254 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.27272727272727276].
2023-08-22 20:42:22,069 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:22,070 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:23,085 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:23,086 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:24,260 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:24,260 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:28,217 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:28,217 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:42,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:42,404 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:43,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:43,861 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:45,387 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.5555555555555556 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:45,387 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.5555555555555556 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:42:48,571 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0.04040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.5555555555555556 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.17171717171717174].
2023-08-22 20:42:48,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0.04040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.5555555555555556 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.17171717171717174].
2023-08-22 20:43:02,707 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.7373737373737375 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.030303030303030304].
2023-08-22 20:43:02,707 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.7373737373737375 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.030303030303030304].
2023-08-22 20:43:04,372 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006162000000000001 ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.22222222222222224 ,epsilon=0.001 ,centered=False ,beta_1=0.21212121212121213 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.5151515151515152].
2023-08-22 20:43:04,372 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006162000000000001 ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.22222222222222224 ,epsilon=0.001 ,centered=False ,beta_1=0.21212121212121213 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.5151515151515152].
2023-08-22 20:43:09,422 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:43:09,422 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:43:12,838 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.020202020202020204 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:43:12,838 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.020202020202020204 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:43:26,516 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=1e-10 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.030303030303030304].
2023-08-22 20:43:26,516 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=1e-10 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.030303030303030304].
2023-08-22 20:43:28,237 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.20202020202020204 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.030303030303030304].
2023-08-22 20:43:28,237 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.20202020202020204 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.030303030303030304].
2023-08-22 20:43:29,862 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:43:29,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:43:36,466 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:43:36,466 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:43:49,327 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.08080808080808081].
2023-08-22 20:43:49,327 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.08080808080808081].
2023-08-22 20:43:50,921 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:43:50,922 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:43:51,161 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:43:51,162 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:43:56,840 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:43:56,840 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:44:07,411 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.030303030303030304].
2023-08-22 20:44:07,412 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.030303030303030304].
2023-08-22 20:44:11,503 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.030303030303030304].
2023-08-22 20:44:11,503 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.030303030303030304].
2023-08-22 20:44:12,078 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9494949494949496].
2023-08-22 20:44:12,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.9494949494949496].
2023-08-22 20:44:17,840 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.43434343434343436, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.030303030303030304].
2023-08-22 20:44:17,840 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.43434343434343436, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.030303030303030304].
2023-08-22 20:44:31,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:44:31,327 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:44:31,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:44:31,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:44:32,216 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6161616161616162, momentum=0.5757575757575758 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.030303030303030304].
2023-08-22 20:44:32,216 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6161616161616162, momentum=0.5757575757575758 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.030303030303030304].
2023-08-22 20:44:51,082 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.18181818181818182 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7676767676767677].
2023-08-22 20:44:51,082 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.18181818181818182 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7676767676767677].
2023-08-22 20:44:51,932 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.15151515151515152 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.27272727272727276].
2023-08-22 20:44:51,932 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.15151515151515152 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.27272727272727276].
2023-08-22 20:45:15,492 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:45:15,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:45:35,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:45:35,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:45:55,426 INFO: Applying selection operators for generation 14.
2023-08-22 20:45:55,427 INFO: Applying genetic operators for generation 14.
2023-08-22 20:45:55,430 INFO: Evaluating fitness for for generation 14.
2023-08-22 20:45:55,430 INFO: Will evaluate fitness for 34 individuals.
2023-08-22 20:45:56,000 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:45:56,000 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:45:56,008 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=1.0 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.26262626262626265].
2023-08-22 20:45:56,008 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=1.0 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.26262626262626265].
2023-08-22 20:45:56,010 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:45:56,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:45:56,019 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6262626262626263 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.0 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.030303030303030304].
2023-08-22 20:45:56,019 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6262626262626263 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.0 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.030303030303030304].
2023-08-22 20:46:16,270 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.030303030303030304].
2023-08-22 20:46:16,271 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.030303030303030304].
2023-08-22 20:46:16,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:46:16,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:46:19,646 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:46:19,646 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:46:20,183 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:46:20,183 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:46:36,805 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:46:36,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:46:39,227 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:46:39,227 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:46:39,966 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:46:39,967 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:46:40,489 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.5555555555555556 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.030303030303030304].
2023-08-22 20:46:40,490 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.5555555555555556 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.030303030303030304].
2023-08-22 20:46:57,168 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:46:57,168 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:00,107 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:00,107 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:00,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.4444444444444445].
2023-08-22 20:47:00,214 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.4444444444444445].
2023-08-22 20:47:03,250 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:03,251 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:17,974 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:17,974 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:20,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:20,625 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:23,374 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.18181818181818182 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.7676767676767677].
2023-08-22 20:47:23,374 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.18181818181818182 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.7676767676767677].
2023-08-22 20:47:23,468 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:23,468 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:38,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:38,452 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:40,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.8181818181818182 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.5252525252525253 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.030303030303030304].
2023-08-22 20:47:40,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.8181818181818182 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.5252525252525253 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.030303030303030304].
2023-08-22 20:47:44,450 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.09090909090909091 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.030303030303030304].
2023-08-22 20:47:44,450 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.09090909090909091 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.030303030303030304].
2023-08-22 20:47:47,913 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:47,914 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:47:58,844 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005960000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4040404040404041].
2023-08-22 20:47:58,845 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005960000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4040404040404041].
2023-08-22 20:48:04,441 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.98989898989899 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:48:04,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.98989898989899 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:48:04,733 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8686868686868687].
2023-08-22 20:48:04,733 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8686868686868687].
2023-08-22 20:48:08,156 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:48:08,156 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:48:22,413 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.6262626262626263 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:48:22,413 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.6262626262626263 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:48:27,603 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7474747474747475, momentum=0.8181818181818182 ,nesterov=False ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.5757575757575758].
2023-08-22 20:48:27,603 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7474747474747475, momentum=0.8181818181818182 ,nesterov=False ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.5757575757575758].
2023-08-22 20:48:28,805 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:48:28,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:48:45,998 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:48:45,998 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:48:49,414 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:48:49,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:48:52,083 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.07070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8181818181818182].
2023-08-22 20:48:52,083 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.07070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8181818181818182].
2023-08-22 20:49:14,837 INFO: Applying selection operators for generation 15.
2023-08-22 20:49:14,838 INFO: Applying genetic operators for generation 15.
2023-08-22 20:49:14,841 INFO: Evaluating fitness for for generation 15.
2023-08-22 20:49:14,841 INFO: Will evaluate fitness for 40 individuals.
2023-08-22 20:49:15,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:49:15,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:49:15,433 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.5555555555555556 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.030303030303030304].
2023-08-22 20:49:15,433 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.5555555555555556 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.030303030303030304].
2023-08-22 20:49:15,441 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.5555555555555556 ,epsilon=0.00040404046363636356 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.020202020202020204].
2023-08-22 20:49:15,441 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.5555555555555556 ,epsilon=0.00040404046363636356 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.020202020202020204].
2023-08-22 20:49:15,472 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:49:15,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:49:35,938 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:49:35,938 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:49:36,515 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.36363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.030303030303030304].
2023-08-22 20:49:36,516 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.36363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.030303030303030304].
2023-08-22 20:49:38,937 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.8383838383838385 ,epsilon=1e-10 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.07070707070707072].
2023-08-22 20:49:38,937 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.8383838383838385 ,epsilon=1e-10 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.07070707070707072].
2023-08-22 20:49:39,081 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.6767676767676768, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.030303030303030304].
2023-08-22 20:49:39,081 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.6767676767676768, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.030303030303030304].
2023-08-22 20:49:56,157 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:49:56,157 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:49:56,496 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:49:56,497 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:49:56,942 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6262626262626263, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6363636363636365 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6565656565656566].
2023-08-22 20:49:56,942 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6262626262626263, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6363636363636365 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6565656565656566].
2023-08-22 20:50:04,313 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:04,313 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:16,138 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:16,138 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:17,006 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:17,006 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:21,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:21,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:24,842 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:24,842 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:36,265 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:36,265 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:37,281 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.26262626262626265 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7171717171717172].
2023-08-22 20:50:37,281 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.26262626262626265 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7171717171717172].
2023-08-22 20:50:41,800 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:41,801 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:45,205 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:45,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:56,969 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:50:56,969 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:51:01,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.5555555555555556 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.030303030303030304].
2023-08-22 20:51:01,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.5555555555555556 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.030303030303030304].
2023-08-22 20:51:02,096 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:51:02,096 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:51:06,237 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6060606060606061 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:51:06,237 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6060606060606061 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:51:17,223 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.5555555555555556].
2023-08-22 20:51:17,223 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.5555555555555556].
2023-08-22 20:51:22,325 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.797979797979798 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.98989898989899 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.5151515151515152].
2023-08-22 20:51:22,325 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.797979797979798 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.98989898989899 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.5151515151515152].
2023-08-22 20:51:23,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:51:23,015 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:51:39,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:51:39,090 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:51:40,914 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:51:40,914 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:51:42,436 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.10101010101010102 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.5555555555555556].
2023-08-22 20:51:42,436 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.10101010101010102 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.5555555555555556].
2023-08-22 20:51:43,308 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:51:43,308 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:51:59,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.030303030303030304].
2023-08-22 20:51:59,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.030303030303030304].
2023-08-22 20:52:01,601 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:52:01,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:52:03,594 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:52:03,594 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:52:06,823 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:52:06,824 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:52:21,965 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:52:21,965 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:52:23,805 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:52:23,805 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:52:23,831 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:52:23,831 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:52:41,991 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:52:41,991 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:53:02,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:53:02,080 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:53:21,301 INFO: Applying selection operators for generation 16.
2023-08-22 20:53:21,301 INFO: Applying genetic operators for generation 16.
2023-08-22 20:53:21,304 INFO: Evaluating fitness for for generation 16.
2023-08-22 20:53:21,304 INFO: Will evaluate fitness for 39 individuals.
2023-08-22 20:53:21,881 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:53:21,881 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:53:21,895 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.030303030303030304].
2023-08-22 20:53:21,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005556000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8383838383838385 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.030303030303030304].
2023-08-22 20:53:21,895 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.030303030303030304].
2023-08-22 20:53:21,895 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005556000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8383838383838385 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.030303030303030304].
2023-08-22 20:53:21,961 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:53:21,961 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:53:42,127 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.5858585858585859].
2023-08-22 20:53:42,127 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.5858585858585859].
2023-08-22 20:53:45,227 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0023240000000000005 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.030303030303030304].
2023-08-22 20:53:45,228 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0023240000000000005 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.030303030303030304].
2023-08-22 20:53:46,452 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.98989898989899].
2023-08-22 20:53:46,452 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.98989898989899].
2023-08-22 20:53:54,588 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:53:54,588 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:05,434 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:05,434 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:06,739 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.11111111111111112].
2023-08-22 20:54:06,739 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.11111111111111112].
2023-08-22 20:54:15,915 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:15,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:18,579 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:18,579 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:26,334 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.030303030303030304].
2023-08-22 20:54:26,335 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.030303030303030304].
2023-08-22 20:54:26,934 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:26,934 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:36,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:36,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:38,966 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.030303030303030304].
2023-08-22 20:54:38,967 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.030303030303030304].
2023-08-22 20:54:46,511 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.030303030303030304].
2023-08-22 20:54:46,512 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.030303030303030304].
2023-08-22 20:54:47,319 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:47,319 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:56,958 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:56,958 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:58,760 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:54:58,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:07,678 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:07,678 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:09,577 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:09,578 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:17,417 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=False ,ema_momentum=1.0 ,rho=0.07070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4444444444444445].
2023-08-22 20:55:17,418 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=False ,ema_momentum=1.0 ,rho=0.07070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4444444444444445].
2023-08-22 20:55:19,892 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:19,892 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:27,925 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:27,926 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:30,233 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:30,233 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:40,426 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.36363636363636365, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.393939393939394 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.7373737373737375].
2023-08-22 20:55:40,426 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.36363636363636365, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.393939393939394 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.7373737373737375].
2023-08-22 20:55:41,602 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:41,602 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:48,850 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.36363636363636365 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:48,850 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.36363636363636365 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:50,485 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:55:50,486 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:56:02,088 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:56:02,088 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:56:10,791 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:56:10,791 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:56:12,866 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.030303030303030304].
2023-08-22 20:56:12,867 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.030303030303030304].
2023-08-22 20:56:21,959 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:56:21,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:56:22,540 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:56:22,540 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:56:31,005 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:56:31,005 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:56:33,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:56:33,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:56:51,658 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:56:51,658 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:57:11,515 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.030303030303030304].
2023-08-22 20:57:11,515 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.030303030303030304].
2023-08-22 20:57:33,869 INFO: Applying selection operators for generation 17.
2023-08-22 20:57:33,869 INFO: Applying genetic operators for generation 17.
2023-08-22 20:57:33,873 INFO: Evaluating fitness for for generation 17.
2023-08-22 20:57:33,873 INFO: Will evaluate fitness for 39 individuals.
2023-08-22 20:57:34,423 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.494949494949495 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.98989898989899].
2023-08-22 20:57:34,423 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.494949494949495 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.98989898989899].
2023-08-22 20:57:34,521 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:57:34,521 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:57:34,535 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.14141414141414144].
2023-08-22 20:57:34,535 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.14141414141414144].
2023-08-22 20:57:34,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:57:34,536 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:57:55,190 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:57:55,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:57:55,335 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9292929292929294 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8282828282828284].
2023-08-22 20:57:55,335 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9292929292929294 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8282828282828284].
2023-08-22 20:57:58,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.4040404040404041 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.393939393939394 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:57:58,644 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.4040404040404041 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.393939393939394 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:57:59,165 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:57:59,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:58:15,648 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:58:15,648 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:58:18,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:58:18,954 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:58:19,770 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.030303030303030304].
2023-08-22 20:58:19,770 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.030303030303030304].
2023-08-22 20:58:22,650 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:58:22,650 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:58:36,020 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:58:36,021 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:58:39,117 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.37373737373737376 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.10101010101010102].
2023-08-22 20:58:39,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.37373737373737376 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.10101010101010102].
2023-08-22 20:58:40,082 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:58:40,082 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:58:42,869 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:58:42,869 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:58:57,182 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:58:57,182 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:00,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.494949494949495 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:00,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.494949494949495 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:01,836 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.9191919191919192 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 20:59:01,837 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.9191919191919192 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 20:59:03,889 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:03,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:17,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:17,713 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:22,199 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:22,199 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:24,251 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.37373737373737376 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.030303030303030304].
2023-08-22 20:59:24,252 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.37373737373737376 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.030303030303030304].
2023-08-22 20:59:24,369 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.7070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.5858585858585859].
2023-08-22 20:59:24,369 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.7070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.5858585858585859].
2023-08-22 20:59:38,120 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:38,120 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:42,551 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:42,551 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:48,397 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:48,397 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:49,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:49,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 20:59:59,191 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-22 20:59:59,191 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.595959595959596].
2023-08-22 21:00:02,869 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9292929292929294 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.030303030303030304].
2023-08-22 21:00:02,869 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9292929292929294 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.030303030303030304].
2023-08-22 21:00:09,067 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:00:09,067 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:00:10,279 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:00:10,279 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:00:17,916 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:00:17,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:00:27,168 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:00:27,169 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:00:29,452 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.22222222222222224 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.030303030303030304].
2023-08-22 21:00:29,452 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.22222222222222224 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.030303030303030304].
2023-08-22 21:00:30,849 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:00:30,849 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:00:38,308 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:00:38,308 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:00:58,626 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.7676767676767677 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.33333333333333337].
2023-08-22 21:00:58,627 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.7676767676767677 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.33333333333333337].
2023-08-22 21:01:21,670 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.5555555555555556 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.030303030303030304].
2023-08-22 21:01:21,670 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.5555555555555556 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.030303030303030304].
2023-08-22 21:01:44,414 INFO: Applying selection operators for generation 18.
2023-08-22 21:01:44,414 INFO: Applying genetic operators for generation 18.
2023-08-22 21:01:44,418 INFO: Evaluating fitness for for generation 18.
2023-08-22 21:01:44,418 INFO: Will evaluate fitness for 35 individuals.
2023-08-22 21:01:44,947 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:01:44,948 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:01:44,978 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:01:44,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:01:45,083 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.4747474747474748 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.33333333333333337 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:01:45,083 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.4747474747474748 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.33333333333333337 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:01:45,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.030303030303030304].
2023-08-22 21:01:45,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.030303030303030304].
2023-08-22 21:02:05,024 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004950000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.38383838383838387 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.98989898989899 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.9696969696969697].
2023-08-22 21:02:05,024 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004950000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.38383838383838387 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.98989898989899 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.9696969696969697].
2023-08-22 21:02:05,114 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.5555555555555556 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.9696969696969697].
2023-08-22 21:02:05,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.5555555555555556 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.9696969696969697].
2023-08-22 21:02:08,197 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:02:08,197 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:02:08,689 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.030303030303030304].
2023-08-22 21:02:08,689 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.030303030303030304].
2023-08-22 21:02:29,396 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:02:29,396 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:02:29,470 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:02:29,470 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:02:29,588 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:02:29,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:02:29,997 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.030303030303030304].
2023-08-22 21:02:29,997 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.030303030303030304].
2023-08-22 21:02:48,762 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.888888888888889 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.030303030303030304].
2023-08-22 21:02:48,762 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.888888888888889 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.030303030303030304].
2023-08-22 21:02:49,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.09090909090909091 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.030303030303030304].
2023-08-22 21:02:49,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.09090909090909091 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.030303030303030304].
2023-08-22 21:02:50,012 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.787878787878788 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.393939393939394].
2023-08-22 21:02:50,013 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.787878787878788 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.393939393939394].
2023-08-22 21:02:50,132 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.5353535353535354 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.21212121212121213 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9090909090909092].
2023-08-22 21:02:50,132 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.5353535353535354 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.21212121212121213 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9090909090909092].
2023-08-22 21:03:12,932 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:12,932 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:13,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:13,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:13,686 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.4141414141414142 ,nesterov=True ,amsgrad=True ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.29292929292929293].
2023-08-22 21:03:13,686 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.4141414141414142 ,nesterov=True ,amsgrad=True ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.29292929292929293].
2023-08-22 21:03:13,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:13,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:33,768 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.5555555555555556 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:33,768 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.5555555555555556 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:33,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:33,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:33,915 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.030303030303030304].
2023-08-22 21:03:33,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.030303030303030304].
2023-08-22 21:03:34,336 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:34,336 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:54,766 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.797979797979798 ,nesterov=True ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.21212121212121213 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.030303030303030304].
2023-08-22 21:03:54,766 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.797979797979798 ,nesterov=True ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.21212121212121213 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.030303030303030304].
2023-08-22 21:03:54,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:54,884 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:55,011 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:55,011 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:03:57,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.29292929292929293].
2023-08-22 21:03:57,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.29292929292929293].
2023-08-22 21:04:15,255 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:04:15,255 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:04:15,334 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:04:15,334 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:04:18,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:04:18,538 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:04:21,470 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.5555555555555556 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.030303030303030304].
2023-08-22 21:04:21,471 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.5555555555555556 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.030303030303030304].
2023-08-22 21:04:35,455 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5757575757575758 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.030303030303030304].
2023-08-22 21:04:35,456 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5757575757575758 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.030303030303030304].
2023-08-22 21:04:36,235 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.15151515151515152 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.030303030303030304].
2023-08-22 21:04:36,235 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.15151515151515152 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.030303030303030304].
2023-08-22 21:04:38,253 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:04:38,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:07,076 INFO: Applying selection operators for generation 19.
2023-08-22 21:05:07,076 INFO: Applying genetic operators for generation 19.
2023-08-22 21:05:07,079 INFO: Evaluating fitness for for generation 19.
2023-08-22 21:05:07,079 INFO: Will evaluate fitness for 42 individuals.
2023-08-22 21:05:07,640 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:07,640 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:07,657 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:07,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:07,677 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-22 21:05:07,677 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.0 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-22 21:05:07,703 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:07,703 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:27,818 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.5555555555555556 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:27,819 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.5555555555555556 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:27,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:27,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:28,017 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:28,017 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:28,125 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:28,125 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:48,207 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:48,207 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:48,251 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:48,252 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:48,609 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:48,610 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:53,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:05:53,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:06:08,188 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.9696969696969697 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.5151515151515152].
2023-08-22 21:06:08,188 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.9696969696969697 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.5151515151515152].
2023-08-22 21:06:08,387 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009798000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.42424242424242425 ,epsilon=0.0002222223 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-22 21:06:08,388 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009798000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.42424242424242425 ,epsilon=0.0002222223 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-22 21:06:09,123 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.32323232323232326 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.030303030303030304].
2023-08-22 21:06:09,123 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.32323232323232326 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.030303030303030304].
2023-08-22 21:06:13,846 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:06:13,847 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:06:32,519 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6363636363636365 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.24242424242424243].
2023-08-22 21:06:32,519 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6363636363636365 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.24242424242424243].
2023-08-22 21:06:32,674 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:06:32,674 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:06:33,641 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.030303030303030304].
2023-08-22 21:06:33,641 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.030303030303030304].
2023-08-22 21:06:34,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:06:34,075 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:06:52,929 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:06:52,929 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:06:54,946 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:06:54,946 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:06:56,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:06:56,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:05,480 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:05,480 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:13,218 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:13,218 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:15,271 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5454545454545455, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.030303030303030304].
2023-08-22 21:07:15,271 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5454545454545455, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.030303030303030304].
2023-08-22 21:07:17,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.5555555555555556 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.5050505050505051].
2023-08-22 21:07:17,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.5555555555555556 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.5050505050505051].
2023-08-22 21:07:25,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:25,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:33,545 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:33,545 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:36,215 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:36,215 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:41,298 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.37373737373737376 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:41,299 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.37373737373737376 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:46,641 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:46,641 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:54,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:54,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:07:57,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.32323232323232326].
2023-08-22 21:07:57,076 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.32323232323232326].
2023-08-22 21:08:02,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:08:02,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:08:07,049 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.21212121212121213].
2023-08-22 21:08:07,049 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.21212121212121213].
2023-08-22 21:08:15,250 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:08:15,251 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:08:17,429 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.5555555555555556 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:08:17,429 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.5555555555555556 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:08:35,462 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:08:35,463 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:08:40,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:08:40,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:08:56,122 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:08:56,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:09:00,757 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.030303030303030304].
2023-08-22 21:09:00,758 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.030303030303030304].
2023-08-22 21:09:24,163 INFO: Applying selection operators for generation 20.
2023-08-22 21:09:24,163 INFO: Applying genetic operators for generation 20.
2023-08-22 21:09:24,166 INFO: Evaluating fitness for for generation 20.
2023-08-22 21:09:24,166 INFO: Will evaluate fitness for 42 individuals.
2023-08-22 21:09:24,744 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:09:24,744 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:09:24,748 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:09:24,749 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:09:24,755 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5252525252525253 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.030303030303030304].
2023-08-22 21:09:24,755 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5252525252525253 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.030303030303030304].
2023-08-22 21:09:24,760 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:09:24,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:09:44,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.22222222222222224 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 21:09:44,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.22222222222222224 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.030303030303030304].
2023-08-22 21:09:44,976 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:09:44,976 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:09:44,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:09:44,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:09:48,831 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:09:48,831 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:10:05,325 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=1.0 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.030303030303030304].
2023-08-22 21:10:05,325 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=1.0 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.030303030303030304].
2023-08-22 21:10:05,734 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:10:05,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:10:08,149 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.12121212121212122 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.5555555555555556 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.030303030303030304].
2023-08-22 21:10:08,150 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.12121212121212122 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.5555555555555556 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.030303030303030304].
2023-08-22 21:10:09,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.5555555555555556 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.030303030303030304].
2023-08-22 21:10:09,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.5555555555555556 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.030303030303030304].
2023-08-22 21:10:25,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:10:25,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:10:32,742 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:10:32,743 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:10:32,976 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.9292929292929294 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.32323232323232326].
2023-08-22 21:10:32,976 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.9292929292929294 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.32323232323232326].
2023-08-22 21:10:39,740 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:10:39,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:10:46,141 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.5353535353535354 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.030303030303030304].
2023-08-22 21:10:46,141 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.5353535353535354 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.030303030303030304].
2023-08-22 21:10:53,696 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:10:53,696 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:10:56,488 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.010101010101010102].
2023-08-22 21:10:56,488 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.010101010101010102].
2023-08-22 21:11:00,214 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:00,214 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:10,435 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.2828282828282829 ,nesterov=True ,amsgrad=True ,weight_decay=0.0035360000000000005 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6060606060606061 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-22 21:11:10,435 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.2828282828282829 ,nesterov=True ,amsgrad=True ,weight_decay=0.0035360000000000005 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6060606060606061 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.7474747474747475].
2023-08-22 21:11:14,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:14,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:20,742 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:20,742 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:21,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:21,328 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:34,711 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:34,711 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:35,271 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.030303030303030304].
2023-08-22 21:11:35,271 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.030303030303030304].
2023-08-22 21:11:41,588 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:41,588 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:42,020 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:42,020 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:55,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:55,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:57,879 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:11:57,879 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:02,556 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7777777777777778, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=True ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.06060606060606061 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.12121212121212122].
2023-08-22 21:12:02,556 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7777777777777778, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=True ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.06060606060606061 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.12121212121212122].
2023-08-22 21:12:02,653 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.5858585858585859 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:02,654 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.5858585858585859 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:16,220 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:16,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:18,094 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:18,094 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:27,119 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:27,119 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:27,122 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:27,122 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:36,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:36,806 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:38,822 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:38,822 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:57,089 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:57,089 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:59,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:12:59,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:13:17,868 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:13:17,868 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:13:19,081 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.030303030303030304].
2023-08-22 21:13:19,082 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.030303030303030304].
2023-08-22 21:13:38,214 INFO: Applying selection operators for generation 21.
2023-08-22 21:13:38,215 INFO: Applying genetic operators for generation 21.
2023-08-22 21:13:38,218 INFO: Evaluating fitness for for generation 21.
2023-08-22 21:13:38,218 INFO: Will evaluate fitness for 32 individuals.
2023-08-22 21:13:38,758 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:13:38,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:13:38,846 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:13:38,846 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:13:38,849 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.4141414141414142 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.030303030303030304].
2023-08-22 21:13:38,849 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.4141414141414142 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.030303030303030304].
2023-08-22 21:13:38,883 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.24242424242424243].
2023-08-22 21:13:38,883 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.24242424242424243].
2023-08-22 21:13:58,905 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.030303030303030304].
2023-08-22 21:13:58,905 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.030303030303030304].
2023-08-22 21:13:59,710 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.7676767676767677 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.030303030303030304].
2023-08-22 21:13:59,711 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.7676767676767677 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.030303030303030304].
2023-08-22 21:14:04,274 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:04,274 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:04,845 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:04,845 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:22,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.29292929292929293 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.030303030303030304].
2023-08-22 21:14:22,384 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.29292929292929293 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.030303030303030304].
2023-08-22 21:14:22,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:22,923 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:24,698 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:24,698 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:25,329 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:25,329 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:43,925 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:43,926 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:44,936 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.23232323232323235].
2023-08-22 21:14:44,936 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.23232323232323235].
2023-08-22 21:14:45,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:45,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:46,296 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:14:46,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:04,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:04,364 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:04,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:04,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:06,494 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:06,494 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:06,985 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:06,985 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:24,590 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:24,590 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:24,684 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:24,684 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:27,319 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:27,320 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:27,456 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5555555555555556 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.8585858585858587].
2023-08-22 21:15:27,457 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5555555555555556 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.8585858585858587].
2023-08-22 21:15:44,793 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:44,794 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:45,087 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:45,087 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:47,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:47,625 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:15:51,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.7575757575757577 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.030303030303030304].
2023-08-22 21:15:51,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.7575757575757577 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.030303030303030304].
2023-08-22 21:16:05,309 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.36363636363636365 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.030303030303030304].
2023-08-22 21:16:05,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.36363636363636365 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.030303030303030304].
2023-08-22 21:16:05,909 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.42424242424242425 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.030303030303030304].
2023-08-22 21:16:05,910 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.42424242424242425 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.030303030303030304].
2023-08-22 21:16:07,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:16:07,299 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:16:15,365 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:16:15,365 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:16:35,880 INFO: Applying selection operators for generation 22.
2023-08-22 21:16:35,880 INFO: Applying genetic operators for generation 22.
2023-08-22 21:16:35,884 INFO: Evaluating fitness for for generation 22.
2023-08-22 21:16:35,884 INFO: Will evaluate fitness for 43 individuals.
2023-08-22 21:16:36,435 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:16:36,435 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:16:36,488 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.393939393939394 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5151515151515152].
2023-08-22 21:16:36,489 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.393939393939394 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5151515151515152].
2023-08-22 21:16:36,508 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5050505050505051 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.030303030303030304].
2023-08-22 21:16:36,508 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5050505050505051 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.030303030303030304].
2023-08-22 21:16:36,537 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:16:36,537 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:16:56,821 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:16:56,821 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:16:57,374 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:16:57,375 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:16:59,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:16:59,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:17:10,802 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:17:10,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:17:17,217 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:17:17,217 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:17:17,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.0 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6666666666666667].
2023-08-22 21:17:17,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.0 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6666666666666667].
2023-08-22 21:17:20,541 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.24242424242424243 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.0 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.020202020202020204].
2023-08-22 21:17:20,541 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.24242424242424243 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.0 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.020202020202020204].
2023-08-22 21:17:31,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.11111111111111112 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.9696969696969697].
2023-08-22 21:17:31,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.11111111111111112 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.9696969696969697].
2023-08-22 21:17:37,361 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:17:37,362 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:17:42,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.32323232323232326 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.030303030303030304].
2023-08-22 21:17:42,071 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.32323232323232326 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.030303030303030304].
2023-08-22 21:17:44,872 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5252525252525253, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.07070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:17:44,872 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5252525252525253, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.07070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:17:56,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:17:56,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:17:58,117 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:17:58,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:18:06,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:18:06,937 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:18:07,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:18:07,404 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:18:16,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:18:16,884 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:18:18,395 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.48484848484848486].
2023-08-22 21:18:18,395 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.48484848484848486].
2023-08-22 21:18:27,709 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.030303030303030304].
2023-08-22 21:18:27,709 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.030303030303030304].
2023-08-22 21:18:27,990 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.23232323232323235 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.030303030303030304].
2023-08-22 21:18:27,990 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.23232323232323235 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.030303030303030304].
2023-08-22 21:18:37,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:18:37,235 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:18:38,681 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 21:18:38,681 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 21:18:48,561 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:18:48,561 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:18:52,307 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.2828282828282829 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8787878787878789].
2023-08-22 21:18:52,308 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.2828282828282829 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8787878787878789].
2023-08-22 21:18:57,701 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:18:57,701 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:19:02,765 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:19:02,766 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:19:09,044 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8585858585858587, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=0.004142000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5151515151515152 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7070707070707072].
2023-08-22 21:19:09,045 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8585858585858587, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=0.004142000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5151515151515152 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7070707070707072].
2023-08-22 21:19:16,617 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:19:16,617 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:19:18,889 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.5555555555555556 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.030303030303030304].
2023-08-22 21:19:18,889 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.5555555555555556 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.030303030303030304].
2023-08-22 21:19:23,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:19:23,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:19:38,021 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:19:38,021 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:19:43,904 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.8383838383838385 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.0 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.36363636363636365].
2023-08-22 21:19:43,904 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.8383838383838385 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.0 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.36363636363636365].
2023-08-22 21:19:43,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:19:43,962 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:19:44,200 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:19:44,200 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:19:58,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:19:58,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:20:04,276 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5252525252525253 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.030303030303030304].
2023-08-22 21:20:04,276 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5252525252525253 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.030303030303030304].
2023-08-22 21:20:04,462 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:20:04,462 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:20:18,953 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.001 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:20:18,953 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.001 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:20:25,300 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:20:25,300 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:20:42,380 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.06060606060606061 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.030303030303030304].
2023-08-22 21:20:42,380 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.06060606060606061 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.030303030303030304].
2023-08-22 21:21:05,130 INFO: Applying selection operators for generation 23.
2023-08-22 21:21:05,131 INFO: Applying genetic operators for generation 23.
2023-08-22 21:21:05,134 INFO: Evaluating fitness for for generation 23.
2023-08-22 21:21:05,134 INFO: Will evaluate fitness for 41 individuals.
2023-08-22 21:21:05,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:21:05,692 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:21:05,698 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:21:05,698 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:21:05,824 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.98989898989899, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001011 ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.5555555555555556 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.3535353535353536].
2023-08-22 21:21:05,824 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.98989898989899, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001011 ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.5555555555555556 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.3535353535353536].
2023-08-22 21:21:05,842 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:21:05,843 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:21:25,815 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:21:25,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:21:25,976 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 21:21:25,976 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 21:21:26,496 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.7171717171717172 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.030303030303030304].
2023-08-22 21:21:26,496 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.7171717171717172 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.030303030303030304].
2023-08-22 21:21:30,417 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:21:30,417 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:21:45,936 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.4747474747474748 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.030303030303030304].
2023-08-22 21:21:45,936 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.4747474747474748 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.030303030303030304].
2023-08-22 21:21:50,336 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:21:50,336 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:21:51,088 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.030303030303030304].
2023-08-22 21:21:51,088 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.030303030303030304].
2023-08-22 21:22:00,682 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.010101010101010102 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:22:00,682 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.010101010101010102 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:22:10,608 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.43434343434343436 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.030303030303030304].
2023-08-22 21:22:10,608 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.43434343434343436 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.030303030303030304].
2023-08-22 21:22:10,791 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5656565656565657 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.9393939393939394].
2023-08-22 21:22:10,791 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5656565656565657 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.9393939393939394].
2023-08-22 21:22:19,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:22:19,757 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:22:24,685 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:22:24,686 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:22:35,576 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:22:35,576 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:22:35,952 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8686868686868687].
2023-08-22 21:22:35,953 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8686868686868687].
2023-08-22 21:22:39,894 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.5555555555555556 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:22:39,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.5555555555555556 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:22:46,179 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.8383838383838385 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.0 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.36363636363636365].
2023-08-22 21:22:46,180 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.8383838383838385 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.0 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.36363636363636365].
2023-08-22 21:22:56,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:22:56,392 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:23:00,371 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.030303030303030304].
2023-08-22 21:23:00,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.030303030303030304].
2023-08-22 21:23:04,085 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:23:04,086 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:23:10,797 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:23:10,797 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:23:16,939 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.5555555555555556 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.030303030303030304].
2023-08-22 21:23:16,939 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.5555555555555556 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.030303030303030304].
2023-08-22 21:23:21,334 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.030303030303030304].
2023-08-22 21:23:21,334 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.030303030303030304].
2023-08-22 21:23:24,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:23:24,801 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:23:31,422 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 21:23:31,422 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 21:23:40,981 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:23:40,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:23:44,947 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:23:44,947 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:23:56,275 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:23:56,275 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:23:56,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:23:56,799 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:24:02,232 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.8080808080808082 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.38383838383838387].
2023-08-22 21:24:02,232 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.8080808080808082 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.38383838383838387].
2023-08-22 21:24:05,023 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.5555555555555556 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.22222222222222224].
2023-08-22 21:24:05,023 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.5555555555555556 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.22222222222222224].
2023-08-22 21:24:17,232 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.24242424242424243, momentum=0.595959595959596 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.08080808080808081 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.888888888888889].
2023-08-22 21:24:17,232 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.24242424242424243, momentum=0.595959595959596 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.08080808080808081 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.888888888888889].
2023-08-22 21:24:17,490 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007273000000000001 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.5555555555555556 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.2828282828282829 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.030303030303030304].
2023-08-22 21:24:17,491 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007273000000000001 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.5555555555555556 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.2828282828282829 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.030303030303030304].
2023-08-22 21:24:27,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:24:27,796 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:24:29,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:24:29,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:24:48,223 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:24:48,223 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:24:49,610 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:24:49,610 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:25:08,917 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:25:08,917 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:25:28,411 INFO: Applying selection operators for generation 24.
2023-08-22 21:25:28,412 INFO: Applying genetic operators for generation 24.
2023-08-22 21:25:28,416 INFO: Evaluating fitness for for generation 24.
2023-08-22 21:25:28,416 INFO: Will evaluate fitness for 46 individuals.
2023-08-22 21:25:28,969 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:25:28,969 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:25:28,969 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:25:28,970 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:25:29,102 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.36363636363636365].
2023-08-22 21:25:29,102 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.36363636363636365].
2023-08-22 21:25:29,122 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.15151515151515152, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.686868686868687].
2023-08-22 21:25:29,122 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.15151515151515152, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.686868686868687].
2023-08-22 21:25:48,979 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:25:48,980 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:25:49,063 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:25:49,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:25:49,534 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.9191919191919192 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.0 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.5656565656565657].
2023-08-22 21:25:49,534 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.9191919191919192 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.0 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.5656565656565657].
2023-08-22 21:25:53,390 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:25:53,390 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:26:08,983 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.6464646464646465 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.0 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.686868686868687].
2023-08-22 21:26:08,983 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.6464646464646465 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.0 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.686868686868687].
2023-08-22 21:26:10,050 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:26:10,050 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:26:13,413 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.030303030303030304].
2023-08-22 21:26:13,413 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.030303030303030304].
2023-08-22 21:26:14,672 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:26:14,672 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:26:30,401 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:26:30,401 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:26:34,142 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.7272727272727273 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:26:34,143 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.7272727272727273 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:26:35,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:26:35,364 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:26:38,656 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.27272727272727276].
2023-08-22 21:26:38,656 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.27272727272727276].
2023-08-22 21:26:50,716 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:26:50,717 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:26:53,474 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9494949494949496, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.43434343434343436 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.16161616161616163].
2023-08-22 21:26:53,475 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9494949494949496, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.43434343434343436 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.16161616161616163].
2023-08-22 21:26:55,852 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.5555555555555556 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.030303030303030304].
2023-08-22 21:26:55,852 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.5555555555555556 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.030303030303030304].
2023-08-22 21:27:03,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:27:03,277 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:27:11,679 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.5454545454545455 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.030303030303030304].
2023-08-22 21:27:11,679 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.5454545454545455 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.030303030303030304].
2023-08-22 21:27:20,681 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:27:20,682 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:27:23,927 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.19191919191919193 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.030303030303030304].
2023-08-22 21:27:23,927 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.19191919191919193 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.030303030303030304].
2023-08-22 21:27:27,321 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.32323232323232326 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.36363636363636365].
2023-08-22 21:27:27,322 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.32323232323232326 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.36363636363636365].
2023-08-22 21:27:32,028 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:27:32,028 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:27:41,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:27:41,962 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:27:49,171 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:27:49,172 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:27:52,353 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.030303030303030304].
2023-08-22 21:27:52,353 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.030303030303030304].
2023-08-22 21:27:52,761 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:27:52,761 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:28:02,638 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:28:02,639 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:28:09,996 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:28:09,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:28:12,674 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:28:12,674 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:28:12,975 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.4646464646464647].
2023-08-22 21:28:12,975 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0002020202818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.4646464646464647].
2023-08-22 21:28:23,150 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.08080808080808081 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.11111111111111112].
2023-08-22 21:28:23,150 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.08080808080808081 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.11111111111111112].
2023-08-22 21:28:30,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.0 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6666666666666667].
2023-08-22 21:28:30,728 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.0 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6666666666666667].
2023-08-22 21:28:33,725 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:28:33,725 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:28:37,112 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.17171717171717174, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.5555555555555556 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8181818181818182].
2023-08-22 21:28:37,112 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.17171717171717174, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.5555555555555556 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8181818181818182].
2023-08-22 21:28:48,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:28:48,502 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:28:54,050 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:28:54,051 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:28:55,303 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8181818181818182 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.9090909090909092].
2023-08-22 21:28:55,303 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8181818181818182 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.9090909090909092].
2023-08-22 21:29:02,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:29:02,796 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:29:09,307 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:29:09,307 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:29:14,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:29:14,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:29:19,944 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:29:19,944 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:29:29,836 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:29:29,836 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:29:40,339 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.030303030303030304].
2023-08-22 21:29:40,339 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.030303030303030304].
2023-08-22 21:29:59,313 INFO: Applying selection operators for generation 25.
2023-08-22 21:29:59,313 INFO: Applying genetic operators for generation 25.
2023-08-22 21:29:59,317 INFO: Evaluating fitness for for generation 25.
2023-08-22 21:29:59,317 INFO: Will evaluate fitness for 38 individuals.
2023-08-22 21:29:59,868 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.36363636363636365].
2023-08-22 21:29:59,868 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.36363636363636365].
2023-08-22 21:30:00,004 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.030303030303030304].
2023-08-22 21:30:00,004 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.030303030303030304].
2023-08-22 21:30:00,032 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4545454545454546, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.48484848484848486].
2023-08-22 21:30:00,032 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4545454545454546, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.48484848484848486].
2023-08-22 21:30:00,035 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.030303030303030304].
2023-08-22 21:30:00,035 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.030303030303030304].
2023-08-22 21:30:20,167 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:30:20,168 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:30:20,821 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:30:20,821 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:30:24,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:30:24,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:30:36,945 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:30:36,945 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:30:40,422 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:30:40,422 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:30:41,024 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.595959595959596].
2023-08-22 21:30:41,024 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.595959595959596].
2023-08-22 21:30:45,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:30:45,835 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:30:57,462 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:30:57,463 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:31:01,108 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:31:01,108 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:31:01,808 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=1.0 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.030303030303030304].
2023-08-22 21:31:01,808 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=1.0 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.030303030303030304].
2023-08-22 21:31:07,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:31:07,103 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:31:17,999 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:31:17,999 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:31:21,279 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.12121212121212122 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6363636363636365].
2023-08-22 21:31:21,279 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.12121212121212122 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6363636363636365].
2023-08-22 21:31:26,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.36363636363636365].
2023-08-22 21:31:26,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.36363636363636365].
2023-08-22 21:31:27,653 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:31:27,653 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:31:39,306 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:31:39,306 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:31:46,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.18181818181818182 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.030303030303030304].
2023-08-22 21:31:46,248 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.18181818181818182 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.030303030303030304].
2023-08-22 21:31:46,617 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:31:46,617 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:31:48,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:31:48,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:06,895 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.5555555555555556 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.5353535353535354].
2023-08-22 21:32:06,895 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.5555555555555556 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.5353535353535354].
2023-08-22 21:32:09,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.14141414141414144 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:09,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.14141414141414144 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:09,904 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:09,904 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:14,266 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:14,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:30,696 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:30,696 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:34,107 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.5555555555555556 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.030303030303030304].
2023-08-22 21:32:34,107 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.5555555555555556 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.030303030303030304].
2023-08-22 21:32:34,835 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:34,835 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:42,862 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:42,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:51,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:51,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:56,191 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:56,191 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:58,924 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:32:58,924 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:33:03,300 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:33:03,300 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:33:11,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.3535353535353536].
2023-08-22 21:33:11,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.3535353535353536].
2023-08-22 21:33:16,517 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.06060606060606061 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.696969696969697].
2023-08-22 21:33:16,517 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.06060606060606061 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.696969696969697].
2023-08-22 21:33:30,548 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.5555555555555556 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.30303030303030304].
2023-08-22 21:33:30,548 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.5555555555555556 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.30303030303030304].
2023-08-22 21:33:54,053 INFO: Applying selection operators for generation 26.
2023-08-22 21:33:54,053 INFO: Applying genetic operators for generation 26.
2023-08-22 21:33:54,056 INFO: Evaluating fitness for for generation 26.
2023-08-22 21:33:54,056 INFO: Will evaluate fitness for 32 individuals.
2023-08-22 21:33:54,639 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:33:54,639 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:33:54,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.36363636363636365].
2023-08-22 21:33:54,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.36363636363636365].
2023-08-22 21:33:54,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.4747474747474748].
2023-08-22 21:33:54,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.4747474747474748].
2023-08-22 21:33:54,673 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:33:54,673 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:14,768 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:14,768 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:14,946 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:14,946 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:15,601 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:15,602 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:15,635 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:15,635 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:35,472 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:35,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:35,721 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:35,722 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:36,002 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:36,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:36,099 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:36,100 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:55,693 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7474747474747475, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.030303030303030304].
2023-08-22 21:34:55,693 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7474747474747475, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.030303030303030304].
2023-08-22 21:34:56,178 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:56,178 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:34:56,290 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.686868686868687].
2023-08-22 21:34:56,290 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.686868686868687].
2023-08-22 21:34:56,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.7070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7070707070707072].
2023-08-22 21:34:56,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.7070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7070707070707072].
2023-08-22 21:35:16,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:35:16,473 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:35:17,307 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.030303030303030304].
2023-08-22 21:35:17,307 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.030303030303030304].
2023-08-22 21:35:19,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:35:19,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:35:20,195 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.030303030303030304].
2023-08-22 21:35:20,195 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.030303030303030304].
2023-08-22 21:35:37,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:35:37,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:35:39,640 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:35:39,640 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:35:39,895 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.22222222222222224 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7575757575757577].
2023-08-22 21:35:39,896 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.22222222222222224 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7575757575757577].
2023-08-22 21:35:41,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.4141414141414142].
2023-08-22 21:35:41,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.4141414141414142].
2023-08-22 21:35:58,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:35:58,093 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:35:59,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:35:59,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:36:01,673 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:36:01,673 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:36:04,325 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.43434343434343436 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.98989898989899].
2023-08-22 21:36:04,325 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.43434343434343436 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.98989898989899].
2023-08-22 21:36:18,382 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:36:18,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:36:20,673 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.33333333333333337, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8484848484848485 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.020202020202020204].
2023-08-22 21:36:20,673 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.33333333333333337, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8484848484848485 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.020202020202020204].
2023-08-22 21:36:22,019 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:36:22,019 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:36:23,301 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.5555555555555556 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6262626262626263].
2023-08-22 21:36:23,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.5555555555555556 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6262626262626263].
2023-08-22 21:36:46,370 INFO: Applying selection operators for generation 27.
2023-08-22 21:36:46,371 INFO: Applying genetic operators for generation 27.
2023-08-22 21:36:46,375 INFO: Evaluating fitness for for generation 27.
2023-08-22 21:36:46,375 INFO: Will evaluate fitness for 38 individuals.
2023-08-22 21:36:46,921 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:36:46,921 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:36:46,932 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:36:46,932 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:36:46,973 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.5555555555555556 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.4444444444444445].
2023-08-22 21:36:46,973 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.5555555555555556 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.4444444444444445].
2023-08-22 21:36:46,990 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:36:46,990 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:05,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:05,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:06,832 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0.17171717171717174 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.5454545454545455 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.27272727272727276].
2023-08-22 21:37:06,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0.17171717171717174 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.5454545454545455 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.27272727272727276].
2023-08-22 21:37:06,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:06,971 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:07,956 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8686868686868687, momentum=0.8181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:07,957 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8686868686868687, momentum=0.8181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:26,170 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.030303030303030304].
2023-08-22 21:37:26,171 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.030303030303030304].
2023-08-22 21:37:27,152 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:27,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:30,477 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.08080808080808081].
2023-08-22 21:37:30,477 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.08080808080808081].
2023-08-22 21:37:31,078 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.20202020202020204 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.36363636363636365].
2023-08-22 21:37:31,078 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.20202020202020204 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.36363636363636365].
2023-08-22 21:37:46,588 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:46,588 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:48,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:48,045 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:51,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:51,203 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:37:55,086 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.5555555555555556 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.7373737373737375].
2023-08-22 21:37:55,087 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.5555555555555556 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.7373737373737375].
2023-08-22 21:38:07,627 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=0.0026270000000000004 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.05050505050505051].
2023-08-22 21:38:07,628 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=0.0026270000000000004 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.05050505050505051].
2023-08-22 21:38:08,315 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:38:08,315 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:38:11,417 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.7272727272727273 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:38:11,417 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.7272727272727273 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:38:19,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:38:19,861 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:38:27,847 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.030303030303030304].
2023-08-22 21:38:27,848 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.030303030303030304].
2023-08-22 21:38:28,549 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:38:28,549 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:38:35,590 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006061000000000001 ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.4444444444444445 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.595959595959596].
2023-08-22 21:38:35,590 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006061000000000001 ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.4444444444444445 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.595959595959596].
2023-08-22 21:38:41,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:38:41,015 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:38:49,364 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.5555555555555556 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.030303030303030304].
2023-08-22 21:38:49,364 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.5555555555555556 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.030303030303030304].
2023-08-22 21:38:51,313 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=1.0 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.10101010101010102].
2023-08-22 21:38:51,313 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=1.0 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.10101010101010102].
2023-08-22 21:38:53,725 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5555555555555556 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6161616161616162].
2023-08-22 21:38:53,726 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5555555555555556 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6161616161616162].
2023-08-22 21:39:01,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:39:01,718 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:39:13,694 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.030303030303030304].
2023-08-22 21:39:13,694 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.030303030303030304].
2023-08-22 21:39:16,839 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:39:16,839 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:39:18,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:39:18,431 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:39:22,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:39:22,045 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:39:37,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:39:37,838 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:39:38,672 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.5555555555555556 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6161616161616162].
2023-08-22 21:39:38,672 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.5555555555555556 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6161616161616162].
2023-08-22 21:39:39,155 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:39:39,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:39:42,393 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:39:42,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:39:58,099 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.787878787878788 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.030303030303030304].
2023-08-22 21:39:58,100 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.787878787878788 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.030303030303030304].
2023-08-22 21:40:22,531 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:40:22,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:40:41,793 INFO: Applying selection operators for generation 28.
2023-08-22 21:40:41,793 INFO: Applying genetic operators for generation 28.
2023-08-22 21:40:41,797 INFO: Evaluating fitness for for generation 28.
2023-08-22 21:40:41,797 INFO: Will evaluate fitness for 38 individuals.
2023-08-22 21:40:42,354 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:40:42,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:40:42,421 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.5151515151515152 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.030303030303030304].
2023-08-22 21:40:42,421 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.5151515151515152 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.030303030303030304].
2023-08-22 21:40:42,434 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.008586 ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.5555555555555556 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.9494949494949496].
2023-08-22 21:40:42,434 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.008586 ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.5555555555555556 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.9494949494949496].
2023-08-22 21:40:42,437 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:40:42,437 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:01,715 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:01,716 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:02,430 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9393939393939394, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.030303030303030304].
2023-08-22 21:41:02,430 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9393939393939394, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.030303030303030304].
2023-08-22 21:41:02,800 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:02,801 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:07,414 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:07,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:22,117 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9494949494949496 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.030303030303030304].
2023-08-22 21:41:22,118 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9494949494949496 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.030303030303030304].
2023-08-22 21:41:23,089 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:23,089 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:27,643 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:27,644 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:28,146 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:28,146 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:43,456 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:43,456 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:47,923 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:47,923 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:47,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:47,937 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:48,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:41:48,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:42:05,651 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:42:05,651 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:42:08,105 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:42:08,105 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:42:08,370 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.12121212121212122, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.030303030303030304].
2023-08-22 21:42:08,371 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.12121212121212122, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.030303030303030304].
2023-08-22 21:42:08,979 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:42:08,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:42:26,171 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:42:26,171 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:42:28,957 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.38383838383838387 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.595959595959596 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.030303030303030304].
2023-08-22 21:42:28,958 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.38383838383838387 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.595959595959596 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.030303030303030304].
2023-08-22 21:42:29,524 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6767676767676768 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.16161616161616163].
2023-08-22 21:42:29,524 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6767676767676768 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.16161616161616163].
2023-08-22 21:42:33,279 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008485000000000001 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.5555555555555556 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 21:42:33,279 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008485000000000001 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.5555555555555556 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 21:42:46,570 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.20202020202020204 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:42:46,570 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.20202020202020204 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:42:54,176 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.2828282828282829].
2023-08-22 21:42:54,177 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.2828282828282829].
2023-08-22 21:42:58,342 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:42:58,342 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:43:05,036 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.19191919191919193].
2023-08-22 21:43:05,036 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.19191919191919193].
2023-08-22 21:43:05,612 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:43:05,612 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:43:15,126 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.7575757575757577 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 21:43:15,126 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.7575757575757577 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 21:43:18,628 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8585858585858587 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.030303030303030304].
2023-08-22 21:43:18,629 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8585858585858587 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.030303030303030304].
2023-08-22 21:43:26,685 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:43:26,685 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:43:28,702 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:43:28,702 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:43:40,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:43:40,951 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:43:42,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:43:42,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:43:47,183 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:43:47,183 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:43:49,726 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:43:49,726 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:44:07,470 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.42424242424242425 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:44:07,470 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.42424242424242425 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:44:25,254 INFO: Applying selection operators for generation 29.
2023-08-22 21:44:25,254 INFO: Applying genetic operators for generation 29.
2023-08-22 21:44:25,257 INFO: Evaluating fitness for for generation 29.
2023-08-22 21:44:25,257 INFO: Will evaluate fitness for 39 individuals.
2023-08-22 21:44:25,826 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:44:25,826 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:44:25,828 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:44:25,828 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:44:25,868 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.6464646464646465 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.9393939393939394].
2023-08-22 21:44:25,869 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.6464646464646465 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.9393939393939394].
2023-08-22 21:44:25,871 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:44:25,871 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:44:45,864 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:44:45,864 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:44:45,989 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7373737373737375, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.5555555555555556 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.26262626262626265 ,learning_rate_power=0.0 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6767676767676768].
2023-08-22 21:44:45,989 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7373737373737375, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.5555555555555556 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.26262626262626265 ,learning_rate_power=0.0 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6767676767676768].
2023-08-22 21:44:46,159 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:44:46,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:44:50,810 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:44:50,810 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:05,877 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:05,877 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:07,241 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:07,241 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:09,871 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.4747474747474748 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.3535353535353536].
2023-08-22 21:45:09,872 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.4747474747474748 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.3535353535353536].
2023-08-22 21:45:11,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:11,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:26,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.696969696969697 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.030303030303030304].
2023-08-22 21:45:26,650 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.696969696969697 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.030303030303030304].
2023-08-22 21:45:27,658 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:27,658 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:31,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:31,922 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:34,934 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:34,935 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:48,128 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:48,128 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:51,205 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:51,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:52,311 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:52,311 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:45:56,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.030303030303030304 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4747474747474748].
2023-08-22 21:45:56,452 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.030303030303030304 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4747474747474748].
2023-08-22 21:46:08,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:08,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:11,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:11,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:13,484 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:13,484 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:20,615 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8585858585858587].
2023-08-22 21:46:20,615 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8585858585858587].
2023-08-22 21:46:29,410 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9797979797979799, momentum=0.787878787878788 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.797979797979798 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.5050505050505051].
2023-08-22 21:46:29,411 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9797979797979799, momentum=0.787878787878788 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.797979797979798 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.5050505050505051].
2023-08-22 21:46:31,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:31,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:34,066 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:34,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:40,382 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:40,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:52,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:52,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:53,613 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.030303030303030304].
2023-08-22 21:46:53,614 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.030303030303030304].
2023-08-22 21:46:54,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:46:54,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:47:00,613 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:47:00,614 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:47:12,492 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.24242424242424243 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.030303030303030304].
2023-08-22 21:47:12,492 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.24242424242424243 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.030303030303030304].
2023-08-22 21:47:13,242 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:47:13,242 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:47:14,480 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:47:14,480 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:47:21,501 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:47:21,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:47:32,496 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:47:32,496 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:47:52,363 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.797979797979798 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.787878787878788 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.0].
2023-08-22 21:47:52,363 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.797979797979798 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.787878787878788 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.0].
2023-08-22 21:48:11,325 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.5555555555555556 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.030303030303030304].
2023-08-22 21:48:11,326 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.5555555555555556 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.030303030303030304].
2023-08-22 21:48:34,955 INFO: Applying selection operators for generation 30.
2023-08-22 21:48:34,955 INFO: Applying genetic operators for generation 30.
2023-08-22 21:48:34,958 INFO: Evaluating fitness for for generation 30.
2023-08-22 21:48:34,958 INFO: Will evaluate fitness for 40 individuals.
2023-08-22 21:48:35,516 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:48:35,516 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:48:35,532 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.888888888888889 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.9393939393939394].
2023-08-22 21:48:35,532 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.888888888888889 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.9393939393939394].
2023-08-22 21:48:35,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:48:35,560 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:48:35,561 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:48:35,561 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:48:55,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:48:55,453 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:48:55,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:48:55,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:48:56,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:48:56,299 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:12,047 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:12,047 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:15,499 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:15,499 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:16,160 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:16,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:16,630 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6565656565656566].
2023-08-22 21:49:16,630 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6565656565656566].
2023-08-22 21:49:32,856 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:32,856 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:36,313 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:36,313 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:36,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:36,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:40,469 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:40,470 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:53,062 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:53,062 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:56,448 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:56,448 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:57,184 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.020202020202020204 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:49:57,184 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.020202020202020204 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:00,853 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:00,853 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:13,230 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:13,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:16,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:16,625 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:21,851 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.38383838383838387 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:21,852 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.38383838383838387 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:22,230 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.9090909090909092].
2023-08-22 21:50:22,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.9090909090909092].
2023-08-22 21:50:33,461 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:33,462 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:36,866 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:36,866 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:42,317 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:42,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:46,862 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:46,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:54,536 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.030303030303030304].
2023-08-22 21:50:54,537 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.030303030303030304].
2023-08-22 21:50:57,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:50:57,659 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:51:02,574 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9191919191919192 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.5757575757575758].
2023-08-22 21:51:02,574 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9191919191919192 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.5757575757575758].
2023-08-22 21:51:07,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.030303030303030304].
2023-08-22 21:51:07,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.030303030303030304].
2023-08-22 21:51:17,932 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:51:17,933 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:51:18,931 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:51:18,932 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:51:27,212 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.43434343434343436 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.2828282828282829].
2023-08-22 21:51:27,212 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.43434343434343436 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.2828282828282829].
2023-08-22 21:51:27,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:51:27,712 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:51:37,912 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.5555555555555556 ,epsilon=0.001 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7676767676767677].
2023-08-22 21:51:37,913 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.5555555555555556 ,epsilon=0.001 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7676767676767677].
2023-08-22 21:51:39,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:51:39,030 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:51:48,084 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:51:48,084 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:52:03,411 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.05050505050505051].
2023-08-22 21:52:03,411 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.05050505050505051].
2023-08-22 21:52:38,960 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:52:38,960 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:52:58,205 INFO: Applying selection operators for generation 31.
2023-08-22 21:52:58,206 INFO: Applying genetic operators for generation 31.
2023-08-22 21:52:58,209 INFO: Evaluating fitness for for generation 31.
2023-08-22 21:52:58,209 INFO: Will evaluate fitness for 38 individuals.
2023-08-22 21:52:58,770 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:52:58,771 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:52:58,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.030303030303030304].
2023-08-22 21:52:58,791 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.030303030303030304].
2023-08-22 21:52:58,835 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:52:58,835 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:52:58,839 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:52:58,839 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:53:19,171 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6767676767676768 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.030303030303030304].
2023-08-22 21:53:19,172 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6767676767676768 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.030303030303030304].
2023-08-22 21:53:19,493 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:53:19,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:53:23,782 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:53:23,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:53:24,088 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:53:24,088 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:53:39,810 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:53:39,810 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:53:40,167 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.09090909090909091 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.17171717171717174].
2023-08-22 21:53:40,167 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.09090909090909091 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.17171717171717174].
2023-08-22 21:53:44,037 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.797979797979798, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=False ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.010101010101010102 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.8686868686868687].
2023-08-22 21:53:44,037 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.797979797979798, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=False ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.010101010101010102 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.8686868686868687].
2023-08-22 21:53:44,566 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.18181818181818182 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=0.0 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.030303030303030304].
2023-08-22 21:53:44,566 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.18181818181818182 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=0.0 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.030303030303030304].
2023-08-22 21:54:00,021 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:00,021 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:05,096 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:05,096 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:08,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:08,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:20,167 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=1.0 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:20,167 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=1.0 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:21,204 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.22222222222222224].
2023-08-22 21:54:21,204 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.22222222222222224].
2023-08-22 21:54:25,466 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.21212121212121213 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.030303030303030304].
2023-08-22 21:54:25,467 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.21212121212121213 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.030303030303030304].
2023-08-22 21:54:29,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:29,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:38,233 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:38,233 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:49,782 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:49,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:50,053 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7575757575757577, momentum=0.4040404040404041 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.030303030303030304].
2023-08-22 21:54:50,053 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7575757575757577, momentum=0.4040404040404041 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.030303030303030304].
2023-08-22 21:54:57,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.020202020202020204 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:57,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.020202020202020204 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:59,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:54:59,103 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:09,981 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:09,981 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:14,565 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:14,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:19,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:19,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:22,090 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.09090909090909091].
2023-08-22 21:55:22,091 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.09090909090909091].
2023-08-22 21:55:30,200 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.696969696969697 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.4747474747474748].
2023-08-22 21:55:30,200 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.696969696969697 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.4747474747474748].
2023-08-22 21:55:35,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:35,075 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:39,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:39,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:42,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:42,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:55,604 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:55,604 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:55,805 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:55:55,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:56:00,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:56:00,075 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:56:03,520 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.13131313131313133 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.030303030303030304].
2023-08-22 21:56:03,520 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.13131313131313133 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.030303030303030304].
2023-08-22 21:56:20,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:56:20,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:56:28,802 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5252525252525253 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:56:28,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5252525252525253 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:56:53,049 INFO: Applying selection operators for generation 32.
2023-08-22 21:56:53,049 INFO: Applying genetic operators for generation 32.
2023-08-22 21:56:53,053 INFO: Evaluating fitness for for generation 32.
2023-08-22 21:56:53,053 INFO: Will evaluate fitness for 37 individuals.
2023-08-22 21:56:53,613 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:56:53,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:56:53,618 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9090909090909092 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.030303030303030304].
2023-08-22 21:56:53,619 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9090909090909092 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.030303030303030304].
2023-08-22 21:56:53,628 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.030303030303030304].
2023-08-22 21:56:53,628 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.030303030303030304].
2023-08-22 21:56:53,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:56:53,729 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:13,552 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:13,553 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:15,174 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:15,174 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:18,534 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:18,534 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:18,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9090909090909092 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.494949494949495].
2023-08-22 21:57:18,687 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9090909090909092 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.494949494949495].
2023-08-22 21:57:34,259 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:34,259 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:35,776 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:35,776 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:38,697 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:38,697 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:40,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:40,036 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:57:54,469 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0022230000000000006 ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.030303030303030304].
2023-08-22 21:57:54,469 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0022230000000000006 ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.030303030303030304].
2023-08-22 21:57:56,041 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.07070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.23232323232323235].
2023-08-22 21:57:56,041 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.07070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.23232323232323235].
2023-08-22 21:57:59,467 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.2828282828282829 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.030303030303030304].
2023-08-22 21:57:59,467 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.2828282828282829 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.030303030303030304].
2023-08-22 21:58:00,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:58:00,759 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:58:15,009 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.8181818181818182 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.6363636363636365].
2023-08-22 21:58:15,010 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.8181818181818182 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.6363636363636365].
2023-08-22 21:58:17,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:58:17,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:58:21,190 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.5555555555555556 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.22222222222222224].
2023-08-22 21:58:21,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.5555555555555556 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.22222222222222224].
2023-08-22 21:58:24,018 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.7272727272727273 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.030303030303030304].
2023-08-22 21:58:24,018 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.7272727272727273 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.030303030303030304].
2023-08-22 21:58:37,664 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8585858585858587].
2023-08-22 21:58:37,665 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8585858585858587].
2023-08-22 21:58:39,386 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.020202020202020204 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:58:39,386 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.020202020202020204 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:58:41,804 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:58:41,804 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:58:46,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:58:46,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:01,851 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:01,851 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:02,201 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.020202020202020204].
2023-08-22 21:59:02,201 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.020202020202020204].
2023-08-22 21:59:04,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:04,931 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:07,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4545454545454546, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.030303030303030304].
2023-08-22 21:59:07,630 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4545454545454546, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.030303030303030304].
2023-08-22 21:59:22,812 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:22,813 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:25,207 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.030303030303030304].
2023-08-22 21:59:25,207 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.030303030303030304].
2023-08-22 21:59:27,287 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:27,287 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:28,312 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:28,312 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:43,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:43,093 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:48,634 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:48,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:48,978 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:48,978 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:50,829 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 21:59:50,829 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:00:03,221 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:00:03,221 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:00:21,958 INFO: Applying selection operators for generation 33.
2023-08-22 22:00:21,959 INFO: Applying genetic operators for generation 33.
2023-08-22 22:00:21,962 INFO: Evaluating fitness for for generation 33.
2023-08-22 22:00:21,962 INFO: Will evaluate fitness for 38 individuals.
2023-08-22 22:00:22,513 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:00:22,513 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:00:22,537 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:00:22,537 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:00:22,640 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8383838383838385 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.030303030303030304].
2023-08-22 22:00:22,640 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8383838383838385 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.030303030303030304].
2023-08-22 22:00:22,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:00:22,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:00:42,956 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:00:42,956 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:00:43,271 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.09090909090909091].
2023-08-22 22:00:43,272 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.09090909090909091].
2023-08-22 22:00:43,462 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:00:43,462 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:00:48,244 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.5555555555555556 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.696969696969697].
2023-08-22 22:00:48,245 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.5555555555555556 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.696969696969697].
2023-08-22 22:01:03,176 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:03,176 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:03,594 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:03,595 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:14,800 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5454545454545455, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.31313131313131315 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:14,800 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5454545454545455, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.31313131313131315 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:20,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.5454545454545455 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.030303030303030304].
2023-08-22 22:01:20,208 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.5454545454545455 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.030303030303030304].
2023-08-22 22:01:23,779 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.17171717171717174 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:23,779 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.17171717171717174 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:24,293 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:24,293 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:36,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:36,838 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:40,335 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:40,336 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:44,755 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:44,756 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:01:48,711 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.5555555555555556 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.04040404040404041].
2023-08-22 22:01:48,711 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.5555555555555556 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.04040404040404041].
2023-08-22 22:01:58,054 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9494949494949496, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.595959595959596 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.030303030303030304].
2023-08-22 22:01:58,055 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9494949494949496, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.595959595959596 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.030303030303030304].
2023-08-22 22:02:00,397 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:02:00,397 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:02:05,151 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:02:05,151 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:02:14,664 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:02:14,664 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:02:21,231 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.5555555555555556].
2023-08-22 22:02:21,232 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.5555555555555556].
2023-08-22 22:02:25,141 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.030303030303030304].
2023-08-22 22:02:25,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.030303030303030304].
2023-08-22 22:02:25,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:02:25,559 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:02:35,053 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.17171717171717174 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.030303030303030304].
2023-08-22 22:02:35,053 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.17171717171717174 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.030303030303030304].
2023-08-22 22:02:40,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8080808080808082 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.030303030303030304].
2023-08-22 22:02:40,707 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8080808080808082 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.030303030303030304].
2023-08-22 22:02:45,575 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:02:45,576 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:02:46,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:02:46,707 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:00,401 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:00,401 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:06,166 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:06,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:07,177 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:07,178 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:10,880 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.595959595959596 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.9191919191919192].
2023-08-22 22:03:10,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.595959595959596 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.9191919191919192].
2023-08-22 22:03:20,503 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:20,503 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:27,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:27,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:27,330 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:27,331 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:35,902 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:35,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:47,533 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:03:47,533 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:07,577 INFO: Applying selection operators for generation 34.
2023-08-22 22:04:07,578 INFO: Applying genetic operators for generation 34.
2023-08-22 22:04:07,581 INFO: Evaluating fitness for for generation 34.
2023-08-22 22:04:07,581 INFO: Will evaluate fitness for 34 individuals.
2023-08-22 22:04:08,132 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:08,133 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:08,205 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:08,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:08,223 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.030303030303030304].
2023-08-22 22:04:08,223 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.030303030303030304].
2023-08-22 22:04:08,235 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:08,235 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:26,441 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:26,441 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:28,130 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:28,131 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:28,272 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:28,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:28,468 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.4545454545454546 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6060606060606061].
2023-08-22 22:04:28,468 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.4545454545454546 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6060606060606061].
2023-08-22 22:04:46,577 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.5555555555555556 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.26262626262626265].
2023-08-22 22:04:46,577 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.5555555555555556 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.26262626262626265].
2023-08-22 22:04:48,214 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:48,214 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:48,344 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.5656565656565657 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:48,344 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.5656565656565657 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:04:53,351 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.7575757575757577 ,epsilon=0.001 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.888888888888889].
2023-08-22 22:04:53,351 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.7575757575757577 ,epsilon=0.001 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.888888888888889].
2023-08-22 22:05:08,440 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.030303030303030304].
2023-08-22 22:05:08,440 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.030303030303030304].
2023-08-22 22:05:11,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.030303030303030304].
2023-08-22 22:05:11,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.030303030303030304].
2023-08-22 22:05:13,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.030303030303030304].
2023-08-22 22:05:13,625 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.030303030303030304].
2023-08-22 22:05:19,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.4747474747474748 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:05:19,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.4747474747474748 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:05:32,637 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:05:32,638 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:05:33,717 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.888888888888889 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.030303030303030304].
2023-08-22 22:05:33,718 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.888888888888889 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.030303030303030304].
2023-08-22 22:05:39,433 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:05:39,433 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:05:44,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:05:44,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:05:52,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6262626262626263 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.030303030303030304].
2023-08-22 22:05:52,922 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6262626262626263 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.030303030303030304].
2023-08-22 22:05:53,909 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:05:53,909 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:05:59,584 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:05:59,584 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:04,783 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:04,784 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:14,211 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:14,211 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:18,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:18,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:19,648 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:19,648 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:25,049 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.31313131313131315].
2023-08-22 22:06:25,049 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.31313131313131315].
2023-08-22 22:06:34,309 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:34,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:38,326 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:38,326 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:39,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:39,616 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:55,143 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:55,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:59,174 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:06:59,174 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:07:00,300 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:07:00,300 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:07:19,694 INFO: Applying selection operators for generation 35.
2023-08-22 22:07:19,694 INFO: Applying genetic operators for generation 35.
2023-08-22 22:07:19,698 INFO: Evaluating fitness for for generation 35.
2023-08-22 22:07:19,698 INFO: Will evaluate fitness for 43 individuals.
2023-08-22 22:07:20,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:07:20,248 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:07:20,299 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:07:20,299 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:07:20,314 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:07:20,314 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:07:20,342 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.31313131313131315].
2023-08-22 22:07:20,343 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.31313131313131315].
2023-08-22 22:07:40,251 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:07:40,252 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:07:40,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:07:40,453 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:07:40,591 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.888888888888889 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.0].
2023-08-22 22:07:40,591 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.888888888888889 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.0].
2023-08-22 22:07:44,675 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:07:44,675 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:00,259 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:00,259 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:00,646 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:00,646 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:04,701 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:04,701 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:06,010 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.11111111111111112 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.5151515151515152].
2023-08-22 22:08:06,011 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.11111111111111112 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.5151515151515152].
2023-08-22 22:08:20,924 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:20,924 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:21,615 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8484848484848485, momentum=0.14141414141414144 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.3434343434343435 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.24242424242424243].
2023-08-22 22:08:21,616 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8484848484848485, momentum=0.14141414141414144 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.3434343434343435 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.24242424242424243].
2023-08-22 22:08:25,480 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:25,480 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:31,057 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:31,057 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:41,043 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:41,043 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:41,179 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.787878787878788 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 22:08:41,179 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.787878787878788 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 22:08:45,727 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:45,727 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:52,186 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:08:52,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:09:00,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.13131313131313133 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.36363636363636365].
2023-08-22 22:09:00,970 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.13131313131313133 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.36363636363636365].
2023-08-22 22:09:05,994 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8282828282828284 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.030303030303030304].
2023-08-22 22:09:05,994 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8282828282828284 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.030303030303030304].
2023-08-22 22:09:12,635 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.9393939393939394].
2023-08-22 22:09:12,636 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.9393939393939394].
2023-08-22 22:09:18,920 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.5555555555555556 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.010101010101010102].
2023-08-22 22:09:18,920 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.5555555555555556 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.010101010101010102].
2023-08-22 22:09:26,767 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:09:26,768 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:09:31,089 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:09:31,089 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:09:32,998 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:09:32,998 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:09:45,162 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:09:45,163 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:09:47,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:09:47,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:09:51,767 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.4040404040404041 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.5858585858585859].
2023-08-22 22:09:51,767 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.4040404040404041 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.5858585858585859].
2023-08-22 22:09:53,735 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0022230000000000006 ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.5555555555555556 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.5252525252525253].
2023-08-22 22:09:53,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0022230000000000006 ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.5555555555555556 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.5252525252525253].
2023-08-22 22:10:05,597 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:10:05,597 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:10:07,281 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.17171717171717174 ,epsilon=0.0002222223 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7474747474747475].
2023-08-22 22:10:07,281 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.17171717171717174 ,epsilon=0.0002222223 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7474747474747475].
2023-08-22 22:10:16,438 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:10:16,438 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:10:19,087 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:10:19,087 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:10:25,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:10:25,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:10:32,430 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:10:32,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:10:36,535 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.6363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.7373737373737375].
2023-08-22 22:10:36,535 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.6363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.7373737373737375].
2023-08-22 22:10:39,438 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:10:39,438 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:10:53,293 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.686868686868687 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.11111111111111112].
2023-08-22 22:10:53,293 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.686868686868687 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.11111111111111112].
2023-08-22 22:11:01,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.696969696969697 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:11:01,408 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.696969696969697 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:11:17,843 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.5252525252525253 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.030303030303030304].
2023-08-22 22:11:17,844 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.5252525252525253 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.030303030303030304].
2023-08-22 22:11:26,667 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.06060606060606061 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.030303030303030304].
2023-08-22 22:11:26,667 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.06060606060606061 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.030303030303030304].
2023-08-22 22:11:50,474 INFO: Applying selection operators for generation 36.
2023-08-22 22:11:50,475 INFO: Applying genetic operators for generation 36.
2023-08-22 22:11:50,478 INFO: Evaluating fitness for for generation 36.
2023-08-22 22:11:50,478 INFO: Will evaluate fitness for 35 individuals.
2023-08-22 22:11:51,040 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.6161616161616162 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4545454545454546 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.030303030303030304].
2023-08-22 22:11:51,040 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.6161616161616162 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4545454545454546 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.030303030303030304].
2023-08-22 22:11:51,046 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:11:51,046 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:11:51,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:11:51,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:11:51,071 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:11:51,071 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:11,188 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:11,188 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:11,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.0 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:11,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.0 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:12,454 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 22:12:12,455 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.16161616161616163].
2023-08-22 22:12:15,152 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:15,152 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:31,227 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.43434343434343436 ,epsilon=0.001 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:31,227 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.43434343434343436 ,epsilon=0.001 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:32,819 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:32,819 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:35,257 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:35,257 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:36,441 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:36,441 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:53,056 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.5252525252525253].
2023-08-22 22:12:53,056 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.5252525252525253].
2023-08-22 22:12:56,022 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=0.007273000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 22:12:56,023 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=0.007273000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.030303030303030304].
2023-08-22 22:12:56,768 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:56,768 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:12:56,874 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5555555555555556 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.393939393939394].
2023-08-22 22:12:56,874 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5555555555555556 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.393939393939394].
2023-08-22 22:13:16,936 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:13:16,936 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:13:17,896 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.29292929292929293 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.030303030303030304].
2023-08-22 22:13:17,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.29292929292929293 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.030303030303030304].
2023-08-22 22:13:21,646 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:13:21,646 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:13:22,090 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5050505050505051 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.6464646464646465].
2023-08-22 22:13:22,090 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5050505050505051 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.6464646464646465].
2023-08-22 22:13:37,287 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:13:37,287 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:13:41,696 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.030303030303030304].
2023-08-22 22:13:41,696 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.030303030303030304].
2023-08-22 22:13:44,283 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:13:44,283 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:13:46,181 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:13:46,182 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:13:58,201 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:13:58,201 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:14:02,466 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.05050505050505051].
2023-08-22 22:14:02,466 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.05050505050505051].
2023-08-22 22:14:04,664 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.07070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.030303030303030304].
2023-08-22 22:14:04,664 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.07070707070707072 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.030303030303030304].
2023-08-22 22:14:06,330 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.48484848484848486 ,epsilon=0.0008585858727272726 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.030303030303030304].
2023-08-22 22:14:06,331 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.48484848484848486 ,epsilon=0.0008585858727272726 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.030303030303030304].
2023-08-22 22:14:18,608 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:14:18,608 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:14:25,599 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:14:25,599 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:14:28,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:14:28,630 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:14:31,662 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:14:31,662 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:14:38,971 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:14:38,972 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:14:46,021 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:14:46,022 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:14:48,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:14:48,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:08,030 INFO: Applying selection operators for generation 37.
2023-08-22 22:15:08,030 INFO: Applying genetic operators for generation 37.
2023-08-22 22:15:08,034 INFO: Evaluating fitness for for generation 37.
2023-08-22 22:15:08,034 INFO: Will evaluate fitness for 38 individuals.
2023-08-22 22:15:08,588 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:08,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:08,594 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.030303030303030304 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8282828282828284].
2023-08-22 22:15:08,594 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8282828282828284, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.030303030303030304 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8282828282828284].
2023-08-22 22:15:08,699 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:08,700 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:08,711 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:08,711 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:29,017 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:29,017 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:29,225 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.6666666666666667 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4747474747474748].
2023-08-22 22:15:29,225 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.6666666666666667 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4747474747474748].
2023-08-22 22:15:29,654 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.5151515151515152].
2023-08-22 22:15:29,655 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.5151515151515152].
2023-08-22 22:15:34,365 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:34,365 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:49,477 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6262626262626263 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.030303030303030304].
2023-08-22 22:15:49,477 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6262626262626263 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.030303030303030304].
2023-08-22 22:15:51,466 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:51,466 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:53,819 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:53,819 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:15:54,372 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8282828282828284, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.030303030303030304].
2023-08-22 22:15:54,372 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8282828282828284, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.030303030303030304].
2023-08-22 22:16:09,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:16:09,140 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:16:11,794 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.07070707070707072].
2023-08-22 22:16:11,794 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.07070707070707072].
2023-08-22 22:16:13,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:16:13,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:16:19,527 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:16:19,527 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:16:30,317 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.5555555555555556 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8787878787878789].
2023-08-22 22:16:30,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.5555555555555556 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8787878787878789].
2023-08-22 22:16:32,832 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.15151515151515152, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=True ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5555555555555556 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.030303030303030304].
2023-08-22 22:16:32,832 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.15151515151515152, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=True ,weight_decay=0.008889000000000001 ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5555555555555556 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.030303030303030304].
2023-08-22 22:16:33,959 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7070707070707072 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.030303030303030304].
2023-08-22 22:16:33,959 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.7070707070707072 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.030303030303030304].
2023-08-22 22:16:39,709 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:16:39,709 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:16:52,270 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:16:52,270 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:16:55,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:16:55,208 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:16:58,050 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.5555555555555556 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.27272727272727276].
2023-08-22 22:16:58,051 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.5555555555555556 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.27272727272727276].
2023-08-22 22:16:59,841 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:16:59,842 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:17:13,058 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001819 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.12121212121212122 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.030303030303030304].
2023-08-22 22:17:13,059 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001819 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.12121212121212122 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.030303030303030304].
2023-08-22 22:17:15,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.26262626262626265 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.0 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6262626262626263].
2023-08-22 22:17:15,543 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.26262626262626265 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.0 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6262626262626263].
2023-08-22 22:17:20,078 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:17:20,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:17:23,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:17:23,240 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:17:38,608 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.31313131313131315, momentum=0.17171717171717174 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.5050505050505051].
2023-08-22 22:17:38,609 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.31313131313131315, momentum=0.17171717171717174 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.5050505050505051].
2023-08-22 22:17:41,004 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:17:41,005 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:17:41,006 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:17:41,006 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:17:43,577 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.5555555555555556 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.9595959595959597].
2023-08-22 22:17:43,577 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.5555555555555556 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.9595959595959597].
2023-08-22 22:18:00,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:18:00,955 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:18:01,083 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:18:01,084 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:18:01,965 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:18:01,966 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:18:09,561 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:18:09,562 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:18:20,963 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:18:20,963 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:18:40,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:18:40,538 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:00,212 INFO: Applying selection operators for generation 38.
2023-08-22 22:19:00,213 INFO: Applying genetic operators for generation 38.
2023-08-22 22:19:00,217 INFO: Evaluating fitness for for generation 38.
2023-08-22 22:19:00,217 INFO: Will evaluate fitness for 36 individuals.
2023-08-22 22:19:00,822 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.5252525252525253].
2023-08-22 22:19:00,823 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.5252525252525253].
2023-08-22 22:19:00,829 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.30303030303030304 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:00,829 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.30303030303030304 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:00,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:00,837 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:00,851 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:00,851 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:20,979 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:20,979 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:21,219 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:21,219 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:24,744 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:24,744 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:37,912 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:37,913 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:41,349 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.9090909090909092].
2023-08-22 22:19:41,349 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.9090909090909092].
2023-08-22 22:19:44,959 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:44,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:45,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:45,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:57,977 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:19:57,978 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:20:05,871 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005859000000000001 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.6161616161616162 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.030303030303030304].
2023-08-22 22:20:05,871 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005859000000000001 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.6161616161616162 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.030303030303030304].
2023-08-22 22:20:06,592 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.8585858585858587, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.07070707070707072].
2023-08-22 22:20:06,593 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.8585858585858587, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.07070707070707072].
2023-08-22 22:20:06,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:20:06,954 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:20:18,961 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.5555555555555556 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.030303030303030304].
2023-08-22 22:20:18,961 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.5555555555555556 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.030303030303030304].
2023-08-22 22:20:27,818 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.9696969696969697].
2023-08-22 22:20:27,818 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.9696969696969697].
2023-08-22 22:20:32,657 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 22:20:32,657 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.27272727272727276].
2023-08-22 22:20:33,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9494949494949496 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.98989898989899 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8787878787878789].
2023-08-22 22:20:33,248 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9494949494949496 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.98989898989899 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8787878787878789].
2023-08-22 22:20:44,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:20:44,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:20:52,544 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.5555555555555556 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.98989898989899].
2023-08-22 22:20:52,544 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.5555555555555556 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.98989898989899].
2023-08-22 22:20:59,037 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:20:59,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:21:04,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:21:04,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:21:09,983 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.04040404040404041 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:21:09,983 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.04040404040404041 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:21:20,426 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.030303030303030304].
2023-08-22 22:21:20,426 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.030303030303030304].
2023-08-22 22:21:24,542 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:21:24,543 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:21:30,279 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:21:30,279 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:21:35,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:21:35,247 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:21:45,427 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.7171717171717172].
2023-08-22 22:21:45,427 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.7171717171717172].
2023-08-22 22:21:46,868 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.11111111111111112 ,epsilon=0.0007070707363636364 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.888888888888889].
2023-08-22 22:21:46,868 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.11111111111111112 ,epsilon=0.0007070707363636364 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.888888888888889].
2023-08-22 22:21:50,325 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:21:50,326 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:21:56,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.030303030303030304 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.9292929292929294].
2023-08-22 22:21:56,143 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.030303030303030304 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.9292929292929294].
2023-08-22 22:22:10,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:22:10,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:22:11,113 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.393939393939394 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.030303030303030304].
2023-08-22 22:22:11,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.393939393939394 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.030303030303030304].
2023-08-22 22:22:12,440 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:22:12,440 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:22:21,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.98989898989899 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.020202020202020204].
2023-08-22 22:22:21,075 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.98989898989899 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.020202020202020204].
2023-08-22 22:22:40,602 INFO: Applying selection operators for generation 39.
2023-08-22 22:22:40,603 INFO: Applying genetic operators for generation 39.
2023-08-22 22:22:40,607 INFO: Evaluating fitness for for generation 39.
2023-08-22 22:22:40,607 INFO: Will evaluate fitness for 43 individuals.
2023-08-22 22:22:41,159 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.7474747474747475].
2023-08-22 22:22:41,159 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.7474747474747475].
2023-08-22 22:22:41,174 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.5555555555555556 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.32323232323232326].
2023-08-22 22:22:41,174 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.5555555555555556 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.32323232323232326].
2023-08-22 22:22:41,187 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:22:41,187 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:22:41,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:22:41,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:23:01,212 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.5151515151515152].
2023-08-22 22:23:01,212 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.5151515151515152].
2023-08-22 22:23:02,195 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:23:02,196 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:23:05,709 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:23:05,709 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:23:06,838 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.030303030303030304].
2023-08-22 22:23:06,839 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.030303030303030304].
2023-08-22 22:23:22,411 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=1.0 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.030303030303030304].
2023-08-22 22:23:22,411 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=1.0 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.030303030303030304].
2023-08-22 22:23:25,738 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.030303030303030304].
2023-08-22 22:23:25,739 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.030303030303030304].
2023-08-22 22:23:27,597 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.27272727272727276 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7474747474747475].
2023-08-22 22:23:27,597 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.27272727272727276 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7474747474747475].
2023-08-22 22:23:28,381 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5555555555555556, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.030303030303030304].
2023-08-22 22:23:28,381 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5555555555555556, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.030303030303030304].
2023-08-22 22:23:42,540 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.48484848484848486 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.030303030303030304].
2023-08-22 22:23:42,540 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.48484848484848486 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.030303030303030304].
2023-08-22 22:23:45,370 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:23:45,370 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:23:46,841 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.08080808080808081 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-22 22:23:46,841 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.010101010101010102, momentum=0.08080808080808081 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.686868686868687].
2023-08-22 22:23:53,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:23:53,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:05,549 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:05,549 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:08,572 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:08,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:11,668 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:11,669 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:13,391 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:13,391 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:25,665 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:25,665 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:29,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:29,522 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:31,815 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.36363636363636365 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.030303030303030304].
2023-08-22 22:24:31,815 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.36363636363636365 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.030303030303030304].
2023-08-22 22:24:33,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:33,408 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:45,730 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6060606060606061 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.030303030303030304].
2023-08-22 22:24:45,730 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6060606060606061 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.030303030303030304].
2023-08-22 22:24:49,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.010101010101010102 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6363636363636365].
2023-08-22 22:24:49,801 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.010101010101010102 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6363636363636365].
2023-08-22 22:24:54,203 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:54,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:57,498 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:24:57,498 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:11,897 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:11,897 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:14,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:14,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:15,405 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.030303030303030304].
2023-08-22 22:25:15,405 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.030303030303030304].
2023-08-22 22:25:17,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.36363636363636365 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:17,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.36363636363636365 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:32,033 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:32,033 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:34,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:34,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:35,563 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:35,563 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:43,374 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:43,374 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:52,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:52,036 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:54,146 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:54,146 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:56,658 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:25:56,659 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:26:11,907 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5656565656565657].
2023-08-22 22:26:11,907 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5656565656565657].
2023-08-22 22:26:14,853 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.030303030303030304].
2023-08-22 22:26:14,853 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.030303030303030304].
2023-08-22 22:26:34,059 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5353535353535354 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8787878787878789].
2023-08-22 22:26:34,059 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5353535353535354 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8787878787878789].
2023-08-22 22:26:39,820 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5353535353535354 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:26:39,821 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5353535353535354 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:04,606 INFO: Applying selection operators for generation 40.
2023-08-22 22:27:04,607 INFO: Applying genetic operators for generation 40.
2023-08-22 22:27:04,610 INFO: Evaluating fitness for for generation 40.
2023-08-22 22:27:04,610 INFO: Will evaluate fitness for 45 individuals.
2023-08-22 22:27:05,152 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:05,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:05,184 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.4747474747474748 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.5656565656565657].
2023-08-22 22:27:05,185 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.4747474747474748 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.5656565656565657].
2023-08-22 22:27:05,317 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5353535353535354].
2023-08-22 22:27:05,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5353535353535354].
2023-08-22 22:27:05,329 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.030303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0035360000000000005 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:05,329 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.030303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0035360000000000005 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:25,160 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:25,161 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:29,267 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:29,268 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:30,059 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:30,059 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:31,638 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.030303030303030304].
2023-08-22 22:27:31,638 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.030303030303030304].
2023-08-22 22:27:46,038 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:46,038 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:49,339 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:49,340 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:50,414 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:50,415 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:27:51,137 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.32323232323232326].
2023-08-22 22:27:51,137 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.32323232323232326].
2023-08-22 22:28:06,215 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:06,215 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9797979797979799 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:10,000 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:10,000 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:10,580 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:10,581 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:17,557 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.20202020202020204 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.5252525252525253].
2023-08-22 22:28:17,557 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.20202020202020204 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.5252525252525253].
2023-08-22 22:28:29,979 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:29,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:30,772 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:30,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:31,594 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:31,594 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:42,352 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:42,352 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:49,902 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:49,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:51,475 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:51,475 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:28:51,605 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.494949494949495].
2023-08-22 22:28:51,605 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.494949494949495].
2023-08-22 22:29:02,602 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.7070707070707072 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.06060606060606061].
2023-08-22 22:29:02,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.7070707070707072 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.06060606060606061].
2023-08-22 22:29:09,776 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.5555555555555556 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.030303030303030304].
2023-08-22 22:29:09,776 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.5555555555555556 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.030303030303030304].
2023-08-22 22:29:11,782 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:11,782 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:12,305 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:12,305 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:27,444 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:27,444 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:31,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:31,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:32,495 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.0 ,rho=0.5050505050505051 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.32323232323232326].
2023-08-22 22:29:32,495 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.0 ,rho=0.5050505050505051 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.32323232323232326].
2023-08-22 22:29:35,925 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:35,925 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:47,608 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:47,608 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:52,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.5858585858585859 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:52,145 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.5858585858585859 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:56,125 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:56,125 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:57,509 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.010101010101010102 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:29:57,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.010101010101010102 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:30:08,528 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.5555555555555556 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8787878787878789].
2023-08-22 22:30:08,529 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.5555555555555556 ,epsilon=0.0009191919272727272 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8787878787878789].
2023-08-22 22:30:16,190 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.4141414141414142 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8787878787878789].
2023-08-22 22:30:16,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.4141414141414142 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8787878787878789].
2023-08-22 22:30:18,389 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 22:30:18,389 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 22:30:23,113 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:30:23,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:30:37,261 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:30:37,261 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:30:40,864 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.030303030303030304].
2023-08-22 22:30:40,864 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.030303030303030304].
2023-08-22 22:30:43,169 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.26262626262626265 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.4141414141414142].
2023-08-22 22:30:43,170 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.26262626262626265 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.4141414141414142].
2023-08-22 22:30:57,310 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:30:57,310 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:31:06,322 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.00030400000000000007 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.32323232323232326 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.030303030303030304].
2023-08-22 22:31:06,323 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.00030400000000000007 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.32323232323232326 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.030303030303030304].
2023-08-22 22:31:09,582 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:31:09,582 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:31:31,452 INFO: Applying selection operators for generation 41.
2023-08-22 22:31:31,452 INFO: Applying genetic operators for generation 41.
2023-08-22 22:31:31,456 INFO: Evaluating fitness for for generation 41.
2023-08-22 22:31:31,456 INFO: Will evaluate fitness for 45 individuals.
2023-08-22 22:31:32,009 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.98989898989899 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.030303030303030304].
2023-08-22 22:31:32,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.98989898989899 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.030303030303030304].
2023-08-22 22:31:32,052 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:31:32,052 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:31:32,088 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:31:32,088 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:31:32,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.8181818181818182 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.030303030303030304].
2023-08-22 22:31:32,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.8181818181818182 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.030303030303030304].
2023-08-22 22:31:52,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:31:52,202 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:31:52,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:31:52,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:31:57,608 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:31:57,609 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:31:57,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:31:57,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:32:13,092 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.7676767676767677 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.030303030303030304].
2023-08-22 22:32:13,093 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.7676767676767677 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.030303030303030304].
2023-08-22 22:32:13,301 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:32:13,301 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:32:17,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:32:17,503 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:32:17,614 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:32:17,614 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:32:33,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7272727272727273].
2023-08-22 22:32:33,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7272727272727273].
2023-08-22 22:32:37,903 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:32:37,903 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:32:38,147 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:32:38,147 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:32:38,525 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.20202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.7575757575757577].
2023-08-22 22:32:38,538 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.20202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.7575757575757577].
2023-08-22 22:32:53,778 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.7272727272727273 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.595959595959596].
2023-08-22 22:32:53,779 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.7272727272727273 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.595959595959596].
2023-08-22 22:32:57,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:32:57,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:32:58,154 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5858585858585859 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.030303030303030304].
2023-08-22 22:32:58,154 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5858585858585859 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.030303030303030304].
2023-08-22 22:33:03,582 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:03,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:18,025 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.24242424242424243 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.696969696969697 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.8383838383838385].
2023-08-22 22:33:18,025 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.24242424242424243 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.696969696969697 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.8383838383838385].
2023-08-22 22:33:18,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:18,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:23,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:23,730 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:36,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:36,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:39,068 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:39,068 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:43,122 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.4545454545454546 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=1.0].
2023-08-22 22:33:43,122 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.4545454545454546 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=1.0].
2023-08-22 22:33:43,856 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:43,857 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:57,574 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:57,574 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:59,197 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:33:59,197 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:34:03,097 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.32323232323232326].
2023-08-22 22:34:03,097 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.32323232323232326].
2023-08-22 22:34:04,885 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.030303030303030304 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:34:04,885 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.030303030303030304 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:34:17,772 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:34:17,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:34:19,358 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:34:19,359 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:34:22,764 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.5050505050505051 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:34:22,764 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.5050505050505051 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:34:30,657 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.5555555555555556 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.10101010101010102].
2023-08-22 22:34:30,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.5555555555555556 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.10101010101010102].
2023-08-22 22:34:37,794 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.030303030303030304].
2023-08-22 22:34:37,794 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.030303030303030304].
2023-08-22 22:34:40,327 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.5555555555555556 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.030303030303030304].
2023-08-22 22:34:40,327 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.5555555555555556 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.030303030303030304].
2023-08-22 22:34:48,313 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.4747474747474748 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6565656565656566].
2023-08-22 22:34:48,313 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.4747474747474748 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6565656565656566].
2023-08-22 22:34:56,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:34:56,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:35:04,830 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.17171717171717174 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.030303030303030304].
2023-08-22 22:35:04,830 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.17171717171717174 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.030303030303030304].
2023-08-22 22:35:17,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:35:17,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:35:27,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:35:27,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:35:29,798 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:35:29,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:35:37,016 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:35:37,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:35:47,882 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.5555555555555556 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.030303030303030304].
2023-08-22 22:35:47,883 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.5555555555555556 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.030303030303030304].
2023-08-22 22:36:24,258 INFO: Applying selection operators for generation 42.
2023-08-22 22:36:24,258 INFO: Applying genetic operators for generation 42.
2023-08-22 22:36:24,262 INFO: Evaluating fitness for for generation 42.
2023-08-22 22:36:24,262 INFO: Will evaluate fitness for 41 individuals.
2023-08-22 22:36:24,824 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:36:24,824 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:36:24,847 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:36:24,848 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:36:24,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:36:24,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:36:24,867 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:36:24,867 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:36:44,666 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:36:44,667 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:36:44,787 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.19191919191919193 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.6666666666666667].
2023-08-22 22:36:44,787 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.19191919191919193 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.6666666666666667].
2023-08-22 22:36:45,001 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.8686868686868687 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.23232323232323235].
2023-08-22 22:36:45,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.8686868686868687 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.23232323232323235].
2023-08-22 22:36:45,509 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:36:45,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:37:05,006 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:37:05,007 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:37:05,448 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:37:05,448 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:37:05,600 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.07070707070707072].
2023-08-22 22:37:05,600 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.07070707070707072].
2023-08-22 22:37:11,044 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.17171717171717174 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.030303030303030304].
2023-08-22 22:37:11,045 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.17171717171717174 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.030303030303030304].
2023-08-22 22:37:25,469 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.5555555555555556 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.686868686868687].
2023-08-22 22:37:25,469 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.5555555555555556 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.686868686868687].
2023-08-22 22:37:25,924 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:37:25,924 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:37:30,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:37:30,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:37:36,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:37:36,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:37:45,887 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:37:45,887 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:37:51,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.29292929292929293 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.030303030303030304].
2023-08-22 22:37:51,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.29292929292929293 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.030303030303030304].
2023-08-22 22:37:51,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.030303030303030304].
2023-08-22 22:37:51,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.030303030303030304].
2023-08-22 22:37:56,688 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.787878787878788, momentum=0.17171717171717174 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.4747474747474748 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.8787878787878789].
2023-08-22 22:37:56,689 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.787878787878788, momentum=0.17171717171717174 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.4747474747474748 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.8787878787878789].
2023-08-22 22:38:06,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:06,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:11,924 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:11,924 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:16,146 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:16,147 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:17,001 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.7676767676767677 ,learning_rate_power=0.0 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8181818181818182].
2023-08-22 22:38:17,002 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.7676767676767677 ,learning_rate_power=0.0 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8181818181818182].
2023-08-22 22:38:26,047 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:26,048 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:32,719 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.5555555555555556 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.030303030303030304].
2023-08-22 22:38:32,719 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.5555555555555556 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.030303030303030304].
2023-08-22 22:38:36,123 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:36,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:41,957 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:41,957 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:46,942 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.2828282828282829 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:46,943 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.2828282828282829 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:51,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:51,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:56,983 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:38:56,983 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:39:02,084 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5454545454545455, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8787878787878789 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.030303030303030304].
2023-08-22 22:39:02,084 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5454545454545455, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8787878787878789 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.030303030303030304].
2023-08-22 22:39:11,110 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8585858585858587 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.030303030303030304].
2023-08-22 22:39:11,111 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8585858585858587 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.030303030303030304].
2023-08-22 22:39:12,936 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9797979797979799 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.12121212121212122].
2023-08-22 22:39:12,937 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9797979797979799 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.12121212121212122].
2023-08-22 22:39:17,229 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:39:17,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:39:27,222 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:39:27,222 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:39:37,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:39:37,374 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:39:38,555 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:39:38,556 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:39:57,275 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8787878787878789 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:39:57,275 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8787878787878789 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:39:58,397 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:39:58,398 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:40:23,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:40:23,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:40:42,793 INFO: Applying selection operators for generation 43.
2023-08-22 22:40:42,794 INFO: Applying genetic operators for generation 43.
2023-08-22 22:40:42,796 INFO: Evaluating fitness for for generation 43.
2023-08-22 22:40:42,796 INFO: Will evaluate fitness for 40 individuals.
2023-08-22 22:40:43,379 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:40:43,380 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:40:43,385 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:40:43,385 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:40:43,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:40:43,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:40:43,393 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:40:43,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:03,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:03,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:03,380 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:03,381 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:03,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:03,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:03,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:03,922 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:23,243 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.11111111111111112].
2023-08-22 22:41:23,243 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.11111111111111112].
2023-08-22 22:41:23,309 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:23,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:23,515 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:23,515 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:23,880 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:23,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:43,100 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.13131313131313133, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:43,101 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.13131313131313133, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:41:43,567 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4545454545454546 ,rho=0.696969696969697 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.030303030303030304].
2023-08-22 22:41:43,567 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4545454545454546 ,rho=0.696969696969697 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.030303030303030304].
2023-08-22 22:41:43,822 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.21212121212121213].
2023-08-22 22:41:43,822 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.21212121212121213].
2023-08-22 22:41:44,136 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.020202020202020204, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.020202020202020204 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.21212121212121213].
2023-08-22 22:41:44,136 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.020202020202020204, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.020202020202020204 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.21212121212121213].
2023-08-22 22:42:01,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:01,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:08,965 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.7676767676767677 ,learning_rate_power=0.0 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8181818181818182].
2023-08-22 22:42:08,965 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.7676767676767677 ,learning_rate_power=0.0 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8181818181818182].
2023-08-22 22:42:09,892 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:09,892 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:10,507 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.7676767676767677 ,learning_rate_power=0.0 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8181818181818182].
2023-08-22 22:42:10,508 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.7676767676767677 ,learning_rate_power=0.0 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8181818181818182].
2023-08-22 22:42:22,219 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:22,219 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:30,176 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6464646464646465 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.030303030303030304].
2023-08-22 22:42:30,176 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6464646464646465 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.030303030303030304].
2023-08-22 22:42:35,082 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:35,083 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:36,374 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0035360000000000005 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=1.0].
2023-08-22 22:42:36,374 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0035360000000000005 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=1.0].
2023-08-22 22:42:42,475 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:42,476 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:55,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:55,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:56,554 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:56,555 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:57,187 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:42:57,187 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:02,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:02,569 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:16,179 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:16,179 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:16,467 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:16,467 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:18,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:18,630 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:22,727 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:22,727 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:36,369 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:36,369 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:37,161 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:37,162 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:38,648 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004950000000000001 ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.696969696969697 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4141414141414142].
2023-08-22 22:43:38,648 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004950000000000001 ,use_ema=False ,ema_momentum=0.9292929292929294 ,rho=0.696969696969697 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4141414141414142].
2023-08-22 22:43:43,530 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:43,530 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:56,555 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:43:56,555 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:44:03,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:44:03,884 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:44:23,775 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:44:23,775 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:44:42,960 INFO: Applying selection operators for generation 44.
2023-08-22 22:44:42,961 INFO: Applying genetic operators for generation 44.
2023-08-22 22:44:42,964 INFO: Evaluating fitness for for generation 44.
2023-08-22 22:44:42,964 INFO: Will evaluate fitness for 42 individuals.
2023-08-22 22:44:43,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.17171717171717174 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.030303030303030304].
2023-08-22 22:44:43,564 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.17171717171717174 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.030303030303030304].
2023-08-22 22:44:43,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:44:43,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:44:43,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:44:43,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:44:43,605 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:44:43,605 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:03,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:03,535 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:04,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:04,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:04,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:04,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:09,199 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:09,199 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:23,472 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:23,473 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:24,370 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:24,370 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:24,660 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:24,661 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:29,274 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.26262626262626265, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.7575757575757577 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.98989898989899].
2023-08-22 22:45:29,274 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.26262626262626265, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.7575757575757577 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.98989898989899].
2023-08-22 22:45:43,374 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:43,374 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:44,348 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:44,349 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:44,864 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:44,865 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:55,402 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.686868686868687 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:45:55,402 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.686868686868687 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:04,098 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:04,099 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:04,241 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.15151515151515152 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.030303030303030304].
2023-08-22 22:46:04,241 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.15151515151515152 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.030303030303030304].
2023-08-22 22:46:05,353 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.3434343434343435].
2023-08-22 22:46:05,354 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.3434343434343435].
2023-08-22 22:46:21,116 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=1.0 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.888888888888889].
2023-08-22 22:46:21,116 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=1.0 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.888888888888889].
2023-08-22 22:46:24,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:24,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:30,805 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.494949494949495 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:30,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.494949494949495 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:31,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:31,502 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:44,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.4747474747474748 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:44,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.4747474747474748 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:46,783 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:46,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:51,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:51,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:56,192 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:46:56,192 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:06,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:06,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:09,288 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:09,288 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:11,927 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8181818181818182 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:11,927 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8181818181818182 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:16,276 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:16,276 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:27,444 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:27,444 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:29,951 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8080808080808082, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.06060606060606061 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.030303030303030304].
2023-08-22 22:47:29,952 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8080808080808082, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.06060606060606061 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.030303030303030304].
2023-08-22 22:47:36,343 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.06060606060606061 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.98989898989899].
2023-08-22 22:47:36,343 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.06060606060606061 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.98989898989899].
2023-08-22 22:47:37,561 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:37,561 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:47,508 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:47,508 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:55,904 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:55,904 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:58,634 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:47:58,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:48:15,878 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.030303030303030304 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.19191919191919193].
2023-08-22 22:48:15,878 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.030303030303030304 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.19191919191919193].
2023-08-22 22:48:18,798 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:48:18,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:48:38,524 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:48:38,524 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:48:41,477 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:48:41,477 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:04,297 INFO: Applying selection operators for generation 45.
2023-08-22 22:49:04,297 INFO: Applying genetic operators for generation 45.
2023-08-22 22:49:04,301 INFO: Evaluating fitness for for generation 45.
2023-08-22 22:49:04,301 INFO: Will evaluate fitness for 41 individuals.
2023-08-22 22:49:04,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:04,873 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:04,883 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:04,883 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:04,889 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:04,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:04,899 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:04,900 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:24,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:24,644 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:24,813 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:24,814 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:25,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0008090000000000001 ,use_ema=False ,ema_momentum=0.5656565656565657 ,rho=0.5555555555555556 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.27272727272727276].
2023-08-22 22:49:25,078 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0008090000000000001 ,use_ema=False ,ema_momentum=0.5656565656565657 ,rho=0.5555555555555556 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.27272727272727276].
2023-08-22 22:49:25,739 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:25,739 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:44,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:44,802 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:45,300 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:45,300 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:45,871 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6464646464646465 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.030303030303030304].
2023-08-22 22:49:45,871 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6464646464646465 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.030303030303030304].
2023-08-22 22:49:50,627 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:49:50,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:04,754 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:04,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:05,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:05,245 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:11,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:11,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:12,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:12,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:24,610 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:24,610 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:25,052 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:25,053 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:31,665 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:31,665 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:32,054 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:32,055 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:44,916 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.797979797979798 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.25252525252525254].
2023-08-22 22:50:44,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.797979797979798 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.25252525252525254].
2023-08-22 22:50:45,257 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:45,257 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:50:52,386 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.30303030303030304].
2023-08-22 22:50:52,386 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.30303030303030304].
2023-08-22 22:50:52,907 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.9292929292929294 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.686868686868687 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.030303030303030304].
2023-08-22 22:50:52,907 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.9292929292929294 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.686868686868687 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.030303030303030304].
2023-08-22 22:51:05,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.5555555555555556 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.26262626262626265].
2023-08-22 22:51:05,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.5555555555555556 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.26262626262626265].
2023-08-22 22:51:11,385 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:51:11,386 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:51:16,779 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:51:16,780 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:51:18,299 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5757575757575758, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.030303030303030304].
2023-08-22 22:51:18,299 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5757575757575758, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.6565656565656566 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.030303030303030304].
2023-08-22 22:51:31,604 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:51:31,605 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:51:31,839 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:51:31,839 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:51:37,043 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:51:37,043 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:51:37,705 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.19191919191919193 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.030303030303030304].
2023-08-22 22:51:37,706 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.19191919191919193 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.030303030303030304].
2023-08-22 22:51:51,674 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:51:51,674 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:51:51,821 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.9090909090909092].
2023-08-22 22:51:51,821 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.9090909090909092].
2023-08-22 22:51:57,157 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:51:57,157 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:52:03,249 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6060606060606061 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.21212121212121213].
2023-08-22 22:52:03,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6060606060606061 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.21212121212121213].
2023-08-22 22:52:11,541 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9191919191919192 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:52:11,541 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9191919191919192 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:52:12,486 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.030303030303030304].
2023-08-22 22:52:12,486 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.030303030303030304].
2023-08-22 22:52:29,847 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:52:29,847 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:52:31,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.29292929292929293 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.20202020202020204].
2023-08-22 22:52:31,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.29292929292929293 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.20202020202020204].
2023-08-22 22:52:50,781 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.31313131313131315 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.393939393939394 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:52:50,781 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.31313131313131315 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.393939393939394 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:14,220 INFO: Applying selection operators for generation 46.
2023-08-22 22:53:14,221 INFO: Applying genetic operators for generation 46.
2023-08-22 22:53:14,224 INFO: Evaluating fitness for for generation 46.
2023-08-22 22:53:14,224 INFO: Will evaluate fitness for 37 individuals.
2023-08-22 22:53:14,801 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.19191919191919193, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.4444444444444445 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.030303030303030304].
2023-08-22 22:53:14,802 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.19191919191919193, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.4444444444444445 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.030303030303030304].
2023-08-22 22:53:14,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:14,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:14,803 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9696969696969697 ,learning_rate_power=0.0 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.31313131313131315].
2023-08-22 22:53:14,804 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9696969696969697 ,learning_rate_power=0.0 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.31313131313131315].
2023-08-22 22:53:14,815 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:14,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:33,286 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.030303030303030304 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.9393939393939394].
2023-08-22 22:53:33,286 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.030303030303030304 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.9393939393939394].
2023-08-22 22:53:33,957 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:33,957 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:34,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:34,578 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:34,805 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:34,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:54,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.7373737373737375].
2023-08-22 22:53:54,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.7373737373737375].
2023-08-22 22:53:54,627 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:54,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:54,804 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:54,804 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:53:59,268 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.030303030303030304].
2023-08-22 22:53:59,268 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.030303030303030304].
2023-08-22 22:54:14,678 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.9090909090909092].
2023-08-22 22:54:14,678 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.9090909090909092].
2023-08-22 22:54:14,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:14,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:15,932 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:15,933 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:21,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:21,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:34,586 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:34,586 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:35,565 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:35,566 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:36,220 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8484848484848485].
2023-08-22 22:54:36,220 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8484848484848485].
2023-08-22 22:54:42,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:42,773 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:54,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:54,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:55,909 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:54:55,910 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:55:01,822 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.30303030303030304 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.24242424242424243].
2023-08-22 22:55:01,822 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.30303030303030304 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.787878787878788 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.24242424242424243].
2023-08-22 22:55:03,156 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:55:03,156 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:55:15,167 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:55:15,167 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:55:15,960 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:55:15,960 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:55:23,278 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0.7171717171717172 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.686868686868687 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.4040404040404041].
2023-08-22 22:55:23,279 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0.7171717171717172 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.686868686868687 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.4040404040404041].
2023-08-22 22:55:28,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8585858585858587 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:55:28,032 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8585858585858587 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:55:35,167 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:55:35,167 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:55:36,076 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.5555555555555556 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.030303030303030304].
2023-08-22 22:55:36,076 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.5555555555555556 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.030303030303030304].
2023-08-22 22:55:48,774 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.10101010101010102 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.030303030303030304].
2023-08-22 22:55:48,774 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.10101010101010102 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.030303030303030304].
2023-08-22 22:55:54,471 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.8686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6161616161616162 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.030303030303030304].
2023-08-22 22:55:54,472 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.8686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6161616161616162 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.24242424242424243 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.030303030303030304].
2023-08-22 22:55:55,143 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:55:55,143 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:55:56,898 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.38383838383838387 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.9696969696969697].
2023-08-22 22:55:56,899 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.38383838383838387 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.9696969696969697].
2023-08-22 22:56:09,593 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.5555555555555556 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7373737373737375].
2023-08-22 22:56:09,594 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.5555555555555556 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7373737373737375].
2023-08-22 22:56:15,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:56:15,077 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:56:21,440 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.37373737373737376 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.98989898989899 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.010101010101010102].
2023-08-22 22:56:21,440 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.37373737373737376 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.98989898989899 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.010101010101010102].
2023-08-22 22:56:59,448 INFO: Applying selection operators for generation 47.
2023-08-22 22:56:59,449 INFO: Applying genetic operators for generation 47.
2023-08-22 22:56:59,452 INFO: Evaluating fitness for for generation 47.
2023-08-22 22:56:59,452 INFO: Will evaluate fitness for 45 individuals.
2023-08-22 22:57:00,022 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:00,022 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:00,035 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:00,035 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.16161616161616163].
2023-08-22 22:57:00,035 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:00,035 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.16161616161616163].
2023-08-22 22:57:00,061 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:00,062 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:19,053 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:19,053 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:19,959 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:19,960 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:19,998 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.12121212121212122 ,rho=0.23232323232323235 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.8787878787878789].
2023-08-22 22:57:19,998 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.12121212121212122 ,rho=0.23232323232323235 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.8787878787878789].
2023-08-22 22:57:20,613 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.8282828282828284 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.030303030303030304].
2023-08-22 22:57:20,613 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.8282828282828284 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.030303030303030304].
2023-08-22 22:57:38,540 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:38,540 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:39,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:39,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:40,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:40,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:45,684 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:45,684 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:57:59,124 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.48484848484848486].
2023-08-22 22:57:59,124 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.48484848484848486].
2023-08-22 22:58:00,058 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.030303030303030304].
2023-08-22 22:58:00,058 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.030303030303030304].
2023-08-22 22:58:00,996 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.05050505050505051 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.030303030303030304].
2023-08-22 22:58:00,996 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.05050505050505051 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.030303030303030304].
2023-08-22 22:58:05,666 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:58:05,666 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:58:19,449 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:58:19,449 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:58:25,642 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:58:25,642 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:58:26,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:58:26,919 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:58:27,333 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.686868686868687, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7575757575757577].
2023-08-22 22:58:27,333 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.686868686868687, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7575757575757577].
2023-08-22 22:58:39,529 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:58:39,529 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:58:45,157 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.8686868686868687 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.30303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.030303030303030304].
2023-08-22 22:58:45,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.8686868686868687 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.30303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.030303030303030304].
2023-08-22 22:58:46,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:58:46,248 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:58:46,872 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8585858585858587 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.9595959595959597].
2023-08-22 22:58:46,872 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8585858585858587 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.9595959595959597].
2023-08-22 22:58:59,642 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:58:59,642 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:59:06,353 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:59:06,353 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:59:10,993 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:59:10,993 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:59:12,412 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.8585858585858587 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.595959595959596].
2023-08-22 22:59:12,412 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.8585858585858587 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.595959595959596].
2023-08-22 22:59:19,697 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:59:19,697 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:59:26,472 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:59:26,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:59:31,155 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.4747474747474748 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.38383838383838387].
2023-08-22 22:59:31,155 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.4747474747474748 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.38383838383838387].
2023-08-22 22:59:38,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.030303030303030304].
2023-08-22 22:59:38,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.030303030303030304].
2023-08-22 22:59:40,572 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5656565656565657 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.030303030303030304].
2023-08-22 22:59:40,572 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5656565656565657 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.030303030303030304].
2023-08-22 22:59:46,479 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.23232323232323235 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.9494949494949496].
2023-08-22 22:59:46,479 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.23232323232323235 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.9494949494949496].
2023-08-22 22:59:57,870 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.30303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.8282828282828284].
2023-08-22 22:59:57,870 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.30303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.8282828282828284].
2023-08-22 22:59:59,083 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 22:59:59,084 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:00:05,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:00:05,859 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:00:11,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:00:11,590 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:00:19,311 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7575757575757577].
2023-08-22 23:00:19,311 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7575757575757577].
2023-08-22 23:00:24,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:00:24,046 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:00:26,040 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.42424242424242425 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.686868686868687].
2023-08-22 23:00:26,040 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.42424242424242425 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.686868686868687].
2023-08-22 23:00:44,004 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:00:44,004 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:00:45,826 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:00:45,826 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:00:51,820 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:00:51,820 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:01:04,770 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:01:04,770 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:01:24,006 INFO: Applying selection operators for generation 48.
2023-08-22 23:01:24,007 INFO: Applying genetic operators for generation 48.
2023-08-22 23:01:24,011 INFO: Evaluating fitness for for generation 48.
2023-08-22 23:01:24,011 INFO: Will evaluate fitness for 42 individuals.
2023-08-22 23:01:24,565 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.030303030303030304].
2023-08-22 23:01:24,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.030303030303030304].
2023-08-22 23:01:24,566 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:01:24,566 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:01:24,570 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.494949494949495 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.31313131313131315].
2023-08-22 23:01:24,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.494949494949495 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.31313131313131315].
2023-08-22 23:01:24,601 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:01:24,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:01:44,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:01:44,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:01:44,677 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7070707070707072 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.030303030303030304].
2023-08-22 23:01:44,677 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7070707070707072 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.030303030303030304].
2023-08-22 23:01:44,736 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:01:44,736 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:01:50,580 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001213 ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.9292929292929294 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.696969696969697].
2023-08-22 23:01:50,581 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001213 ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.9292929292929294 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.696969696969697].
2023-08-22 23:02:04,006 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.4444444444444445 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:02:04,006 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.4444444444444445 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:02:05,094 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8282828282828284].
2023-08-22 23:02:05,094 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8282828282828284].
2023-08-22 23:02:05,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.16161616161616163 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.030303030303030304].
2023-08-22 23:02:05,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.16161616161616163 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.030303030303030304].
2023-08-22 23:02:11,123 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:02:11,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:02:29,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8181818181818182 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.888888888888889].
2023-08-22 23:02:29,728 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.8181818181818182 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.888888888888889].
2023-08-22 23:02:30,800 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:02:30,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:02:31,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5757575757575758 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.030303030303030304].
2023-08-22 23:02:31,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5757575757575758 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.030303030303030304].
2023-08-22 23:02:32,146 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:02:32,147 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:02:50,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:02:50,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:02:52,284 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.12121212121212122].
2023-08-22 23:02:52,284 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.12121212121212122].
2023-08-22 23:02:57,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:02:57,374 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:02:57,527 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:02:57,527 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:03:10,670 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:03:10,670 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:03:12,449 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.27272727272727276].
2023-08-22 23:03:12,449 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.27272727272727276].
2023-08-22 23:03:17,220 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6060606060606061, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.010101010101010102].
2023-08-22 23:03:17,221 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6060606060606061, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.010101010101010102].
2023-08-22 23:03:17,763 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:03:17,763 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:03:31,313 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:03:31,314 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:03:37,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:03:37,937 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:03:38,810 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.9292929292929294].
2023-08-22 23:03:38,810 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.9292929292929294].
2023-08-22 23:03:42,232 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4141414141414142].
2023-08-22 23:03:42,232 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4141414141414142].
2023-08-22 23:03:51,444 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:03:51,445 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:03:58,046 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:03:58,046 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:04:04,597 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:04:04,597 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:04:08,602 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.9292929292929294 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.030303030303030304].
2023-08-22 23:04:08,602 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.9292929292929294 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.030303030303030304].
2023-08-22 23:04:11,445 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:04:11,445 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:04:18,212 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:04:18,212 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:04:24,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:04:24,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:04:31,394 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:04:31,394 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:04:33,991 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.98989898989899].
2023-08-22 23:04:33,992 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.98989898989899].
2023-08-22 23:04:39,288 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.5757575757575758 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.42424242424242425].
2023-08-22 23:04:39,288 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2828282828282829, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.5757575757575758 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.42424242424242425].
2023-08-22 23:04:52,147 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:04:52,147 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:04:58,639 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:04:58,639 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:05:11,906 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.696969696969697].
2023-08-22 23:05:11,906 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.696969696969697].
2023-08-22 23:05:18,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:05:18,453 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:05:37,600 INFO: Applying selection operators for generation 49.
2023-08-22 23:05:37,600 INFO: Applying genetic operators for generation 49.
2023-08-22 23:05:37,604 INFO: Evaluating fitness for for generation 49.
2023-08-22 23:05:37,604 INFO: Will evaluate fitness for 33 individuals.
2023-08-22 23:05:38,175 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:05:38,176 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:05:38,179 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.26262626262626265 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4545454545454546].
2023-08-22 23:05:38,179 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.26262626262626265 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4545454545454546].
2023-08-22 23:05:38,180 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:05:38,180 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:05:38,185 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:05:38,185 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:05:58,005 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:05:58,006 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:05:58,168 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:05:58,168 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:05:58,869 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:05:58,870 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:06:04,059 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:06:04,060 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:06:18,675 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:06:18,676 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:06:18,958 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.5555555555555556 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8181818181818182].
2023-08-22 23:06:18,958 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.5555555555555556 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.8383838383838385 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8181818181818182].
2023-08-22 23:06:19,010 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.23232323232323235 ,epsilon=0.0002727273454545454 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.030303030303030304].
2023-08-22 23:06:19,010 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.23232323232323235 ,epsilon=0.0002727273454545454 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.030303030303030304].
2023-08-22 23:06:24,055 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.07070707070707072].
2023-08-22 23:06:24,055 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.07070707070707072].
2023-08-22 23:06:37,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:06:37,481 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:06:38,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.030303030303030304].
2023-08-22 23:06:38,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.030303030303030304].
2023-08-22 23:06:45,201 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:06:45,201 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:06:51,315 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:06:51,316 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:06:57,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.5757575757575758].
2023-08-22 23:06:57,596 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.5757575757575758].
2023-08-22 23:06:59,088 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:06:59,089 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:07:05,283 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:07:05,283 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:07:11,401 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.7575757575757577 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.33333333333333337].
2023-08-22 23:07:11,402 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.7575757575757577 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.33333333333333337].
2023-08-22 23:07:17,688 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.12121212121212122].
2023-08-22 23:07:17,688 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.12121212121212122].
2023-08-22 23:07:19,032 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:07:19,032 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:07:26,116 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:07:26,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:07:37,223 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:07:37,223 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:07:38,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:07:38,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:07:38,877 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:07:38,878 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:07:46,269 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.30303030303030304 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.2828282828282829].
2023-08-22 23:07:46,270 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.30303030303030304 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.2828282828282829].
2023-08-22 23:07:58,815 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.4545454545454546 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.030303030303030304].
2023-08-22 23:07:58,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.4545454545454546 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.030303030303030304].
2023-08-22 23:07:59,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:07:59,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:08:05,273 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.8989898989898991 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.030303030303030304].
2023-08-22 23:08:05,274 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.8989898989898991 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.030303030303030304].
2023-08-22 23:08:18,118 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:08:18,119 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:08:19,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:08:19,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:08:30,887 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.494949494949495].
2023-08-22 23:08:30,887 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.2828282828282829, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.494949494949495].
2023-08-22 23:08:55,652 INFO: Applying selection operators for generation 50.
2023-08-22 23:08:55,652 INFO: Applying genetic operators for generation 50.
2023-08-22 23:08:55,656 INFO: Evaluating fitness for for generation 50.
2023-08-22 23:08:55,656 INFO: Will evaluate fitness for 40 individuals.
2023-08-22 23:08:56,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:08:56,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:08:56,222 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:08:56,223 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:08:56,296 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.5757575757575758].
2023-08-22 23:08:56,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.5757575757575758].
2023-08-22 23:08:56,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:08:56,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:09:16,049 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.48484848484848486 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.030303030303030304].
2023-08-22 23:09:16,049 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.48484848484848486 ,epsilon=0.00023232330909090908 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.030303030303030304].
2023-08-22 23:09:16,057 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.38383838383838387 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.030303030303030304].
2023-08-22 23:09:16,057 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.38383838383838387 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.030303030303030304].
2023-08-22 23:09:16,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:09:16,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:09:17,040 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=0.006667000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.8383838383838385 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.030303030303030304].
2023-08-22 23:09:17,040 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=0.006667000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.8383838383838385 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.030303030303030304].
2023-08-22 23:09:36,964 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:09:36,965 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:09:42,493 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:09:42,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:09:43,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:09:43,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:09:43,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:09:43,963 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:09:57,049 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.26262626262626265 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.9393939393939394].
2023-08-22 23:09:57,049 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.26262626262626265 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.9393939393939394].
2023-08-22 23:10:02,708 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.11111111111111112 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.030303030303030304].
2023-08-22 23:10:02,709 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7070707070707072, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.11111111111111112 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.030303030303030304].
2023-08-22 23:10:03,369 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:10:03,369 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:10:04,034 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9393939393939394 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.24242424242424243].
2023-08-22 23:10:04,034 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9393939393939394 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.24242424242424243].
2023-08-22 23:10:22,579 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0.6666666666666667 ,nesterov=False ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4646464646464647].
2023-08-22 23:10:22,579 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2828282828282829, momentum=0.6666666666666667 ,nesterov=False ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4646464646464647].
2023-08-22 23:10:23,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:10:23,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:10:23,485 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.36363636363636365 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.11111111111111112].
2023-08-22 23:10:23,485 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.36363636363636365 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.11111111111111112].
2023-08-22 23:10:30,634 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:10:30,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:10:43,205 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:10:43,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:10:50,870 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9494949494949496 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.030303030303030304].
2023-08-22 23:10:50,870 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9494949494949496 ,epsilon=0.0003030303727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.030303030303030304].
2023-08-22 23:10:51,188 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9696969696969697 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.030303030303030304].
2023-08-22 23:10:51,189 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9696969696969697 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.030303030303030304].
2023-08-22 23:11:03,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:11:03,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:11:03,965 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.030303030303030304].
2023-08-22 23:11:03,965 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.030303030303030304].
2023-08-22 23:11:17,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:11:17,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:11:17,847 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.030303030303030304].
2023-08-22 23:11:17,847 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.030303030303030304].
2023-08-22 23:11:23,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:11:23,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:11:24,617 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.5757575757575758 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.030303030303030304].
2023-08-22 23:11:24,618 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.5757575757575758 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.030303030303030304].
2023-08-22 23:11:37,487 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.20202020202020204 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.030303030303030304].
2023-08-22 23:11:37,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.20202020202020204 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.030303030303030304].
2023-08-22 23:11:43,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:11:43,422 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:11:44,230 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:11:44,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:11:50,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.7272727272727273 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.030303030303030304].
2023-08-22 23:11:50,804 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.7272727272727273 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.030303030303030304].
2023-08-22 23:12:03,444 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.7575757575757577 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.030303030303030304].
2023-08-22 23:12:03,444 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.7575757575757577 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.030303030303030304].
2023-08-22 23:12:03,888 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.6666666666666667 ,nesterov=False ,amsgrad=True ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.5555555555555556 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.04040404040404041].
2023-08-22 23:12:03,888 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.6666666666666667 ,nesterov=False ,amsgrad=True ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.5555555555555556 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.04040404040404041].
2023-08-22 23:12:04,240 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:12:04,240 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:12:17,018 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:12:17,018 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:12:24,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:12:24,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:12:28,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.25252525252525254].
2023-08-22 23:12:28,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.25252525252525254].
2023-08-22 23:12:49,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:12:49,431 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.5555555555555556 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.030303030303030304].
2023-08-22 23:13:08,684 INFO: Saving the results to the folder specified in the arguments.
2023-08-22 23:13:08,884 INFO: Closing the multiprocessing pool.
2023-08-22 23:13:08,884 INFO: Experiment finished.

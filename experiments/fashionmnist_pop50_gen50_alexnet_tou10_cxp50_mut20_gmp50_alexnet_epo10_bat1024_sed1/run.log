2023-08-03 18:18:37,562 INFO: Starting experiment with the arguments logged below.
2023-08-03 18:18:37,563 INFO: Namespace(results_path='/mnt/lustre/users/mbornman1/evoopt-cnn/experiments/fashionmnist_pop50_gen50_alexnet_tou10_cxp50_mut20_gmp50_alexnet_epo10_bat1024_sed1', cpu_count=4, seed=1, dataset='fashion_mnist', pop_size=50, ngen=50, model='alexnet', epochs=10, batch_size=1024, tournsize=10, cxpb=0.5, mutpb=0.2, gene_mut_prob=0.5)
2023-08-03 18:18:37,563 INFO: Setting the random number generator seed for this experiment.
2023-08-03 18:18:37,563 INFO: Initializing the multiprocessing pool.
2023-08-03 18:18:37,575 INFO: Running the evolutionary algorithm with the given hyper-parameters. This may take a while. Statistics for every generation will be printed below.
2023-08-03 18:18:37,575 INFO: Setting up DEAP toolbox.
2023-08-03 18:18:37,575 INFO: Registering individual initialization method.
2023-08-03 18:18:37,575 INFO: Registering population initialization method.
2023-08-03 18:18:37,575 INFO: Registering the selection method.
2023-08-03 18:18:37,575 INFO: Registering the evaluation method.
2023-08-03 18:18:37,575 INFO: Registering the genetic operators.
2023-08-03 18:18:37,575 INFO: Setting up the hall of fame and stats we want to keep track of.
2023-08-03 18:18:37,575 INFO: Initializing the initial population.
2023-08-03 18:18:37,630 INFO: Running the evolutionary algorithm.
2023-08-03 18:18:37,630 INFO: Evaluating fitness for the initial generation of individuals.
2023-08-03 18:18:37,630 INFO: Will evaluate fitness for 50 individuals.
2023-08-03 18:18:39,389 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-03 18:18:39,389 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-03 18:18:39,389 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-03 18:18:39,389 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-03 18:18:39,693 DEBUG: Creating converter from 7 to 5
2023-08-03 18:18:39,693 DEBUG: Creating converter from 7 to 5
2023-08-03 18:18:39,693 DEBUG: Creating converter from 5 to 7
2023-08-03 18:18:39,693 DEBUG: Creating converter from 7 to 5
2023-08-03 18:18:39,693 DEBUG: Creating converter from 7 to 5
2023-08-03 18:18:39,693 DEBUG: Creating converter from 7 to 5
2023-08-03 18:18:39,693 DEBUG: Creating converter from 5 to 7
2023-08-03 18:18:39,693 DEBUG: Creating converter from 5 to 7
2023-08-03 18:18:39,693 DEBUG: Creating converter from 5 to 7
2023-08-03 18:18:39,693 DEBUG: Creating converter from 5 to 7
2023-08-03 18:18:39,693 DEBUG: Creating converter from 7 to 5
2023-08-03 18:18:39,693 DEBUG: Creating converter from 7 to 5
2023-08-03 18:18:39,693 DEBUG: Creating converter from 7 to 5
2023-08-03 18:18:39,693 DEBUG: Creating converter from 5 to 7
2023-08-03 18:18:39,693 DEBUG: Creating converter from 5 to 7
2023-08-03 18:18:39,693 DEBUG: Creating converter from 5 to 7
2023-08-03 18:18:45,883 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5801128458216923, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003843223422744428 ,use_ema=False ,ema_momentum=0.40540305124061027 ,rho=0.25259480631266706 ,epsilon=0.0003971269571982198 ,centered=True ,beta_1=0.9899639287088692 ,beta_2=0.14404368528843992 ,learning_rate_power=-0.7948077962493868 ,initial_accumulator_value=0.34370824003601563 ,l1_regularization_strength=0.6278152907950941 ,l2_regularization_strength=0.831515351841805 ,l2_shrinkage_regularization_strength=0.04866964706322807 ,beta=0.720613118115051].
2023-08-03 18:18:45,884 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5801128458216923, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003843223422744428 ,use_ema=False ,ema_momentum=0.40540305124061027 ,rho=0.25259480631266706 ,epsilon=0.0003971269571982198 ,centered=True ,beta_1=0.9899639287088692 ,beta_2=0.14404368528843992 ,learning_rate_power=-0.7948077962493868 ,initial_accumulator_value=0.34370824003601563 ,l1_regularization_strength=0.6278152907950941 ,l2_regularization_strength=0.831515351841805 ,l2_shrinkage_regularization_strength=0.04866964706322807 ,beta=0.720613118115051].
2023-08-03 18:18:45,925 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.769376593480245, momentum=0.23777833630521017 ,nesterov=True ,amsgrad=True ,weight_decay=0.005711278938162457 ,use_ema=False ,ema_momentum=0.7871706152692161 ,rho=0.8583384071739677 ,epsilon=0.000741132145676428 ,centered=False ,beta_1=0.17393138641796757 ,beta_2=0.930158637250902 ,learning_rate_power=-0.8314593071761072 ,initial_accumulator_value=0.9794210710450384 ,l1_regularization_strength=0.11890778195059515 ,l2_regularization_strength=0.003393509000474082 ,l2_shrinkage_regularization_strength=0.8345514416123097 ,beta=0.9362887256061295].
2023-08-03 18:18:45,926 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.769376593480245, momentum=0.23777833630521017 ,nesterov=True ,amsgrad=True ,weight_decay=0.005711278938162457 ,use_ema=False ,ema_momentum=0.7871706152692161 ,rho=0.8583384071739677 ,epsilon=0.000741132145676428 ,centered=False ,beta_1=0.17393138641796757 ,beta_2=0.930158637250902 ,learning_rate_power=-0.8314593071761072 ,initial_accumulator_value=0.9794210710450384 ,l1_regularization_strength=0.11890778195059515 ,l2_regularization_strength=0.003393509000474082 ,l2_shrinkage_regularization_strength=0.8345514416123097 ,beta=0.9362887256061295].
2023-08-03 18:18:45,926 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24613547443484796, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008134266465699291 ,use_ema=False ,ema_momentum=0.8019266808800691 ,rho=0.9084725381851458 ,epsilon=0.00036138261929180804 ,centered=False ,beta_1=0.005295888685307837 ,beta_2=0.9744900590571549 ,learning_rate_power=-0.40161752616241364 ,initial_accumulator_value=0.5954553121311825 ,l1_regularization_strength=0.1284016341518025 ,l2_regularization_strength=0.8899446255977692 ,l2_shrinkage_regularization_strength=0.5874523549372441 ,beta=0.8635880757352945].
2023-08-03 18:18:45,927 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24613547443484796, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008134266465699291 ,use_ema=False ,ema_momentum=0.8019266808800691 ,rho=0.9084725381851458 ,epsilon=0.00036138261929180804 ,centered=False ,beta_1=0.005295888685307837 ,beta_2=0.9744900590571549 ,learning_rate_power=-0.40161752616241364 ,initial_accumulator_value=0.5954553121311825 ,l1_regularization_strength=0.1284016341518025 ,l2_regularization_strength=0.8899446255977692 ,l2_shrinkage_regularization_strength=0.5874523549372441 ,beta=0.8635880757352945].
2023-08-03 18:18:45,968 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.957005363066315, momentum=0.7239988132667701 ,nesterov=True ,amsgrad=False ,weight_decay=0.002132371617800817 ,use_ema=False ,ema_momentum=0.7532755312098961 ,rho=0.2646100606327847 ,epsilon=0.0005431294842089614 ,centered=True ,beta_1=0.18859314029098773 ,beta_2=0.9604189860680481 ,learning_rate_power=-0.21401519424147064 ,initial_accumulator_value=0.04360711406465123 ,l1_regularization_strength=0.3189471297010562 ,l2_regularization_strength=0.6732056209768998 ,l2_shrinkage_regularization_strength=0.2933808846126553 ,beta=0.8673958224530616].
2023-08-03 18:18:45,968 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.957005363066315, momentum=0.7239988132667701 ,nesterov=True ,amsgrad=False ,weight_decay=0.002132371617800817 ,use_ema=False ,ema_momentum=0.7532755312098961 ,rho=0.2646100606327847 ,epsilon=0.0005431294842089614 ,centered=True ,beta_1=0.18859314029098773 ,beta_2=0.9604189860680481 ,learning_rate_power=-0.21401519424147064 ,initial_accumulator_value=0.04360711406465123 ,l1_regularization_strength=0.3189471297010562 ,l2_regularization_strength=0.6732056209768998 ,l2_shrinkage_regularization_strength=0.2933808846126553 ,beta=0.8673958224530616].
2023-08-03 18:19:10,551 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.26198015777550265, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004096476526793244 ,use_ema=False ,ema_momentum=0.04853184671995492 ,rho=0.2523538735343078 ,epsilon=0.00011107038843642386 ,centered=False ,beta_1=0.6011855808130397 ,beta_2=0.36255284545079824 ,learning_rate_power=-0.6095628527455526 ,initial_accumulator_value=0.6989360668772714 ,l1_regularization_strength=0.4691487957951255 ,l2_regularization_strength=0.2628971390170127 ,l2_shrinkage_regularization_strength=0.37049032547111194 ,beta=0.5432440888088395].
2023-08-03 18:19:10,552 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.26198015777550265, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004096476526793244 ,use_ema=False ,ema_momentum=0.04853184671995492 ,rho=0.2523538735343078 ,epsilon=0.00011107038843642386 ,centered=False ,beta_1=0.6011855808130397 ,beta_2=0.36255284545079824 ,learning_rate_power=-0.6095628527455526 ,initial_accumulator_value=0.6989360668772714 ,l1_regularization_strength=0.4691487957951255 ,l2_regularization_strength=0.2628971390170127 ,l2_shrinkage_regularization_strength=0.37049032547111194 ,beta=0.5432440888088395].
2023-08-03 18:19:11,718 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7371447004062395, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.09339328856688944 ,rho=0.9290056147351047 ,epsilon=0.0008569607693887555 ,centered=False ,beta_1=0.18559316949317128 ,beta_2=0.8203731684619304 ,learning_rate_power=-0.34639142002755496 ,initial_accumulator_value=0.853454752944797 ,l1_regularization_strength=0.3950837951183267 ,l2_regularization_strength=0.40070180382958076 ,l2_shrinkage_regularization_strength=0.6328247675484217 ,beta=0.16113752256546832].
2023-08-03 18:19:11,718 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7371447004062395, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.09339328856688944 ,rho=0.9290056147351047 ,epsilon=0.0008569607693887555 ,centered=False ,beta_1=0.18559316949317128 ,beta_2=0.8203731684619304 ,learning_rate_power=-0.34639142002755496 ,initial_accumulator_value=0.853454752944797 ,l1_regularization_strength=0.3950837951183267 ,l2_regularization_strength=0.40070180382958076 ,l2_shrinkage_regularization_strength=0.6328247675484217 ,beta=0.16113752256546832].
2023-08-03 18:19:11,793 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9729531029747517, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0005111635255672378 ,use_ema=False ,ema_momentum=0.6220151499548917 ,rho=0.6984519886126394 ,epsilon=0.00032116387653606667 ,centered=False ,beta_1=0.1137910459981436 ,beta_2=0.30088261885312106 ,learning_rate_power=-0.39264367821682455 ,initial_accumulator_value=0.5263341054890507 ,l1_regularization_strength=0.5532117059246703 ,l2_regularization_strength=0.9168432833857193 ,l2_shrinkage_regularization_strength=0.6106546807707514 ,beta=0.7467452400179971].
2023-08-03 18:19:11,793 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9729531029747517, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0005111635255672378 ,use_ema=False ,ema_momentum=0.6220151499548917 ,rho=0.6984519886126394 ,epsilon=0.00032116387653606667 ,centered=False ,beta_1=0.1137910459981436 ,beta_2=0.30088261885312106 ,learning_rate_power=-0.39264367821682455 ,initial_accumulator_value=0.5263341054890507 ,l1_regularization_strength=0.5532117059246703 ,l2_regularization_strength=0.9168432833857193 ,l2_shrinkage_regularization_strength=0.6106546807707514 ,beta=0.7467452400179971].
2023-08-03 18:19:11,877 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7876556261083747, momentum=0.9392204426976709 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8752186798517761 ,rho=0.7065590850478523 ,epsilon=0.00038481199906233984 ,centered=True ,beta_1=0.9709777925265036 ,beta_2=0.05189544416806802 ,learning_rate_power=-0.9011546814558583 ,initial_accumulator_value=0.9990775657864586 ,l1_regularization_strength=0.3052017787233662 ,l2_regularization_strength=0.5902726851730258 ,l2_shrinkage_regularization_strength=0.5371291681258836 ,beta=0.04647474965488618].
2023-08-03 18:19:11,877 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7876556261083747, momentum=0.9392204426976709 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8752186798517761 ,rho=0.7065590850478523 ,epsilon=0.00038481199906233984 ,centered=True ,beta_1=0.9709777925265036 ,beta_2=0.05189544416806802 ,learning_rate_power=-0.9011546814558583 ,initial_accumulator_value=0.9990775657864586 ,l1_regularization_strength=0.3052017787233662 ,l2_regularization_strength=0.5902726851730258 ,l2_shrinkage_regularization_strength=0.5371291681258836 ,beta=0.04647474965488618].
2023-08-03 18:19:30,861 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7573818283207049, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5523073766370502 ,rho=0.6855322128246026 ,epsilon=0.00032192493529543725 ,centered=True ,beta_1=0.09944216294143593 ,beta_2=0.9811190621749831 ,learning_rate_power=-0.03227187533108944 ,initial_accumulator_value=0.46034994364621806 ,l1_regularization_strength=0.40827819401557697 ,l2_regularization_strength=0.3646005997483873 ,l2_shrinkage_regularization_strength=0.9252188716546347 ,beta=0.44594663484130215].
2023-08-03 18:19:30,861 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7573818283207049, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5523073766370502 ,rho=0.6855322128246026 ,epsilon=0.00032192493529543725 ,centered=True ,beta_1=0.09944216294143593 ,beta_2=0.9811190621749831 ,learning_rate_power=-0.03227187533108944 ,initial_accumulator_value=0.46034994364621806 ,l1_regularization_strength=0.40827819401557697 ,l2_regularization_strength=0.3646005997483873 ,l2_shrinkage_regularization_strength=0.9252188716546347 ,beta=0.44594663484130215].
2023-08-03 18:19:31,715 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5292413247544812, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.002119191809909309 ,use_ema=False ,ema_momentum=0.9983216819626991 ,rho=0.192351254487931 ,epsilon=0.00019613307807652108 ,centered=False ,beta_1=0.20216561429130253 ,beta_2=0.8051304799755151 ,learning_rate_power=-0.6315247025139942 ,initial_accumulator_value=0.07242792404361931 ,l1_regularization_strength=0.1083351533657605 ,l2_regularization_strength=0.54575895177296 ,l2_shrinkage_regularization_strength=0.7289773464280997 ,beta=0.5421964691437096].
2023-08-03 18:19:31,716 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5292413247544812, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.002119191809909309 ,use_ema=False ,ema_momentum=0.9983216819626991 ,rho=0.192351254487931 ,epsilon=0.00019613307807652108 ,centered=False ,beta_1=0.20216561429130253 ,beta_2=0.8051304799755151 ,learning_rate_power=-0.6315247025139942 ,initial_accumulator_value=0.07242792404361931 ,l1_regularization_strength=0.1083351533657605 ,l2_regularization_strength=0.54575895177296 ,l2_shrinkage_regularization_strength=0.7289773464280997 ,beta=0.5421964691437096].
2023-08-03 18:19:32,389 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5232234497711551, momentum=0.10797922786553749 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9578157877543009 ,rho=0.08586290148752662 ,epsilon=0.0007543433102053539 ,centered=True ,beta_1=0.5723693097019168 ,beta_2=0.6692929262560434 ,learning_rate_power=-0.7750119980915557 ,initial_accumulator_value=0.03455345347834127 ,l1_regularization_strength=0.3219670794263484 ,l2_regularization_strength=0.007122903161850491 ,l2_shrinkage_regularization_strength=0.12076121388437322 ,beta=0.5067581339131756].
2023-08-03 18:19:32,390 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5232234497711551, momentum=0.10797922786553749 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9578157877543009 ,rho=0.08586290148752662 ,epsilon=0.0007543433102053539 ,centered=True ,beta_1=0.5723693097019168 ,beta_2=0.6692929262560434 ,learning_rate_power=-0.7750119980915557 ,initial_accumulator_value=0.03455345347834127 ,l1_regularization_strength=0.3219670794263484 ,l2_regularization_strength=0.007122903161850491 ,l2_shrinkage_regularization_strength=0.12076121388437322 ,beta=0.5067581339131756].
2023-08-03 18:19:33,119 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6327136700096817, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009076146749712414 ,use_ema=True ,ema_momentum=0.7495619418115806 ,rho=0.6700514698776564 ,epsilon=0.0008155245917779434 ,centered=True ,beta_1=0.8791835445927492 ,beta_2=0.5073192675609979 ,learning_rate_power=-0.6048490783277811 ,initial_accumulator_value=0.5857316967943373 ,l1_regularization_strength=0.31437538412145505 ,l2_regularization_strength=0.31963353626380986 ,l2_shrinkage_regularization_strength=0.16726873408903142 ,beta=0.27767154833969887].
2023-08-03 18:19:33,120 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6327136700096817, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009076146749712414 ,use_ema=True ,ema_momentum=0.7495619418115806 ,rho=0.6700514698776564 ,epsilon=0.0008155245917779434 ,centered=True ,beta_1=0.8791835445927492 ,beta_2=0.5073192675609979 ,learning_rate_power=-0.6048490783277811 ,initial_accumulator_value=0.5857316967943373 ,l1_regularization_strength=0.31437538412145505 ,l2_regularization_strength=0.31963353626380986 ,l2_shrinkage_regularization_strength=0.16726873408903142 ,beta=0.27767154833969887].
2023-08-03 18:19:51,258 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8656086761384112, momentum=0.9282748392286521 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.41045284591459075 ,rho=0.19235097753229402 ,epsilon=0.0006049993295020826 ,centered=False ,beta_1=0.3387984573032625 ,beta_2=0.971366642376798 ,learning_rate_power=-0.6091642886332322 ,initial_accumulator_value=0.002119080891376468 ,l1_regularization_strength=0.7641625393670449 ,l2_regularization_strength=0.08392954645162454 ,l2_shrinkage_regularization_strength=0.4341941350220879 ,beta=0.08332171121054532].
2023-08-03 18:19:51,258 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8656086761384112, momentum=0.9282748392286521 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.41045284591459075 ,rho=0.19235097753229402 ,epsilon=0.0006049993295020826 ,centered=False ,beta_1=0.3387984573032625 ,beta_2=0.971366642376798 ,learning_rate_power=-0.6091642886332322 ,initial_accumulator_value=0.002119080891376468 ,l1_regularization_strength=0.7641625393670449 ,l2_regularization_strength=0.08392954645162454 ,l2_shrinkage_regularization_strength=0.4341941350220879 ,beta=0.08332171121054532].
2023-08-03 18:19:51,964 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9246603369416224, momentum=0.6838682353803396 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7549792698746423 ,rho=0.41795297502875306 ,epsilon=0.0004450451648722939 ,centered=True ,beta_1=0.6953252293857464 ,beta_2=0.5123908511770743 ,learning_rate_power=-0.595905077610269 ,initial_accumulator_value=0.8148403659219586 ,l1_regularization_strength=0.26887631764659936 ,l2_regularization_strength=0.09670780397755896 ,l2_shrinkage_regularization_strength=0.6985300777115382 ,beta=0.24168368387668493].
2023-08-03 18:19:51,964 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9246603369416224, momentum=0.6838682353803396 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7549792698746423 ,rho=0.41795297502875306 ,epsilon=0.0004450451648722939 ,centered=True ,beta_1=0.6953252293857464 ,beta_2=0.5123908511770743 ,learning_rate_power=-0.595905077610269 ,initial_accumulator_value=0.8148403659219586 ,l1_regularization_strength=0.26887631764659936 ,l2_regularization_strength=0.09670780397755896 ,l2_shrinkage_regularization_strength=0.6985300777115382 ,beta=0.24168368387668493].
2023-08-03 18:19:52,372 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.03207645278308291, momentum=0.8584640172826054 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.0030380552204136713 ,rho=0.49051213461189636 ,epsilon=0.00021147763018282276 ,centered=False ,beta_1=0.6341023267193387 ,beta_2=0.39944438029718843 ,learning_rate_power=-0.6723067340357248 ,initial_accumulator_value=0.46458645708380975 ,l1_regularization_strength=0.11276556317460107 ,l2_regularization_strength=0.7151718040790617 ,l2_shrinkage_regularization_strength=0.19398937149250084 ,beta=0.9306955698771433].
2023-08-03 18:19:52,373 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.03207645278308291, momentum=0.8584640172826054 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.0030380552204136713 ,rho=0.49051213461189636 ,epsilon=0.00021147763018282276 ,centered=False ,beta_1=0.6341023267193387 ,beta_2=0.39944438029718843 ,learning_rate_power=-0.6723067340357248 ,initial_accumulator_value=0.46458645708380975 ,l1_regularization_strength=0.11276556317460107 ,l2_regularization_strength=0.7151718040790617 ,l2_shrinkage_regularization_strength=0.19398937149250084 ,beta=0.9306955698771433].
2023-08-03 18:19:56,488 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5364492116798153, momentum=0.8577175843818535 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.506636917898112 ,rho=0.027003934274037578 ,epsilon=0.000666398952865186 ,centered=False ,beta_1=0.6417983177606266 ,beta_2=0.3644529426184825 ,learning_rate_power=-0.8790312880285239 ,initial_accumulator_value=0.6962301645961295 ,l1_regularization_strength=0.4671295142818127 ,l2_regularization_strength=0.35584113403548945 ,l2_shrinkage_regularization_strength=0.8291168274539252 ,beta=0.8651333100586714].
2023-08-03 18:19:56,488 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5364492116798153, momentum=0.8577175843818535 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.506636917898112 ,rho=0.027003934274037578 ,epsilon=0.000666398952865186 ,centered=False ,beta_1=0.6417983177606266 ,beta_2=0.3644529426184825 ,learning_rate_power=-0.8790312880285239 ,initial_accumulator_value=0.6962301645961295 ,l1_regularization_strength=0.4671295142818127 ,l2_regularization_strength=0.35584113403548945 ,l2_shrinkage_regularization_strength=0.8291168274539252 ,beta=0.8651333100586714].
2023-08-03 18:20:11,257 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7099178956463577, momentum=0.9050937004982513 ,nesterov=True ,amsgrad=False ,weight_decay=0.0020822970744830576 ,use_ema=False ,ema_momentum=0.1918574321394949 ,rho=0.34473321005916124 ,epsilon=0.00023978461802959635 ,centered=True ,beta_1=0.5733868696303192 ,beta_2=0.619307831610082 ,learning_rate_power=-0.8209959657308702 ,initial_accumulator_value=0.22721737649038265 ,l1_regularization_strength=0.14259252538891343 ,l2_regularization_strength=0.20647398439433906 ,l2_shrinkage_regularization_strength=0.25525599505498253 ,beta=0.22657121393491542].
2023-08-03 18:20:11,257 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7099178956463577, momentum=0.9050937004982513 ,nesterov=True ,amsgrad=False ,weight_decay=0.0020822970744830576 ,use_ema=False ,ema_momentum=0.1918574321394949 ,rho=0.34473321005916124 ,epsilon=0.00023978461802959635 ,centered=True ,beta_1=0.5733868696303192 ,beta_2=0.619307831610082 ,learning_rate_power=-0.8209959657308702 ,initial_accumulator_value=0.22721737649038265 ,l1_regularization_strength=0.14259252538891343 ,l2_regularization_strength=0.20647398439433906 ,l2_shrinkage_regularization_strength=0.25525599505498253 ,beta=0.22657121393491542].
2023-08-03 18:20:14,985 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8197332519494656, momentum=0.030741905848892803 ,nesterov=False ,amsgrad=False ,weight_decay=0.002891288082498545 ,use_ema=False ,ema_momentum=0.48572429991267174 ,rho=0.7262848764624731 ,epsilon=0.0006274821828973618 ,centered=True ,beta_1=0.0857897127678583 ,beta_2=0.9063120616952446 ,learning_rate_power=-0.5377493525383782 ,initial_accumulator_value=0.2927420409810785 ,l1_regularization_strength=0.10940813421634787 ,l2_regularization_strength=0.25424333570852964 ,l2_shrinkage_regularization_strength=0.2153088619755532 ,beta=0.5076647470704541].
2023-08-03 18:20:14,986 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8197332519494656, momentum=0.030741905848892803 ,nesterov=False ,amsgrad=False ,weight_decay=0.002891288082498545 ,use_ema=False ,ema_momentum=0.48572429991267174 ,rho=0.7262848764624731 ,epsilon=0.0006274821828973618 ,centered=True ,beta_1=0.0857897127678583 ,beta_2=0.9063120616952446 ,learning_rate_power=-0.5377493525383782 ,initial_accumulator_value=0.2927420409810785 ,l1_regularization_strength=0.10940813421634787 ,l2_regularization_strength=0.25424333570852964 ,l2_shrinkage_regularization_strength=0.2153088619755532 ,beta=0.5076647470704541].
2023-08-03 18:20:17,192 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9777976517970067, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.2800705977798962 ,rho=0.3956560732878298 ,epsilon=0.0004046835110534387 ,centered=True ,beta_1=0.1656346492903289 ,beta_2=0.982079299960867 ,learning_rate_power=-0.7462295426274772 ,initial_accumulator_value=0.6144136424175973 ,l1_regularization_strength=0.4385377852113953 ,l2_regularization_strength=0.19033799911497817 ,l2_shrinkage_regularization_strength=0.06646291095775958 ,beta=0.3058066537477452].
2023-08-03 18:20:17,193 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9777976517970067, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.2800705977798962 ,rho=0.3956560732878298 ,epsilon=0.0004046835110534387 ,centered=True ,beta_1=0.1656346492903289 ,beta_2=0.982079299960867 ,learning_rate_power=-0.7462295426274772 ,initial_accumulator_value=0.6144136424175973 ,l1_regularization_strength=0.4385377852113953 ,l2_regularization_strength=0.19033799911497817 ,l2_shrinkage_regularization_strength=0.06646291095775958 ,beta=0.3058066537477452].
2023-08-03 18:20:17,447 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.34443969454888224, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.09168084458795323 ,rho=0.8028829945446043 ,epsilon=0.0008094834948416062 ,centered=True ,beta_1=0.015454222006390572 ,beta_2=0.7865050515302876 ,learning_rate_power=-0.13496418840648294 ,initial_accumulator_value=0.09382372592121169 ,l1_regularization_strength=0.3639389176562178 ,l2_regularization_strength=0.6382103749608349 ,l2_shrinkage_regularization_strength=0.8864122747774762 ,beta=0.4008024000014414].
2023-08-03 18:20:17,447 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.34443969454888224, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.09168084458795323 ,rho=0.8028829945446043 ,epsilon=0.0008094834948416062 ,centered=True ,beta_1=0.015454222006390572 ,beta_2=0.7865050515302876 ,learning_rate_power=-0.13496418840648294 ,initial_accumulator_value=0.09382372592121169 ,l1_regularization_strength=0.3639389176562178 ,l2_regularization_strength=0.6382103749608349 ,l2_shrinkage_regularization_strength=0.8864122747774762 ,beta=0.4008024000014414].
2023-08-03 18:20:32,543 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9670848393891482, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.000623754843144771 ,use_ema=True ,ema_momentum=0.48057730126369436 ,rho=0.07666115760961256 ,epsilon=0.0008392764076034073 ,centered=True ,beta_1=0.092663691140344 ,beta_2=0.8855693759696767 ,learning_rate_power=-0.09684535965060492 ,initial_accumulator_value=0.14960176090573574 ,l1_regularization_strength=0.10867863814531786 ,l2_regularization_strength=0.6560257077867806 ,l2_shrinkage_regularization_strength=0.22703814246165122 ,beta=0.706318491072256].
2023-08-03 18:20:32,543 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9670848393891482, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.000623754843144771 ,use_ema=True ,ema_momentum=0.48057730126369436 ,rho=0.07666115760961256 ,epsilon=0.0008392764076034073 ,centered=True ,beta_1=0.092663691140344 ,beta_2=0.8855693759696767 ,learning_rate_power=-0.09684535965060492 ,initial_accumulator_value=0.14960176090573574 ,l1_regularization_strength=0.10867863814531786 ,l2_regularization_strength=0.6560257077867806 ,l2_shrinkage_regularization_strength=0.22703814246165122 ,beta=0.706318491072256].
2023-08-03 18:20:36,381 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:20:36,382 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:20:36,709 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6779109470419643, momentum=0.9480833126152202 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6051049100743461 ,rho=0.12661231780857596 ,epsilon=0.000926776199329022 ,centered=False ,beta_1=0.965460067410068 ,beta_2=0.6350360054168972 ,learning_rate_power=-0.5803539086223584 ,initial_accumulator_value=0.16572552919713457 ,l1_regularization_strength=0.3286472818744074 ,l2_regularization_strength=0.6029619712238159 ,l2_shrinkage_regularization_strength=0.4690892283880692 ,beta=0.9692343016993306].
2023-08-03 18:20:36,709 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6779109470419643, momentum=0.9480833126152202 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6051049100743461 ,rho=0.12661231780857596 ,epsilon=0.000926776199329022 ,centered=False ,beta_1=0.965460067410068 ,beta_2=0.6350360054168972 ,learning_rate_power=-0.5803539086223584 ,initial_accumulator_value=0.16572552919713457 ,l1_regularization_strength=0.3286472818744074 ,l2_regularization_strength=0.6029619712238159 ,l2_shrinkage_regularization_strength=0.4690892283880692 ,beta=0.9692343016993306].
2023-08-03 18:20:37,299 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:20:37,299 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:20:55,650 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.856210917843131, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.37351750691921937 ,rho=0.16033796206435835 ,epsilon=0.0006653699381729267 ,centered=False ,beta_1=0.6363609176547187 ,beta_2=0.9574059272170518 ,learning_rate_power=-0.3219863666509538 ,initial_accumulator_value=0.6210492004232387 ,l1_regularization_strength=0.8821672782360844 ,l2_regularization_strength=0.9902879548148426 ,l2_shrinkage_regularization_strength=0.912052466277822 ,beta=0.6508083752243079].
2023-08-03 18:20:55,650 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.856210917843131, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.37351750691921937 ,rho=0.16033796206435835 ,epsilon=0.0006653699381729267 ,centered=False ,beta_1=0.6363609176547187 ,beta_2=0.9574059272170518 ,learning_rate_power=-0.3219863666509538 ,initial_accumulator_value=0.6210492004232387 ,l1_regularization_strength=0.8821672782360844 ,l2_regularization_strength=0.9902879548148426 ,l2_shrinkage_regularization_strength=0.912052466277822 ,beta=0.6508083752243079].
2023-08-03 18:20:58,040 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.19987796402982672, momentum=0.6583012289981885 ,nesterov=True ,amsgrad=False ,weight_decay=0.007202445238975433 ,use_ema=True ,ema_momentum=0.06965898198046161 ,rho=0.003027978296711753 ,epsilon=0.00028252972557675244 ,centered=True ,beta_1=0.9990434752398234 ,beta_2=0.729312580016185 ,learning_rate_power=-0.3836160150913167 ,initial_accumulator_value=0.056056435011702876 ,l1_regularization_strength=0.7571547725312983 ,l2_regularization_strength=0.22243764841004166 ,l2_shrinkage_regularization_strength=0.4544331147896524 ,beta=0.9872475891036714].
2023-08-03 18:20:58,040 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.19987796402982672, momentum=0.6583012289981885 ,nesterov=True ,amsgrad=False ,weight_decay=0.007202445238975433 ,use_ema=True ,ema_momentum=0.06965898198046161 ,rho=0.003027978296711753 ,epsilon=0.00028252972557675244 ,centered=True ,beta_1=0.9990434752398234 ,beta_2=0.729312580016185 ,learning_rate_power=-0.3836160150913167 ,initial_accumulator_value=0.056056435011702876 ,l1_regularization_strength=0.7571547725312983 ,l2_regularization_strength=0.22243764841004166 ,l2_shrinkage_regularization_strength=0.4544331147896524 ,beta=0.9872475891036714].
2023-08-03 18:20:58,056 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.29430019994033696, momentum=0.2568096840477744 ,nesterov=True ,amsgrad=True ,weight_decay=0.0003347531305512273 ,use_ema=True ,ema_momentum=0.8053188276869258 ,rho=0.9648796965521687 ,epsilon=0.0007569667560228437 ,centered=False ,beta_1=0.5137677158572176 ,beta_2=0.08475607987874467 ,learning_rate_power=-0.6409097259564287 ,initial_accumulator_value=0.41175776925010255 ,l1_regularization_strength=0.6250973853965948 ,l2_regularization_strength=0.4253524563775287 ,l2_shrinkage_regularization_strength=0.47478177210957073 ,beta=0.18146735691032922].
2023-08-03 18:20:58,057 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.29430019994033696, momentum=0.2568096840477744 ,nesterov=True ,amsgrad=True ,weight_decay=0.0003347531305512273 ,use_ema=True ,ema_momentum=0.8053188276869258 ,rho=0.9648796965521687 ,epsilon=0.0007569667560228437 ,centered=False ,beta_1=0.5137677158572176 ,beta_2=0.08475607987874467 ,learning_rate_power=-0.6409097259564287 ,initial_accumulator_value=0.41175776925010255 ,l1_regularization_strength=0.6250973853965948 ,l2_regularization_strength=0.4253524563775287 ,l2_shrinkage_regularization_strength=0.47478177210957073 ,beta=0.18146735691032922].
2023-08-03 18:20:59,162 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.6316479740162249, momentum=0.5782005311111353 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8811065560458722 ,rho=0.7948352686149024 ,epsilon=0.00025272731855809696 ,centered=True ,beta_1=0.7540197478896781 ,beta_2=0.6598695818634783 ,learning_rate_power=-0.4500323175855465 ,initial_accumulator_value=0.5279916831957199 ,l1_regularization_strength=0.2165754630119876 ,l2_regularization_strength=0.425754529612816 ,l2_shrinkage_regularization_strength=0.40018726172231023 ,beta=0.09111229308883217].
2023-08-03 18:20:59,162 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.6316479740162249, momentum=0.5782005311111353 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8811065560458722 ,rho=0.7948352686149024 ,epsilon=0.00025272731855809696 ,centered=True ,beta_1=0.7540197478896781 ,beta_2=0.6598695818634783 ,learning_rate_power=-0.4500323175855465 ,initial_accumulator_value=0.5279916831957199 ,l1_regularization_strength=0.2165754630119876 ,l2_regularization_strength=0.425754529612816 ,l2_shrinkage_regularization_strength=0.40018726172231023 ,beta=0.09111229308883217].
2023-08-03 18:21:15,095 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.18998833396921333, momentum=0.576651654457977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5957840614942592 ,rho=0.039528593100714216 ,epsilon=0.0002293651338098078 ,centered=True ,beta_1=0.8541699422653842 ,beta_2=0.9008904741513527 ,learning_rate_power=-0.7017213539087634 ,initial_accumulator_value=0.11789912354251841 ,l1_regularization_strength=0.01731477113114821 ,l2_regularization_strength=0.47809415272100353 ,l2_shrinkage_regularization_strength=0.8741964090889278 ,beta=0.3779603936451681].
2023-08-03 18:21:15,095 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.18998833396921333, momentum=0.576651654457977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5957840614942592 ,rho=0.039528593100714216 ,epsilon=0.0002293651338098078 ,centered=True ,beta_1=0.8541699422653842 ,beta_2=0.9008904741513527 ,learning_rate_power=-0.7017213539087634 ,initial_accumulator_value=0.11789912354251841 ,l1_regularization_strength=0.01731477113114821 ,l2_regularization_strength=0.47809415272100353 ,l2_shrinkage_regularization_strength=0.8741964090889278 ,beta=0.3779603936451681].
2023-08-03 18:21:20,149 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21973378832260249, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7080538617989951 ,rho=0.9631606008592888 ,epsilon=0.0005552435576808795 ,centered=False ,beta_1=0.6038480365164621 ,beta_2=0.02091870676443186 ,learning_rate_power=-0.16256139610771048 ,initial_accumulator_value=0.0874961491426659 ,l1_regularization_strength=0.42445012853178443 ,l2_regularization_strength=0.3457344161935668 ,l2_shrinkage_regularization_strength=0.6420587056621838 ,beta=0.3372798218169415].
2023-08-03 18:21:20,149 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21973378832260249, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7080538617989951 ,rho=0.9631606008592888 ,epsilon=0.0005552435576808795 ,centered=False ,beta_1=0.6038480365164621 ,beta_2=0.02091870676443186 ,learning_rate_power=-0.16256139610771048 ,initial_accumulator_value=0.0874961491426659 ,l1_regularization_strength=0.42445012853178443 ,l2_regularization_strength=0.3457344161935668 ,l2_shrinkage_regularization_strength=0.6420587056621838 ,beta=0.3372798218169415].
2023-08-03 18:21:20,883 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.21877585189289495, momentum=0.8367722526023375 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7197551154387005 ,rho=0.05171751064017793 ,epsilon=0.00068872246151931 ,centered=False ,beta_1=0.7500933716627028 ,beta_2=0.6561133654449837 ,learning_rate_power=-0.616618225702009 ,initial_accumulator_value=0.3890124891406974 ,l1_regularization_strength=0.26081879561007915 ,l2_regularization_strength=0.5714836348955918 ,l2_shrinkage_regularization_strength=0.1403209835571526 ,beta=0.9754065400815748].
2023-08-03 18:21:20,883 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.21877585189289495, momentum=0.8367722526023375 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7197551154387005 ,rho=0.05171751064017793 ,epsilon=0.00068872246151931 ,centered=False ,beta_1=0.7500933716627028 ,beta_2=0.6561133654449837 ,learning_rate_power=-0.616618225702009 ,initial_accumulator_value=0.3890124891406974 ,l1_regularization_strength=0.26081879561007915 ,l2_regularization_strength=0.5714836348955918 ,l2_shrinkage_regularization_strength=0.1403209835571526 ,beta=0.9754065400815748].
2023-08-03 18:21:25,430 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.33857055466405406, momentum=0.15341521907181876 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.16105169312331735 ,rho=0.8111442848718242 ,epsilon=0.0006867378193656461 ,centered=True ,beta_1=0.10330257417750532 ,beta_2=0.9320880523793031 ,learning_rate_power=-0.10395285613719185 ,initial_accumulator_value=0.19554787560635523 ,l1_regularization_strength=0.5416143526767421 ,l2_regularization_strength=0.8770542246940912 ,l2_shrinkage_regularization_strength=0.5254550246049103 ,beta=0.1232646867284275].
2023-08-03 18:21:25,431 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.33857055466405406, momentum=0.15341521907181876 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.16105169312331735 ,rho=0.8111442848718242 ,epsilon=0.0006867378193656461 ,centered=True ,beta_1=0.10330257417750532 ,beta_2=0.9320880523793031 ,learning_rate_power=-0.10395285613719185 ,initial_accumulator_value=0.19554787560635523 ,l1_regularization_strength=0.5416143526767421 ,l2_regularization_strength=0.8770542246940912 ,l2_shrinkage_regularization_strength=0.5254550246049103 ,beta=0.1232646867284275].
2023-08-03 18:21:35,708 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8418322350208698, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003034642437460941 ,use_ema=True ,ema_momentum=0.3523778823672995 ,rho=0.017930208068896336 ,epsilon=0.0001884188290624007 ,centered=True ,beta_1=0.41195167700761903 ,beta_2=0.5748291737033596 ,learning_rate_power=-0.7014132945319047 ,initial_accumulator_value=0.6226990511820122 ,l1_regularization_strength=0.47025322121866686 ,l2_regularization_strength=0.08315808333161223 ,l2_shrinkage_regularization_strength=0.12417535910534894 ,beta=0.6014871144928539].
2023-08-03 18:21:35,709 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8418322350208698, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003034642437460941 ,use_ema=True ,ema_momentum=0.3523778823672995 ,rho=0.017930208068896336 ,epsilon=0.0001884188290624007 ,centered=True ,beta_1=0.41195167700761903 ,beta_2=0.5748291737033596 ,learning_rate_power=-0.7014132945319047 ,initial_accumulator_value=0.6226990511820122 ,l1_regularization_strength=0.47025322121866686 ,l2_regularization_strength=0.08315808333161223 ,l2_shrinkage_regularization_strength=0.12417535910534894 ,beta=0.6014871144928539].
2023-08-03 18:21:41,599 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9444421823939433, momentum=0.8588325029545596 ,nesterov=True ,amsgrad=True ,weight_decay=0.006247491890526305 ,use_ema=False ,ema_momentum=0.5023881086761905 ,rho=0.6456422758242516 ,epsilon=0.0008947519236668598 ,centered=False ,beta_1=0.7182849937295362 ,beta_2=0.5085199633210561 ,learning_rate_power=-0.4724198654553581 ,initial_accumulator_value=0.06166940869876403 ,l1_regularization_strength=0.8140612708927184 ,l2_regularization_strength=0.10217013729256685 ,l2_shrinkage_regularization_strength=0.4956099031382558 ,beta=0.8087498719419827].
2023-08-03 18:21:41,599 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9444421823939433, momentum=0.8588325029545596 ,nesterov=True ,amsgrad=True ,weight_decay=0.006247491890526305 ,use_ema=False ,ema_momentum=0.5023881086761905 ,rho=0.6456422758242516 ,epsilon=0.0008947519236668598 ,centered=False ,beta_1=0.7182849937295362 ,beta_2=0.5085199633210561 ,learning_rate_power=-0.4724198654553581 ,initial_accumulator_value=0.06166940869876403 ,l1_regularization_strength=0.8140612708927184 ,l2_regularization_strength=0.10217013729256685 ,l2_shrinkage_regularization_strength=0.4956099031382558 ,beta=0.8087498719419827].
2023-08-03 18:21:41,760 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16131205716728259, momentum=0.3299042082107909 ,nesterov=False ,amsgrad=True ,weight_decay=0.008845048151295129 ,use_ema=True ,ema_momentum=0.24168049942979464 ,rho=0.6190439655637123 ,epsilon=0.0003036311961399509 ,centered=True ,beta_1=0.8681471965213341 ,beta_2=0.7538181457842431 ,learning_rate_power=-0.7299174171833342 ,initial_accumulator_value=0.17288749224493094 ,l1_regularization_strength=0.6796012261558301 ,l2_regularization_strength=0.7250832452616663 ,l2_shrinkage_regularization_strength=0.12666984389575142 ,beta=0.697347756904417].
2023-08-03 18:21:41,761 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16131205716728259, momentum=0.3299042082107909 ,nesterov=False ,amsgrad=True ,weight_decay=0.008845048151295129 ,use_ema=True ,ema_momentum=0.24168049942979464 ,rho=0.6190439655637123 ,epsilon=0.0003036311961399509 ,centered=True ,beta_1=0.8681471965213341 ,beta_2=0.7538181457842431 ,learning_rate_power=-0.7299174171833342 ,initial_accumulator_value=0.17288749224493094 ,l1_regularization_strength=0.6796012261558301 ,l2_regularization_strength=0.7250832452616663 ,l2_shrinkage_regularization_strength=0.12666984389575142 ,beta=0.697347756904417].
2023-08-03 18:21:52,053 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7936153524437518, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0003955567983267279 ,use_ema=True ,ema_momentum=0.8822038819422636 ,rho=0.7866920546982126 ,epsilon=0.0007410832462500988 ,centered=True ,beta_1=0.2690108845853395 ,beta_2=0.13256743130294235 ,learning_rate_power=-0.15435051815176193 ,initial_accumulator_value=0.7276061706998767 ,l1_regularization_strength=0.7751832152645999 ,l2_regularization_strength=0.7937860557560771 ,l2_shrinkage_regularization_strength=0.6715557869195116 ,beta=0.7336925361532143].
2023-08-03 18:21:52,053 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7936153524437518, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0003955567983267279 ,use_ema=True ,ema_momentum=0.8822038819422636 ,rho=0.7866920546982126 ,epsilon=0.0007410832462500988 ,centered=True ,beta_1=0.2690108845853395 ,beta_2=0.13256743130294235 ,learning_rate_power=-0.15435051815176193 ,initial_accumulator_value=0.7276061706998767 ,l1_regularization_strength=0.7751832152645999 ,l2_regularization_strength=0.7937860557560771 ,l2_shrinkage_regularization_strength=0.6715557869195116 ,beta=0.7336925361532143].
2023-08-03 18:21:57,828 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.045731392737547116, momentum=0.32443616682026677 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.34148191759639224 ,rho=0.849717189202451 ,epsilon=4.818021179917802e-05 ,centered=True ,beta_1=0.5116371736000447 ,beta_2=0.9024240965372968 ,learning_rate_power=-0.24312226846442697 ,initial_accumulator_value=0.9050126286010276 ,l1_regularization_strength=0.9677974987323199 ,l2_regularization_strength=0.0452726324777214 ,l2_shrinkage_regularization_strength=0.36963330915568304 ,beta=0.9392499844703137].
2023-08-03 18:21:57,829 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.045731392737547116, momentum=0.32443616682026677 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.34148191759639224 ,rho=0.849717189202451 ,epsilon=4.818021179917802e-05 ,centered=True ,beta_1=0.5116371736000447 ,beta_2=0.9024240965372968 ,learning_rate_power=-0.24312226846442697 ,initial_accumulator_value=0.9050126286010276 ,l1_regularization_strength=0.9677974987323199 ,l2_regularization_strength=0.0452726324777214 ,l2_shrinkage_regularization_strength=0.36963330915568304 ,beta=0.9392499844703137].
2023-08-03 18:22:02,366 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6550768179569874, momentum=0.4514020667353007 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.17949672730125088 ,rho=0.9819164199134501 ,epsilon=6.793645699688187e-05 ,centered=True ,beta_1=0.8436579319956306 ,beta_2=0.031073529363958352 ,learning_rate_power=-0.09066362430098296 ,initial_accumulator_value=0.24913748712144423 ,l1_regularization_strength=0.9080549833851604 ,l2_regularization_strength=0.37568524810322035 ,l2_shrinkage_regularization_strength=0.39292945727363937 ,beta=0.3403628282290455].
2023-08-03 18:22:02,367 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6550768179569874, momentum=0.4514020667353007 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.17949672730125088 ,rho=0.9819164199134501 ,epsilon=6.793645699688187e-05 ,centered=True ,beta_1=0.8436579319956306 ,beta_2=0.031073529363958352 ,learning_rate_power=-0.09066362430098296 ,initial_accumulator_value=0.24913748712144423 ,l1_regularization_strength=0.9080549833851604 ,l2_regularization_strength=0.37568524810322035 ,l2_shrinkage_regularization_strength=0.39292945727363937 ,beta=0.3403628282290455].
2023-08-03 18:22:02,481 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.45330701645895644, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.00659975498312973 ,use_ema=True ,ema_momentum=0.6130986505262755 ,rho=0.07727915802471719 ,epsilon=0.0004992327043534895 ,centered=False ,beta_1=0.5049797794430805 ,beta_2=0.21441440544644486 ,learning_rate_power=-0.17376390680625098 ,initial_accumulator_value=0.6171491501348934 ,l1_regularization_strength=0.565118524810742 ,l2_regularization_strength=0.4524947194186514 ,l2_shrinkage_regularization_strength=0.04240768277201856 ,beta=0.7838743503770571].
2023-08-03 18:22:02,481 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.45330701645895644, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.00659975498312973 ,use_ema=True ,ema_momentum=0.6130986505262755 ,rho=0.07727915802471719 ,epsilon=0.0004992327043534895 ,centered=False ,beta_1=0.5049797794430805 ,beta_2=0.21441440544644486 ,learning_rate_power=-0.17376390680625098 ,initial_accumulator_value=0.6171491501348934 ,l1_regularization_strength=0.565118524810742 ,l2_regularization_strength=0.4524947194186514 ,l2_shrinkage_regularization_strength=0.04240768277201856 ,beta=0.7838743503770571].
2023-08-03 18:22:12,707 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.26510341555687367, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.06344016074652015 ,rho=0.39648760262580307 ,epsilon=0.0002248894316092173 ,centered=False ,beta_1=0.2927647651568812 ,beta_2=0.10879999061413825 ,learning_rate_power=-0.28919752754658434 ,initial_accumulator_value=0.27915984891058276 ,l1_regularization_strength=0.2769487077932975 ,l2_regularization_strength=0.3071307045958399 ,l2_shrinkage_regularization_strength=0.4358805571564248 ,beta=0.6664822791654836].
2023-08-03 18:22:12,707 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.26510341555687367, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.06344016074652015 ,rho=0.39648760262580307 ,epsilon=0.0002248894316092173 ,centered=False ,beta_1=0.2927647651568812 ,beta_2=0.10879999061413825 ,learning_rate_power=-0.28919752754658434 ,initial_accumulator_value=0.27915984891058276 ,l1_regularization_strength=0.2769487077932975 ,l2_regularization_strength=0.3071307045958399 ,l2_shrinkage_regularization_strength=0.4358805571564248 ,beta=0.6664822791654836].
2023-08-03 18:22:18,520 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3013099944661183, momentum=0.618268965435004 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3761991444353171 ,rho=0.004040399673701844 ,epsilon=0.00010365099061547517 ,centered=True ,beta_1=0.45500535220083604 ,beta_2=0.5990641530906594 ,learning_rate_power=-0.37116914010113333 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.6278538267385986 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.7577649982229853 ,beta=0.0969517120172142].
2023-08-03 18:22:18,520 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3013099944661183, momentum=0.618268965435004 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3761991444353171 ,rho=0.004040399673701844 ,epsilon=0.00010365099061547517 ,centered=True ,beta_1=0.45500535220083604 ,beta_2=0.5990641530906594 ,learning_rate_power=-0.37116914010113333 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.6278538267385986 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.7577649982229853 ,beta=0.0969517120172142].
2023-08-03 18:22:23,557 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5572452276286362, momentum=0.9376546030778458 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.15826922070446137 ,rho=0.6387218171954159 ,epsilon=0.00042037719020381173 ,centered=False ,beta_1=0.7440122821691741 ,beta_2=0.14358056704205446 ,learning_rate_power=-0.34651594128839847 ,initial_accumulator_value=0.0486774975982478 ,l1_regularization_strength=0.3343829982587099 ,l2_regularization_strength=0.2539755081992926 ,l2_shrinkage_regularization_strength=0.2220514096062537 ,beta=0.4471087072802059].
2023-08-03 18:22:23,557 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5572452276286362, momentum=0.9376546030778458 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.15826922070446137 ,rho=0.6387218171954159 ,epsilon=0.00042037719020381173 ,centered=False ,beta_1=0.7440122821691741 ,beta_2=0.14358056704205446 ,learning_rate_power=-0.34651594128839847 ,initial_accumulator_value=0.0486774975982478 ,l1_regularization_strength=0.3343829982587099 ,l2_regularization_strength=0.2539755081992926 ,l2_shrinkage_regularization_strength=0.2220514096062537 ,beta=0.4471087072802059].
2023-08-03 18:22:25,604 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.31490995541389055, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8519867059234316 ,rho=0.2980800614530249 ,epsilon=0.00012919701509000084 ,centered=False ,beta_1=0.7745174992207581 ,beta_2=0.1992201227896756 ,learning_rate_power=-0.2165639075927427 ,initial_accumulator_value=0.9845933251960867 ,l1_regularization_strength=0.7788504705424996 ,l2_regularization_strength=0.39827946842856476 ,l2_shrinkage_regularization_strength=0.46132686048855953 ,beta=0.5682576735330945].
2023-08-03 18:22:25,605 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.31490995541389055, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8519867059234316 ,rho=0.2980800614530249 ,epsilon=0.00012919701509000084 ,centered=False ,beta_1=0.7745174992207581 ,beta_2=0.1992201227896756 ,learning_rate_power=-0.2165639075927427 ,initial_accumulator_value=0.9845933251960867 ,l1_regularization_strength=0.7788504705424996 ,l2_regularization_strength=0.39827946842856476 ,l2_shrinkage_regularization_strength=0.46132686048855953 ,beta=0.5682576735330945].
2023-08-03 18:22:33,892 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7224692689151813, momentum=0.9325919018487344 ,nesterov=False ,amsgrad=True ,weight_decay=0.004932015360473804 ,use_ema=True ,ema_momentum=0.2848576271980454 ,rho=0.15900905802322973 ,epsilon=0.0005185226298465271 ,centered=True ,beta_1=0.6938033519766669 ,beta_2=0.32248045609796827 ,learning_rate_power=-0.33009020342397044 ,initial_accumulator_value=0.7293682649271397 ,l1_regularization_strength=0.35328775032895865 ,l2_regularization_strength=0.48280287179456227 ,l2_shrinkage_regularization_strength=0.5805176659630404 ,beta=0.06121655287102812].
2023-08-03 18:22:33,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7224692689151813, momentum=0.9325919018487344 ,nesterov=False ,amsgrad=True ,weight_decay=0.004932015360473804 ,use_ema=True ,ema_momentum=0.2848576271980454 ,rho=0.15900905802322973 ,epsilon=0.0005185226298465271 ,centered=True ,beta_1=0.6938033519766669 ,beta_2=0.32248045609796827 ,learning_rate_power=-0.33009020342397044 ,initial_accumulator_value=0.7293682649271397 ,l1_regularization_strength=0.35328775032895865 ,l2_regularization_strength=0.48280287179456227 ,l2_shrinkage_regularization_strength=0.5805176659630404 ,beta=0.06121655287102812].
2023-08-03 18:22:38,150 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.19802439524862536, momentum=0.4081883597911128 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.007466742237617785 ,rho=0.5439930872488185 ,epsilon=0.0007500978989033612 ,centered=True ,beta_1=0.5601524792855138 ,beta_2=0.30288503813224166 ,learning_rate_power=-0.9660122985691775 ,initial_accumulator_value=0.530117964071203 ,l1_regularization_strength=0.8608377326294165 ,l2_regularization_strength=0.47821976320204695 ,l2_shrinkage_regularization_strength=0.40928456156308013 ,beta=0.13970710339432546].
2023-08-03 18:22:38,151 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.19802439524862536, momentum=0.4081883597911128 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.007466742237617785 ,rho=0.5439930872488185 ,epsilon=0.0007500978989033612 ,centered=True ,beta_1=0.5601524792855138 ,beta_2=0.30288503813224166 ,learning_rate_power=-0.9660122985691775 ,initial_accumulator_value=0.530117964071203 ,l1_regularization_strength=0.8608377326294165 ,l2_regularization_strength=0.47821976320204695 ,l2_shrinkage_regularization_strength=0.40928456156308013 ,beta=0.13970710339432546].
2023-08-03 18:22:45,928 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.3238088639535571, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.00838347679756016 ,use_ema=True ,ema_momentum=0.7735936832708264 ,rho=0.37481913346069684 ,epsilon=0.00036933286589895784 ,centered=False ,beta_1=0.6585579438598584 ,beta_2=0.7124600002135264 ,learning_rate_power=-0.26478416012377837 ,initial_accumulator_value=0.5430562832622441 ,l1_regularization_strength=0.10074577803102236 ,l2_regularization_strength=0.8406129336664253 ,l2_shrinkage_regularization_strength=0.0226288222444595 ,beta=0.9054589600294647].
2023-08-03 18:22:45,929 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.3238088639535571, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.00838347679756016 ,use_ema=True ,ema_momentum=0.7735936832708264 ,rho=0.37481913346069684 ,epsilon=0.00036933286589895784 ,centered=False ,beta_1=0.6585579438598584 ,beta_2=0.7124600002135264 ,learning_rate_power=-0.26478416012377837 ,initial_accumulator_value=0.5430562832622441 ,l1_regularization_strength=0.10074577803102236 ,l2_regularization_strength=0.8406129336664253 ,l2_shrinkage_regularization_strength=0.0226288222444595 ,beta=0.9054589600294647].
2023-08-03 18:22:51,932 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.16226878741332906, momentum=0.7555290282498303 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4482715332182513 ,rho=0.8632767599018327 ,epsilon=0.00042751307925651224 ,centered=False ,beta_1=0.012712835637986641 ,beta_2=0.03876104511804712 ,learning_rate_power=-0.7111258748372963 ,initial_accumulator_value=0.5170718027978826 ,l1_regularization_strength=0.7976673734716466 ,l2_regularization_strength=0.026752058657710243 ,l2_shrinkage_regularization_strength=0.6400890418847821 ,beta=0.7999706679887079].
2023-08-03 18:22:51,933 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.16226878741332906, momentum=0.7555290282498303 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4482715332182513 ,rho=0.8632767599018327 ,epsilon=0.00042751307925651224 ,centered=False ,beta_1=0.012712835637986641 ,beta_2=0.03876104511804712 ,learning_rate_power=-0.7111258748372963 ,initial_accumulator_value=0.5170718027978826 ,l1_regularization_strength=0.7976673734716466 ,l2_regularization_strength=0.026752058657710243 ,l2_shrinkage_regularization_strength=0.6400890418847821 ,beta=0.7999706679887079].
2023-08-03 18:22:57,026 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5331097780624972, momentum=0.42770822326652835 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.21371645639556547 ,rho=0.9967127388594694 ,epsilon=6.472454084164348e-05 ,centered=True ,beta_1=0.17470371726902423 ,beta_2=0.9921882232791452 ,learning_rate_power=-0.302494760761315 ,initial_accumulator_value=0.6585275055916914 ,l1_regularization_strength=0.946006793966325 ,l2_regularization_strength=0.38165175570301946 ,l2_shrinkage_regularization_strength=0.4804139301898943 ,beta=0.06441185716434061].
2023-08-03 18:22:57,026 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5331097780624972, momentum=0.42770822326652835 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.21371645639556547 ,rho=0.9967127388594694 ,epsilon=6.472454084164348e-05 ,centered=True ,beta_1=0.17470371726902423 ,beta_2=0.9921882232791452 ,learning_rate_power=-0.302494760761315 ,initial_accumulator_value=0.6585275055916914 ,l1_regularization_strength=0.946006793966325 ,l2_regularization_strength=0.38165175570301946 ,l2_shrinkage_regularization_strength=0.4804139301898943 ,beta=0.06441185716434061].
2023-08-03 18:23:04,990 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.35385132357077753, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006768627289285517 ,use_ema=False ,ema_momentum=0.28813906624734176 ,rho=0.9490359615023294 ,epsilon=0.00022995640558818513 ,centered=False ,beta_1=0.043912638187372455 ,beta_2=0.914872803220378 ,learning_rate_power=-0.931671016710012 ,initial_accumulator_value=0.5769853873173204 ,l1_regularization_strength=0.4847126188877534 ,l2_regularization_strength=0.12084045283845857 ,l2_shrinkage_regularization_strength=0.3699571940493628 ,beta=0.05545816662884606].
2023-08-03 18:23:04,990 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.35385132357077753, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006768627289285517 ,use_ema=False ,ema_momentum=0.28813906624734176 ,rho=0.9490359615023294 ,epsilon=0.00022995640558818513 ,centered=False ,beta_1=0.043912638187372455 ,beta_2=0.914872803220378 ,learning_rate_power=-0.931671016710012 ,initial_accumulator_value=0.5769853873173204 ,l1_regularization_strength=0.4847126188877534 ,l2_regularization_strength=0.12084045283845857 ,l2_shrinkage_regularization_strength=0.3699571940493628 ,beta=0.05545816662884606].
2023-08-03 18:23:26,969 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.1218209017065196, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0008061555689823889 ,use_ema=False ,ema_momentum=0.7546447361617273 ,rho=0.8406702985737242 ,epsilon=0.0004433989628994805 ,centered=False ,beta_1=0.27253437298634475 ,beta_2=0.9093282718935445 ,learning_rate_power=-0.34412973510036826 ,initial_accumulator_value=0.812736524875639 ,l1_regularization_strength=0.08799424474983275 ,l2_regularization_strength=0.11625519208294477 ,l2_shrinkage_regularization_strength=0.2190363123818937 ,beta=0.6633665670772539].
2023-08-03 18:23:26,969 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.1218209017065196, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0008061555689823889 ,use_ema=False ,ema_momentum=0.7546447361617273 ,rho=0.8406702985737242 ,epsilon=0.0004433989628994805 ,centered=False ,beta_1=0.27253437298634475 ,beta_2=0.9093282718935445 ,learning_rate_power=-0.34412973510036826 ,initial_accumulator_value=0.812736524875639 ,l1_regularization_strength=0.08799424474983275 ,l2_regularization_strength=0.11625519208294477 ,l2_shrinkage_regularization_strength=0.2190363123818937 ,beta=0.6633665670772539].
2023-08-03 18:23:46,607 INFO: Applying selection operators for generation 1.
2023-08-03 18:23:46,607 INFO: Applying genetic operators for generation 1.
2023-08-03 18:23:46,613 INFO: Evaluating fitness for for generation 1.
2023-08-03 18:23:46,614 INFO: Will evaluate fitness for 24 individuals.
2023-08-03 18:23:47,161 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3013099944661183, momentum=0.8584640172826054 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.0030380552204136713 ,rho=0.004040399673701844 ,epsilon=0.00010365099061547517 ,centered=True ,beta_1=0.45500535220083604 ,beta_2=0.5990641530906594 ,learning_rate_power=-0.37116914010113333 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.6278538267385986 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.7577649982229853 ,beta=0.0969517120172142].
2023-08-03 18:23:47,161 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3013099944661183, momentum=0.8584640172826054 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.0030380552204136713 ,rho=0.004040399673701844 ,epsilon=0.00010365099061547517 ,centered=True ,beta_1=0.45500535220083604 ,beta_2=0.5990641530906594 ,learning_rate_power=-0.37116914010113333 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.6278538267385986 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.7577649982229853 ,beta=0.0969517120172142].
2023-08-03 18:23:47,164 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3013099944661183, momentum=0.014699784618179335 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3761991444353171 ,rho=0.004040399673701844 ,epsilon=0.00010365099061547517 ,centered=True ,beta_1=0.45500535220083604 ,beta_2=0.5990641530906594 ,learning_rate_power=-0.37116914010113333 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.591959784986041 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.7577649982229853 ,beta=0.0969517120172142].
2023-08-03 18:23:47,165 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3013099944661183, momentum=0.014699784618179335 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3761991444353171 ,rho=0.004040399673701844 ,epsilon=0.00010365099061547517 ,centered=True ,beta_1=0.45500535220083604 ,beta_2=0.5990641530906594 ,learning_rate_power=-0.37116914010113333 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.591959784986041 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.7577649982229853 ,beta=0.0969517120172142].
2023-08-03 18:23:47,169 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.1825952554847653, momentum=0.20751495738975767 ,nesterov=False ,amsgrad=False ,weight_decay=0.00982158465130144 ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0009134892295586393 ,centered=True ,beta_1=0.8945445541544885 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.6899825248914967 ,initial_accumulator_value=0.6547869820324416 ,l1_regularization_strength=0.9678453194817104 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.7100174199138115 ,beta=0.33844277335319306].
2023-08-03 18:23:47,170 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.1825952554847653, momentum=0.20751495738975767 ,nesterov=False ,amsgrad=False ,weight_decay=0.00982158465130144 ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0009134892295586393 ,centered=True ,beta_1=0.8945445541544885 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.6899825248914967 ,initial_accumulator_value=0.6547869820324416 ,l1_regularization_strength=0.9678453194817104 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.7100174199138115 ,beta=0.33844277335319306].
2023-08-03 18:23:47,170 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.6633665670772539].
2023-08-03 18:23:47,170 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.6633665670772539].
2023-08-03 18:24:06,466 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.03207645278308291, momentum=0.618268965435004 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3761991444353171 ,rho=0.49051213461189636 ,epsilon=0.00021147763018282276 ,centered=False ,beta_1=0.6341023267193387 ,beta_2=0.39944438029718843 ,learning_rate_power=-0.6723067340357248 ,initial_accumulator_value=0.46458645708380975 ,l1_regularization_strength=0.11276556317460107 ,l2_regularization_strength=0.7151718040790617 ,l2_shrinkage_regularization_strength=0.19398937149250084 ,beta=0.9306955698771433].
2023-08-03 18:24:06,466 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.03207645278308291, momentum=0.618268965435004 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3761991444353171 ,rho=0.49051213461189636 ,epsilon=0.00021147763018282276 ,centered=False ,beta_1=0.6341023267193387 ,beta_2=0.39944438029718843 ,learning_rate_power=-0.6723067340357248 ,initial_accumulator_value=0.46458645708380975 ,l1_regularization_strength=0.11276556317460107 ,l2_regularization_strength=0.7151718040790617 ,l2_shrinkage_regularization_strength=0.19398937149250084 ,beta=0.9306955698771433].
2023-08-03 18:24:06,927 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.4155785512989626, momentum=0.9979304523858065 ,nesterov=False ,amsgrad=False ,weight_decay=0.009533043485787518 ,use_ema=True ,ema_momentum=0.5468242888486431 ,rho=0.027003934274037578 ,epsilon=1.3856204775711097e-05 ,centered=False ,beta_1=0.10426325840972872 ,beta_2=0.3644529426184825 ,learning_rate_power=-0.8790312880285239 ,initial_accumulator_value=0.6962301645961295 ,l1_regularization_strength=0.4671295142818127 ,l2_regularization_strength=0.35584113403548945 ,l2_shrinkage_regularization_strength=0.7641568195332451 ,beta=0.8651333100586714].
2023-08-03 18:24:06,928 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.4155785512989626, momentum=0.9979304523858065 ,nesterov=False ,amsgrad=False ,weight_decay=0.009533043485787518 ,use_ema=True ,ema_momentum=0.5468242888486431 ,rho=0.027003934274037578 ,epsilon=1.3856204775711097e-05 ,centered=False ,beta_1=0.10426325840972872 ,beta_2=0.3644529426184825 ,learning_rate_power=-0.8790312880285239 ,initial_accumulator_value=0.6962301645961295 ,l1_regularization_strength=0.4671295142818127 ,l2_regularization_strength=0.35584113403548945 ,l2_shrinkage_regularization_strength=0.7641568195332451 ,beta=0.8651333100586714].
2023-08-03 18:24:08,158 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.1218209017065196, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0008061555689823889 ,use_ema=False ,ema_momentum=0.7546447361617273 ,rho=0.8406702985737242 ,epsilon=0.0004433989628994805 ,centered=False ,beta_1=0.27253437298634475 ,beta_2=0.9093282718935445 ,learning_rate_power=-0.34412973510036826 ,initial_accumulator_value=0.812736524875639 ,l1_regularization_strength=0.08799424474983275 ,l2_regularization_strength=0.11625519208294477 ,l2_shrinkage_regularization_strength=0.2190363123818937 ,beta=0.33844277335319306].
2023-08-03 18:24:08,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.1218209017065196, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0008061555689823889 ,use_ema=False ,ema_momentum=0.7546447361617273 ,rho=0.8406702985737242 ,epsilon=0.0004433989628994805 ,centered=False ,beta_1=0.27253437298634475 ,beta_2=0.9093282718935445 ,learning_rate_power=-0.34412973510036826 ,initial_accumulator_value=0.812736524875639 ,l1_regularization_strength=0.08799424474983275 ,l2_regularization_strength=0.11625519208294477 ,l2_shrinkage_regularization_strength=0.2190363123818937 ,beta=0.33844277335319306].
2023-08-03 18:24:09,544 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.27167639347745276, momentum=0.618268965435004 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2983940169823215 ,rho=0.1910845960837435 ,epsilon=0.0007826536797466765 ,centered=True ,beta_1=0.2542974041901731 ,beta_2=0.429133963625305 ,learning_rate_power=-0.3031741679837844 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.5678940580256304 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.47819323408733094 ,beta=0.0969517120172142].
2023-08-03 18:24:09,544 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.27167639347745276, momentum=0.618268965435004 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2983940169823215 ,rho=0.1910845960837435 ,epsilon=0.0007826536797466765 ,centered=True ,beta_1=0.2542974041901731 ,beta_2=0.429133963625305 ,learning_rate_power=-0.3031741679837844 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.5678940580256304 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.47819323408733094 ,beta=0.0969517120172142].
2023-08-03 18:24:26,293 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3013099944661183, momentum=0.618268965435004 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5957840614942592 ,rho=0.039528593100714216 ,epsilon=0.0002293651338098078 ,centered=True ,beta_1=0.8541699422653842 ,beta_2=0.9008904741513527 ,learning_rate_power=-0.7017213539087634 ,initial_accumulator_value=0.11789912354251841 ,l1_regularization_strength=0.6278538267385986 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.7577649982229853 ,beta=0.0969517120172142].
2023-08-03 18:24:26,293 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3013099944661183, momentum=0.618268965435004 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5957840614942592 ,rho=0.039528593100714216 ,epsilon=0.0002293651338098078 ,centered=True ,beta_1=0.8541699422653842 ,beta_2=0.9008904741513527 ,learning_rate_power=-0.7017213539087634 ,initial_accumulator_value=0.11789912354251841 ,l1_regularization_strength=0.6278538267385986 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.7577649982229853 ,beta=0.0969517120172142].
2023-08-03 18:24:28,626 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.1218209017065196, momentum=0.30677192822670774 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7584677345534071 ,rho=0.14883660031497936 ,epsilon=0.0002293651338098078 ,centered=True ,beta_1=0.8541699422653842 ,beta_2=0.9008904741513527 ,learning_rate_power=-0.28036290961760824 ,initial_accumulator_value=0.11789912354251841 ,l1_regularization_strength=0.01731477113114821 ,l2_regularization_strength=0.47809415272100353 ,l2_shrinkage_regularization_strength=0.11065279657452887 ,beta=0.3779603936451681].
2023-08-03 18:24:28,626 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.1218209017065196, momentum=0.30677192822670774 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7584677345534071 ,rho=0.14883660031497936 ,epsilon=0.0002293651338098078 ,centered=True ,beta_1=0.8541699422653842 ,beta_2=0.9008904741513527 ,learning_rate_power=-0.28036290961760824 ,initial_accumulator_value=0.11789912354251841 ,l1_regularization_strength=0.01731477113114821 ,l2_regularization_strength=0.47809415272100353 ,l2_shrinkage_regularization_strength=0.11065279657452887 ,beta=0.3779603936451681].
2023-08-03 18:24:29,734 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0.8577175843818535 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.506636917898112 ,rho=0.027003934274037578 ,epsilon=0.000666398952865186 ,centered=False ,beta_1=0.6417983177606266 ,beta_2=0.3644529426184825 ,learning_rate_power=-0.8790312880285239 ,initial_accumulator_value=0.6962301645961295 ,l1_regularization_strength=0.4671295142818127 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:24:29,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0.8577175843818535 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.506636917898112 ,rho=0.027003934274037578 ,epsilon=0.000666398952865186 ,centered=False ,beta_1=0.6417983177606266 ,beta_2=0.3644529426184825 ,learning_rate_power=-0.8790312880285239 ,initial_accumulator_value=0.6962301645961295 ,l1_regularization_strength=0.4671295142818127 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:24:29,896 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.24727345555230673, momentum=0.618268965435004 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3761991444353171 ,rho=0.004040399673701844 ,epsilon=0.00010365099061547517 ,centered=True ,beta_1=0.45500535220083604 ,beta_2=0.5990641530906594 ,learning_rate_power=-0.37116914010113333 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.6278538267385986 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.7577649982229853 ,beta=0.0969517120172142].
2023-08-03 18:24:29,897 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.24727345555230673, momentum=0.618268965435004 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3761991444353171 ,rho=0.004040399673701844 ,epsilon=0.00010365099061547517 ,centered=True ,beta_1=0.45500535220083604 ,beta_2=0.5990641530906594 ,learning_rate_power=-0.37116914010113333 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.6278538267385986 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.7577649982229853 ,beta=0.0969517120172142].
2023-08-03 18:24:45,104 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.18998833396921333, momentum=0.576651654457977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3761991444353171 ,rho=0.004040399673701844 ,epsilon=0.00010365099061547517 ,centered=True ,beta_1=0.45500535220083604 ,beta_2=0.5990641530906594 ,learning_rate_power=-0.37116914010113333 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.01731477113114821 ,l2_regularization_strength=0.47809415272100353 ,l2_shrinkage_regularization_strength=0.8741964090889278 ,beta=0.3779603936451681].
2023-08-03 18:24:45,105 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.18998833396921333, momentum=0.576651654457977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3761991444353171 ,rho=0.004040399673701844 ,epsilon=0.00010365099061547517 ,centered=True ,beta_1=0.45500535220083604 ,beta_2=0.5990641530906594 ,learning_rate_power=-0.37116914010113333 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.01731477113114821 ,l2_regularization_strength=0.47809415272100353 ,l2_shrinkage_regularization_strength=0.8741964090889278 ,beta=0.3779603936451681].
2023-08-03 18:24:48,082 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.45591923556418, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004078941657657276 ,use_ema=True ,ema_momentum=0.7546447361617273 ,rho=0.8406702985737242 ,epsilon=0.0008044372665009944 ,centered=False ,beta_1=0.8406611147692713 ,beta_2=0.3160130244310544 ,learning_rate_power=-0.07801965768136243 ,initial_accumulator_value=0.812736524875639 ,l1_regularization_strength=0.08799424474983275 ,l2_regularization_strength=0.11625519208294477 ,l2_shrinkage_regularization_strength=0.11515910311750033 ,beta=0.6633665670772539].
2023-08-03 18:24:48,082 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.45591923556418, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004078941657657276 ,use_ema=True ,ema_momentum=0.7546447361617273 ,rho=0.8406702985737242 ,epsilon=0.0008044372665009944 ,centered=False ,beta_1=0.8406611147692713 ,beta_2=0.3160130244310544 ,learning_rate_power=-0.07801965768136243 ,initial_accumulator_value=0.812736524875639 ,l1_regularization_strength=0.08799424474983275 ,l2_regularization_strength=0.11625519208294477 ,l2_shrinkage_regularization_strength=0.11515910311750033 ,beta=0.6633665670772539].
2023-08-03 18:24:49,857 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3013099944661183, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:24:49,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3013099944661183, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:24:51,982 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5364492116798153, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.35584113403548945 ,l2_shrinkage_regularization_strength=0.8291168274539252 ,beta=0.8651333100586714].
2023-08-03 18:24:51,983 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5364492116798153, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.35584113403548945 ,l2_shrinkage_regularization_strength=0.8291168274539252 ,beta=0.8651333100586714].
2023-08-03 18:25:06,116 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3013099944661183, momentum=0.618268965435004 ,nesterov=True ,amsgrad=False ,weight_decay=0.002037389011307656 ,use_ema=True ,ema_momentum=0.8622100663916591 ,rho=0.8677458272446308 ,epsilon=0.00010365099061547517 ,centered=False ,beta_1=0.40964193852387665 ,beta_2=0.5990641530906594 ,learning_rate_power=-0.4976806384805377 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.6278538267385986 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.3918071566325856 ,beta=0.0969517120172142].
2023-08-03 18:25:06,117 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3013099944661183, momentum=0.618268965435004 ,nesterov=True ,amsgrad=False ,weight_decay=0.002037389011307656 ,use_ema=True ,ema_momentum=0.8622100663916591 ,rho=0.8677458272446308 ,epsilon=0.00010365099061547517 ,centered=False ,beta_1=0.40964193852387665 ,beta_2=0.5990641530906594 ,learning_rate_power=-0.4976806384805377 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.6278538267385986 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.3918071566325856 ,beta=0.0969517120172142].
2023-08-03 18:25:09,452 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.1218209017065196, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0008061555689823889 ,use_ema=False ,ema_momentum=0.7546447361617273 ,rho=0.8406702985737242 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.08799424474983275 ,l2_regularization_strength=0.11625519208294477 ,l2_shrinkage_regularization_strength=0.2190363123818937 ,beta=0.6633665670772539].
2023-08-03 18:25:09,452 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.1218209017065196, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0008061555689823889 ,use_ema=False ,ema_momentum=0.7546447361617273 ,rho=0.8406702985737242 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.08799424474983275 ,l2_regularization_strength=0.11625519208294477 ,l2_shrinkage_regularization_strength=0.2190363123818937 ,beta=0.6633665670772539].
2023-08-03 18:25:10,799 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3013099944661183, momentum=0.618268965435004 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:25:10,799 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3013099944661183, momentum=0.618268965435004 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:25:13,218 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5046235802415718, momentum=0.2568096840477744 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8053188276869258 ,rho=0.9648796965521687 ,epsilon=0.0007569667560228437 ,centered=False ,beta_1=0.5137677158572176 ,beta_2=0.08475607987874467 ,learning_rate_power=-0.04232328162118315 ,initial_accumulator_value=0.16906441465244637 ,l1_regularization_strength=0.08799424474983275 ,l2_regularization_strength=0.11625519208294477 ,l2_shrinkage_regularization_strength=0.2190363123818937 ,beta=0.18146735691032922].
2023-08-03 18:25:13,218 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5046235802415718, momentum=0.2568096840477744 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8053188276869258 ,rho=0.9648796965521687 ,epsilon=0.0007569667560228437 ,centered=False ,beta_1=0.5137677158572176 ,beta_2=0.08475607987874467 ,learning_rate_power=-0.04232328162118315 ,initial_accumulator_value=0.16906441465244637 ,l1_regularization_strength=0.08799424474983275 ,l2_regularization_strength=0.11625519208294477 ,l2_shrinkage_regularization_strength=0.2190363123818937 ,beta=0.18146735691032922].
2023-08-03 18:25:26,711 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.18998833396921333, momentum=0.576651654457977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5957840614942592 ,rho=0.28050764565699227 ,epsilon=9.348740614631174e-05 ,centered=False ,beta_1=0.6145976824695819 ,beta_2=0.928781163200094 ,learning_rate_power=-0.396158018342616 ,initial_accumulator_value=0.11789912354251841 ,l1_regularization_strength=0.22131957410611813 ,l2_regularization_strength=0.47809415272100353 ,l2_shrinkage_regularization_strength=0.04978806434780669 ,beta=0.04390242545353862].
2023-08-03 18:25:26,712 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.18998833396921333, momentum=0.576651654457977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5957840614942592 ,rho=0.28050764565699227 ,epsilon=9.348740614631174e-05 ,centered=False ,beta_1=0.6145976824695819 ,beta_2=0.928781163200094 ,learning_rate_power=-0.396158018342616 ,initial_accumulator_value=0.11789912354251841 ,l1_regularization_strength=0.22131957410611813 ,l2_regularization_strength=0.47809415272100353 ,l2_shrinkage_regularization_strength=0.04978806434780669 ,beta=0.04390242545353862].
2023-08-03 18:25:29,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3761991444353171 ,rho=0.004040399673701844 ,epsilon=0.00010365099061547517 ,centered=True ,beta_1=0.45500535220083604 ,beta_2=0.5990641530906594 ,learning_rate_power=-0.37116914010113333 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.6278538267385986 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.7577649982229853 ,beta=0.0969517120172142].
2023-08-03 18:25:29,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3761991444353171 ,rho=0.004040399673701844 ,epsilon=0.00010365099061547517 ,centered=True ,beta_1=0.45500535220083604 ,beta_2=0.5990641530906594 ,learning_rate_power=-0.37116914010113333 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.6278538267385986 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.7577649982229853 ,beta=0.0969517120172142].
2023-08-03 18:25:30,278 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0004433989628994805 ,centered=False ,beta_1=0.27253437298634475 ,beta_2=0.9093282718935445 ,learning_rate_power=-0.34412973510036826 ,initial_accumulator_value=0.812736524875639 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:25:30,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0004433989628994805 ,centered=False ,beta_1=0.27253437298634475 ,beta_2=0.9093282718935445 ,learning_rate_power=-0.34412973510036826 ,initial_accumulator_value=0.812736524875639 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:25:36,315 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.1218209017065196, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0008061555689823889 ,use_ema=False ,ema_momentum=0.7546447361617273 ,rho=0.8406702985737242 ,epsilon=0.0004433989628994805 ,centered=False ,beta_1=0.27253437298634475 ,beta_2=0.9093282718935445 ,learning_rate_power=-0.34412973510036826 ,initial_accumulator_value=0.812736524875639 ,l1_regularization_strength=0.6250973853965948 ,l2_regularization_strength=0.4253524563775287 ,l2_shrinkage_regularization_strength=0.47478177210957073 ,beta=0.6633665670772539].
2023-08-03 18:25:36,316 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.1218209017065196, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0008061555689823889 ,use_ema=False ,ema_momentum=0.7546447361617273 ,rho=0.8406702985737242 ,epsilon=0.0004433989628994805 ,centered=False ,beta_1=0.27253437298634475 ,beta_2=0.9093282718935445 ,learning_rate_power=-0.34412973510036826 ,initial_accumulator_value=0.812736524875639 ,l1_regularization_strength=0.6250973853965948 ,l2_regularization_strength=0.4253524563775287 ,l2_shrinkage_regularization_strength=0.47478177210957073 ,beta=0.6633665670772539].
2023-08-03 18:25:57,229 INFO: Applying selection operators for generation 2.
2023-08-03 18:25:57,230 INFO: Applying genetic operators for generation 2.
2023-08-03 18:25:57,239 INFO: Evaluating fitness for for generation 2.
2023-08-03 18:25:57,239 INFO: Will evaluate fitness for 30 individuals.
2023-08-03 18:25:57,786 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9775001097347571, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.00548491773545162 ,use_ema=True ,ema_momentum=0.7111691839347654 ,rho=0.213771150048508 ,epsilon=0.0005133419735383449 ,centered=False ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7372947521820653 ,beta=0.7299323966596429].
2023-08-03 18:25:57,786 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9775001097347571, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.00548491773545162 ,use_ema=True ,ema_momentum=0.7111691839347654 ,rho=0.213771150048508 ,epsilon=0.0005133419735383449 ,centered=False ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7372947521820653 ,beta=0.7299323966596429].
2023-08-03 18:25:57,790 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.8423551544363875 ,epsilon=0.0009324825371319527 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.9189360365656105 ,l1_regularization_strength=0.7011171636077775 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.787246065121405 ,beta=0.33844277335319306].
2023-08-03 18:25:57,790 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.8423551544363875 ,epsilon=0.0009324825371319527 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.9189360365656105 ,l1_regularization_strength=0.7011171636077775 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.787246065121405 ,beta=0.33844277335319306].
2023-08-03 18:25:57,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:25:57,801 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:25:57,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.40882652315438095, momentum=0.858109775699793 ,nesterov=True ,amsgrad=False ,weight_decay=0.004473277464894011 ,use_ema=True ,ema_momentum=0.5057365735562951 ,rho=0.9042737485869796 ,epsilon=0.0005077598014586885 ,centered=True ,beta_1=0.4562421178582914 ,beta_2=0.130392525861168 ,learning_rate_power=-0.983756525211203 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.5772899776738118].
2023-08-03 18:25:57,807 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.40882652315438095, momentum=0.858109775699793 ,nesterov=True ,amsgrad=False ,weight_decay=0.004473277464894011 ,use_ema=True ,ema_momentum=0.5057365735562951 ,rho=0.9042737485869796 ,epsilon=0.0005077598014586885 ,centered=True ,beta_1=0.4562421178582914 ,beta_2=0.130392525861168 ,learning_rate_power=-0.983756525211203 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.5772899776738118].
2023-08-03 18:26:16,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:26:16,404 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:26:18,566 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:26:18,566 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:26:19,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.40286662289951247, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0038468260452326685 ,use_ema=True ,ema_momentum=0.9578804220215675 ,rho=0.2873321594015943 ,epsilon=4.062345412945504e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.13881835421635713 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.08891593113216556 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.29057270916656996 ,beta=0.33844277335319306].
2023-08-03 18:26:19,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.40286662289951247, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0038468260452326685 ,use_ema=True ,ema_momentum=0.9578804220215675 ,rho=0.2873321594015943 ,epsilon=4.062345412945504e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.13881835421635713 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.08891593113216556 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.29057270916656996 ,beta=0.33844277335319306].
2023-08-03 18:26:20,430 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:26:20,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:26:38,290 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:26:38,290 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:26:39,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:26:39,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:26:42,096 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5437845878526959, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.004779973038303957 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7039106351975084 ,beta_2=0.0883289230702704 ,learning_rate_power=-0.748281624507115 ,initial_accumulator_value=0.23577273803510368 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6313921123447033 ,beta=0.7299323966596429].
2023-08-03 18:26:42,097 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5437845878526959, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.004779973038303957 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7039106351975084 ,beta_2=0.0883289230702704 ,learning_rate_power=-0.748281624507115 ,initial_accumulator_value=0.23577273803510368 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6313921123447033 ,beta=0.7299323966596429].
2023-08-03 18:26:42,387 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.03613146082319041, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.0035598244581435336 ,use_ema=True ,ema_momentum=0.864334569872434 ,rho=0.887898672846865 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.43978145449196193 ,beta_2=0.01724491639431469 ,learning_rate_power=-0.4540910497878098 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.751052469027209 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.29585403427847246 ,beta=0.8153714975495673].
2023-08-03 18:26:42,387 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.03613146082319041, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.0035598244581435336 ,use_ema=True ,ema_momentum=0.864334569872434 ,rho=0.887898672846865 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.43978145449196193 ,beta_2=0.01724491639431469 ,learning_rate_power=-0.4540910497878098 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.751052469027209 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.29585403427847246 ,beta=0.8153714975495673].
2023-08-03 18:26:58,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9676257582721234 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.4849288634147466 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5977898183357765 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.40303620131904916 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.9388237949061838].
2023-08-03 18:26:58,650 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9676257582721234 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.4849288634147466 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5977898183357765 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.40303620131904916 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.9388237949061838].
2023-08-03 18:27:01,058 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.6633665670772539].
2023-08-03 18:27:01,059 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.6633665670772539].
2023-08-03 18:27:04,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24307750988383592, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.7197494272794814 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8089899079203812 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.44467877850934023 ,beta=0.48448987394196985].
2023-08-03 18:27:04,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24307750988383592, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.7197494272794814 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8089899079203812 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.44467877850934023 ,beta=0.48448987394196985].
2023-08-03 18:27:05,829 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:27:05,829 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:27:19,287 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:27:19,287 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:27:21,301 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.159951106488462, momentum=0.4935957205148569 ,nesterov=True ,amsgrad=False ,weight_decay=0.0041234144651859225 ,use_ema=True ,ema_momentum=0.6874620816109533 ,rho=0.6292437151780367 ,epsilon=0.0006106648267857081 ,centered=False ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.11936742331107919 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.5013125553248441 ,beta=0.29676646704138965].
2023-08-03 18:27:21,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.159951106488462, momentum=0.4935957205148569 ,nesterov=True ,amsgrad=False ,weight_decay=0.0041234144651859225 ,use_ema=True ,ema_momentum=0.6874620816109533 ,rho=0.6292437151780367 ,epsilon=0.0006106648267857081 ,centered=False ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.11936742331107919 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.5013125553248441 ,beta=0.29676646704138965].
2023-08-03 18:27:25,053 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.27167639347745276, momentum=0.618268965435004 ,nesterov=True ,amsgrad=False ,weight_decay=0.006612417395181082 ,use_ema=True ,ema_momentum=0.5799063949214338 ,rho=0.1910845960837435 ,epsilon=0.0007521720929912867 ,centered=True ,beta_1=0.2542974041901731 ,beta_2=0.234310601184472 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.9631839394542735 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.6783721999485294 ,beta=0.33844277335319306].
2023-08-03 18:27:25,054 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.27167639347745276, momentum=0.618268965435004 ,nesterov=True ,amsgrad=False ,weight_decay=0.006612417395181082 ,use_ema=True ,ema_momentum=0.5799063949214338 ,rho=0.1910845960837435 ,epsilon=0.0007521720929912867 ,centered=True ,beta_1=0.2542974041901731 ,beta_2=0.234310601184472 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.9631839394542735 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.6783721999485294 ,beta=0.33844277335319306].
2023-08-03 18:27:27,892 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3013099944661183, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.07780313543481177 ,rho=0.7913695296032985 ,epsilon=0.00024273536257349727 ,centered=True ,beta_1=0.5385307642813283 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.26597753870472285 ,initial_accumulator_value=0.03800758852806352 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:27:27,892 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3013099944661183, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.07780313543481177 ,rho=0.7913695296032985 ,epsilon=0.00024273536257349727 ,centered=True ,beta_1=0.5385307642813283 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.26597753870472285 ,initial_accumulator_value=0.03800758852806352 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:27:39,660 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001916631719380775 ,use_ema=True ,ema_momentum=0.12335929225715636 ,rho=0.05457283720230277 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.7404590259716635 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.57319714819472 ,l1_regularization_strength=0.8925311451752608 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.7300117651248034 ,beta=0.07111741491610735].
2023-08-03 18:27:39,660 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001916631719380775 ,use_ema=True ,ema_momentum=0.12335929225715636 ,rho=0.05457283720230277 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.7404590259716635 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.57319714819472 ,l1_regularization_strength=0.8925311451752608 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.7300117651248034 ,beta=0.07111741491610735].
2023-08-03 18:27:43,899 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.429133963625305 ,learning_rate_power=-0.3031741679837844 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.5678940580256304 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.47819323408733094 ,beta=0.0969517120172142].
2023-08-03 18:27:43,899 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.429133963625305 ,learning_rate_power=-0.3031741679837844 ,initial_accumulator_value=0.3646287930149825 ,l1_regularization_strength=0.5678940580256304 ,l2_regularization_strength=0.049397683409552084 ,l2_shrinkage_regularization_strength=0.47819323408733094 ,beta=0.0969517120172142].
2023-08-03 18:27:45,655 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.677759053484834 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5562939880752944 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7146404096217495 ,beta=0.7299323966596429].
2023-08-03 18:27:45,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.677759053484834 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5562939880752944 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7146404096217495 ,beta=0.7299323966596429].
2023-08-03 18:27:50,284 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.33844277335319306].
2023-08-03 18:27:50,284 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.33844277335319306].
2023-08-03 18:28:01,986 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.7299323966596429].
2023-08-03 18:28:01,986 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.7299323966596429].
2023-08-03 18:28:04,299 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.03207645278308291, momentum=0.618268965435004 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.39944438029718843 ,learning_rate_power=-0.6723067340357248 ,initial_accumulator_value=0.46458645708380975 ,l1_regularization_strength=0.11276556317460107 ,l2_regularization_strength=0.7151718040790617 ,l2_shrinkage_regularization_strength=0.19398937149250084 ,beta=0.9306955698771433].
2023-08-03 18:28:04,300 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.03207645278308291, momentum=0.618268965435004 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.39944438029718843 ,learning_rate_power=-0.6723067340357248 ,initial_accumulator_value=0.46458645708380975 ,l1_regularization_strength=0.11276556317460107 ,l2_regularization_strength=0.7151718040790617 ,l2_shrinkage_regularization_strength=0.19398937149250084 ,beta=0.9306955698771433].
2023-08-03 18:28:07,746 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0004433989628994805 ,centered=False ,beta_1=0.27253437298634475 ,beta_2=0.9093282718935445 ,learning_rate_power=-0.34412973510036826 ,initial_accumulator_value=0.812736524875639 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:28:07,746 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0004433989628994805 ,centered=False ,beta_1=0.27253437298634475 ,beta_2=0.9093282718935445 ,learning_rate_power=-0.34412973510036826 ,initial_accumulator_value=0.812736524875639 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:28:22,784 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.004985436903985423 ,use_ema=True ,ema_momentum=0.603937077800637 ,rho=0.49051213461189636 ,epsilon=0.00021147763018282276 ,centered=False ,beta_1=0.6341023267193387 ,beta_2=0.4138867573837527 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.9391908484989353 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7145962929777525 ,beta=0.7299323966596429].
2023-08-03 18:28:22,784 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.004985436903985423 ,use_ema=True ,ema_momentum=0.603937077800637 ,rho=0.49051213461189636 ,epsilon=0.00021147763018282276 ,centered=False ,beta_1=0.6341023267193387 ,beta_2=0.4138867573837527 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.9391908484989353 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7145962929777525 ,beta=0.7299323966596429].
2023-08-03 18:28:22,807 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.009557618783642696, momentum=0.13771531849280094 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6930617138043289 ,epsilon=0.0008266931173754184 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.057645447889713375 ,beta=0.4833233034759832].
2023-08-03 18:28:22,807 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.009557618783642696, momentum=0.13771531849280094 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6930617138043289 ,epsilon=0.0008266931173754184 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.057645447889713375 ,beta=0.4833233034759832].
2023-08-03 18:28:27,855 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:28:27,855 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:28:48,857 INFO: Applying selection operators for generation 3.
2023-08-03 18:28:48,857 INFO: Applying genetic operators for generation 3.
2023-08-03 18:28:48,864 INFO: Evaluating fitness for for generation 3.
2023-08-03 18:28:48,864 INFO: Will evaluate fitness for 35 individuals.
2023-08-03 18:28:49,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:28:49,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:28:49,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:28:49,409 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:28:49,419 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0005751204688925273 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:28:49,419 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0005751204688925273 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:28:49,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:28:49,428 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:29:09,779 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:29:09,780 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:29:09,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:29:09,806 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:29:09,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:29:09,954 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:29:11,512 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:29:11,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:29:29,673 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:29:29,673 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:29:30,195 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:29:30,195 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:29:30,864 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:29:30,865 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:29:32,474 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6307508679885424, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.00980095301209121 ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0009534133389647686 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3009243731788567 ,initial_accumulator_value=0.6462859897964223 ,l1_regularization_strength=0.0738662640759088 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06850208961541715 ,beta=0.7299323966596429].
2023-08-03 18:29:32,475 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6307508679885424, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.00980095301209121 ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0009534133389647686 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3009243731788567 ,initial_accumulator_value=0.6462859897964223 ,l1_regularization_strength=0.0738662640759088 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06850208961541715 ,beta=0.7299323966596429].
2023-08-03 18:29:49,755 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2640698949373098, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.29852410215938074 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.4849288634147466 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.2099595941648582 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.40303620131904916 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9141328165928971 ,beta=0.9388237949061838].
2023-08-03 18:29:49,755 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2640698949373098, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.29852410215938074 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.4849288634147466 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.2099595941648582 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.40303620131904916 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9141328165928971 ,beta=0.9388237949061838].
2023-08-03 18:29:51,050 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:29:51,050 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:29:53,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:29:53,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:29:54,466 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:29:54,466 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:30:10,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.33844277335319306].
2023-08-03 18:30:10,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.33844277335319306].
2023-08-03 18:30:11,663 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.0022001670995962994 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0008218413167261261 ,centered=False ,beta_1=0.6337984387897979 ,beta_2=0.43191636127588706 ,learning_rate_power=-0.845892590412719 ,initial_accumulator_value=0.9823930471072039 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:30:11,663 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.0022001670995962994 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0008218413167261261 ,centered=False ,beta_1=0.6337984387897979 ,beta_2=0.43191636127588706 ,learning_rate_power=-0.845892590412719 ,initial_accumulator_value=0.9823930471072039 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:30:13,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:30:13,746 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:30:15,006 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:30:15,007 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.33844277335319306].
2023-08-03 18:30:30,265 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.7299323966596429].
2023-08-03 18:30:30,266 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6629152397549386 ,rho=0.6292437151780367 ,epsilon=0.0005751204688925273 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.7299323966596429].
2023-08-03 18:30:34,506 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7524956744909292, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.46394520793862015 ,rho=0.6887689568708476 ,epsilon=0.0004981508127553705 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.49085303292244187 ,learning_rate_power=-0.30455810757722035 ,initial_accumulator_value=0.17902898711806892 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.14788314219735954].
2023-08-03 18:30:34,507 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7524956744909292, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.46394520793862015 ,rho=0.6887689568708476 ,epsilon=0.0004981508127553705 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.49085303292244187 ,learning_rate_power=-0.30455810757722035 ,initial_accumulator_value=0.17902898711806892 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.593026378024148 ,beta=0.14788314219735954].
2023-08-03 18:30:34,879 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:30:34,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.40374819391789285 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:30:36,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:30:36,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:30:50,290 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:30:50,290 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:30:56,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6480165366466192, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.008189777763611331 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.3369429280088617 ,beta_2=0.3179005541016806 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3916727869793327 ,beta=0.7299323966596429].
2023-08-03 18:30:56,093 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6480165366466192, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.008189777763611331 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.3369429280088617 ,beta_2=0.3179005541016806 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3916727869793327 ,beta=0.7299323966596429].
2023-08-03 18:30:56,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:30:56,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:30:57,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0.15261104591429486 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.30848749525960584 ,beta_2=0.2792624027087143 ,learning_rate_power=-0.3865097580559921 ,initial_accumulator_value=0.05632950844963758 ,l1_regularization_strength=0.5751331190090695 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.3520819849578294].
2023-08-03 18:30:57,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24727345555230673, momentum=0.15261104591429486 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.30848749525960584 ,beta_2=0.2792624027087143 ,learning_rate_power=-0.3865097580559921 ,initial_accumulator_value=0.05632950844963758 ,l1_regularization_strength=0.5751331190090695 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.3520819849578294].
2023-08-03 18:31:10,592 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:31:10,592 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:31:17,326 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:31:17,326 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:31:17,518 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004847662530277016 ,use_ema=True ,ema_momentum=0.4606823500246817 ,rho=0.60913874304522 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7782073070196585 ,beta_2=0.004440876625247614 ,learning_rate_power=-0.47686927934380763 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.16702146945622343 ,beta=0.32737087896028616].
2023-08-03 18:31:17,518 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004847662530277016 ,use_ema=True ,ema_momentum=0.4606823500246817 ,rho=0.60913874304522 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7782073070196585 ,beta_2=0.004440876625247614 ,learning_rate_power=-0.47686927934380763 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.16702146945622343 ,beta=0.32737087896028616].
2023-08-03 18:31:17,767 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.3717194426198448 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8720139796921214 ,rho=0.6292437151780367 ,epsilon=0.0007764394357966987 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.6995513483591311 ,learning_rate_power=-0.9842277741327286 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.010700029301419445 ,beta=0.33844277335319306].
2023-08-03 18:31:17,767 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.3717194426198448 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8720139796921214 ,rho=0.6292437151780367 ,epsilon=0.0007764394357966987 ,centered=True ,beta_1=0.9475463763692231 ,beta_2=0.6995513483591311 ,learning_rate_power=-0.9842277741327286 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.010700029301419445 ,beta=0.33844277335319306].
2023-08-03 18:31:30,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:31:30,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:31:37,957 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.34455399348155014 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.2104212755944258 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9585364255346109 ,beta=0.7299323966596429].
2023-08-03 18:31:37,957 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.34455399348155014 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.2104212755944258 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9585364255346109 ,beta=0.7299323966596429].
2023-08-03 18:31:41,575 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.01645450314563157, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007909806712192151 ,use_ema=True ,ema_momentum=0.39173429307070473 ,rho=0.6292437151780367 ,epsilon=0.00033941452182858865 ,centered=False ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.2175528330033234 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.09242369818746055 ,beta=0.3140672385423481].
2023-08-03 18:31:41,575 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.01645450314563157, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007909806712192151 ,use_ema=True ,ema_momentum=0.39173429307070473 ,rho=0.6292437151780367 ,epsilon=0.00033941452182858865 ,centered=False ,beta_1=0.9475463763692231 ,beta_2=0.21926794902548108 ,learning_rate_power=-0.2175528330033234 ,initial_accumulator_value=0.3805558389884057 ,l1_regularization_strength=0.9760682646217889 ,l2_regularization_strength=0.8405626273046647 ,l2_shrinkage_regularization_strength=0.09242369818746055 ,beta=0.3140672385423481].
2023-08-03 18:32:09,997 INFO: Applying selection operators for generation 4.
2023-08-03 18:32:09,997 INFO: Applying genetic operators for generation 4.
2023-08-03 18:32:10,006 INFO: Evaluating fitness for for generation 4.
2023-08-03 18:32:10,006 INFO: Will evaluate fitness for 29 individuals.
2023-08-03 18:32:10,515 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32772164711251817, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.42853226892001517 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.9074144073220536 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:32:10,516 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32772164711251817, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.42853226892001517 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.9074144073220536 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:32:10,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:32:10,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:32:10,648 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.10650536854640336, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7662175983937314 ,rho=0.11442941921958538 ,epsilon=0.000455388028123277 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.005466596867526596 ,l1_regularization_strength=0.32785005210922946 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.877223213813133 ,beta=0.06857824181557182].
2023-08-03 18:32:10,648 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.10650536854640336, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7662175983937314 ,rho=0.11442941921958538 ,epsilon=0.000455388028123277 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.005466596867526596 ,l1_regularization_strength=0.32785005210922946 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.877223213813133 ,beta=0.06857824181557182].
2023-08-03 18:32:10,696 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.19643004262915054, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9234948782375734 ,rho=0.5601008242063914 ,epsilon=0.0008708681380427885 ,centered=False ,beta_1=0.7954343336452885 ,beta_2=0.22864383665655075 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4578341837762353 ,beta=0.7299323966596429].
2023-08-03 18:32:10,696 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.19643004262915054, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9234948782375734 ,rho=0.5601008242063914 ,epsilon=0.0008708681380427885 ,centered=False ,beta_1=0.7954343336452885 ,beta_2=0.22864383665655075 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4578341837762353 ,beta=0.7299323966596429].
2023-08-03 18:32:29,725 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.34014022196777116, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7783315898253511 ,rho=0.20607103585706443 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.12718403087622687 ,beta_2=0.4741175940978587 ,learning_rate_power=-0.44542023861192637 ,initial_accumulator_value=0.9493003086951045 ,l1_regularization_strength=0.8908244201254812 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.663775593751662 ,beta=0.7299323966596429].
2023-08-03 18:32:29,725 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.34014022196777116, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7783315898253511 ,rho=0.20607103585706443 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.12718403087622687 ,beta_2=0.4741175940978587 ,learning_rate_power=-0.44542023861192637 ,initial_accumulator_value=0.9493003086951045 ,l1_regularization_strength=0.8908244201254812 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.663775593751662 ,beta=0.7299323966596429].
2023-08-03 18:32:31,623 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:32:31,624 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:32:32,026 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=0.0020403713109557174 ,use_ema=True ,ema_momentum=0.8549935743563942 ,rho=0.23715581535892938 ,epsilon=0.0008676009429936489 ,centered=False ,beta_1=0.5007085446600028 ,beta_2=0.8582776942224002 ,learning_rate_power=-0.9478507198117271 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.04458642056573947 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5218720963281255 ,beta=0.7299323966596429].
2023-08-03 18:32:32,026 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=0.0020403713109557174 ,use_ema=True ,ema_momentum=0.8549935743563942 ,rho=0.23715581535892938 ,epsilon=0.0008676009429936489 ,centered=False ,beta_1=0.5007085446600028 ,beta_2=0.8582776942224002 ,learning_rate_power=-0.9478507198117271 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.04458642056573947 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5218720963281255 ,beta=0.7299323966596429].
2023-08-03 18:32:33,284 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.980998701115337 ,epsilon=0.0005657855546640033 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.36880996887969086 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.921425904789688 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.2639901584699814].
2023-08-03 18:32:33,284 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.980998701115337 ,epsilon=0.0005657855546640033 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.36880996887969086 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.921425904789688 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.2639901584699814].
2023-08-03 18:32:52,232 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:32:52,233 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:32:52,464 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.49759764869580647 ,rho=0.2482277852838649 ,epsilon=0.0007894781402991531 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7600509519542971 ,initial_accumulator_value=0.008523052129747133 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.031083674944938022 ,beta=0.7299323966596429].
2023-08-03 18:32:52,465 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.49759764869580647 ,rho=0.2482277852838649 ,epsilon=0.0007894781402991531 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7600509519542971 ,initial_accumulator_value=0.008523052129747133 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.031083674944938022 ,beta=0.7299323966596429].
2023-08-03 18:32:53,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0009012412926824513 ,centered=False ,beta_1=0.24956491312076212 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8962183615260056 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:32:53,644 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0009012412926824513 ,centered=False ,beta_1=0.24956491312076212 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8962183615260056 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:32:55,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:32:55,938 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:33:13,377 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:33:13,377 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:33:15,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:33:15,051 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:33:15,331 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.17036427444243785 ,rho=0.4387999245311299 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5999566861788037 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7644650209812104 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4100712727495035 ,beta=0.05232103166998625].
2023-08-03 18:33:15,331 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.17036427444243785 ,rho=0.4387999245311299 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5999566861788037 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7644650209812104 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4100712727495035 ,beta=0.05232103166998625].
2023-08-03 18:33:17,223 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:33:17,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:33:34,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:33:34,203 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:33:36,536 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.5652453073304898 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.11047408910583334 ,rho=0.23715581535892938 ,epsilon=0.00026313138236485527 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5822195802161163 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.3599085264644042].
2023-08-03 18:33:36,536 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.5652453073304898 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.11047408910583334 ,rho=0.23715581535892938 ,epsilon=0.00026313138236485527 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5822195802161163 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.3599085264644042].
2023-08-03 18:33:36,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:33:36,752 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:33:38,157 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5355665049581473, momentum=0.651959352776056 ,nesterov=True ,amsgrad=False ,weight_decay=0.004505274337805027 ,use_ema=True ,ema_momentum=0.5849626925510076 ,rho=0.17569477973780145 ,epsilon=0.0006912411696554148 ,centered=False ,beta_1=0.9612312112868812 ,beta_2=0.17017961057260733 ,learning_rate_power=-0.09772503927622433 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6659737610611164 ,beta=0.7772143597210043].
2023-08-03 18:33:38,157 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5355665049581473, momentum=0.651959352776056 ,nesterov=True ,amsgrad=False ,weight_decay=0.004505274337805027 ,use_ema=True ,ema_momentum=0.5849626925510076 ,rho=0.17569477973780145 ,epsilon=0.0006912411696554148 ,centered=False ,beta_1=0.9612312112868812 ,beta_2=0.17017961057260733 ,learning_rate_power=-0.09772503927622433 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6659737610611164 ,beta=0.7772143597210043].
2023-08-03 18:33:54,965 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:33:54,965 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:33:56,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.6371888849909121 ,epsilon=0.0009963668790352563 ,centered=False ,beta_1=0.4824914273209965 ,beta_2=0.9682496003292872 ,learning_rate_power=-0.4664648019180827 ,initial_accumulator_value=0.677295546797634 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4488268948946441 ,beta=0.7299323966596429].
2023-08-03 18:33:56,724 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.6371888849909121 ,epsilon=0.0009963668790352563 ,centered=False ,beta_1=0.4824914273209965 ,beta_2=0.9682496003292872 ,learning_rate_power=-0.4664648019180827 ,initial_accumulator_value=0.677295546797634 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4488268948946441 ,beta=0.7299323966596429].
2023-08-03 18:33:58,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:33:58,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:34:01,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:34:01,538 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:34:16,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:34:16,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:34:18,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6785771512822514, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=0.00332512003080158 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0006627542300892347 ,centered=True ,beta_1=0.5925099882069887 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5385561515522316 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.11910179933105702 ,beta=0.7299323966596429].
2023-08-03 18:34:18,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6785771512822514, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=0.00332512003080158 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0006627542300892347 ,centered=True ,beta_1=0.5925099882069887 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5385561515522316 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.11910179933105702 ,beta=0.7299323966596429].
2023-08-03 18:34:19,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.49792586858808274, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.0025365297972233546 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.5732049811312645 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6954332118868956 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8724375898487572 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4706369697602476 ,beta=0.7299323966596429].
2023-08-03 18:34:19,328 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.49792586858808274, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.0025365297972233546 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.5732049811312645 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6954332118868956 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8724375898487572 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4706369697602476 ,beta=0.7299323966596429].
2023-08-03 18:34:36,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:34:36,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:34:41,183 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:34:41,183 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:35:00,442 INFO: Applying selection operators for generation 5.
2023-08-03 18:35:00,442 INFO: Applying genetic operators for generation 5.
2023-08-03 18:35:00,448 INFO: Evaluating fitness for for generation 5.
2023-08-03 18:35:00,448 INFO: Will evaluate fitness for 23 individuals.
2023-08-03 18:35:00,973 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.31981363826413756 ,nesterov=True ,amsgrad=False ,weight_decay=0.001711563090578724 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.3322108691382143 ,epsilon=0.0009432544916633736 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.46469149633975415 ,l1_regularization_strength=0.28270049661438434 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.28015129944917194 ,beta=0.5542961064075432].
2023-08-03 18:35:00,973 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.31981363826413756 ,nesterov=True ,amsgrad=False ,weight_decay=0.001711563090578724 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.3322108691382143 ,epsilon=0.0009432544916633736 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.46469149633975415 ,l1_regularization_strength=0.28270049661438434 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.28015129944917194 ,beta=0.5542961064075432].
2023-08-03 18:35:01,128 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5164333996799578 ,rho=0.23715581535892938 ,epsilon=0.0008228309159568818 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.045994471775889556 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.538904510532677 ,beta=0.8215851610984876].
2023-08-03 18:35:01,128 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5164333996799578 ,rho=0.23715581535892938 ,epsilon=0.0008228309159568818 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.045994471775889556 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.538904510532677 ,beta=0.8215851610984876].
2023-08-03 18:35:01,160 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7733452429555824, momentum=0.697461155298946 ,nesterov=True ,amsgrad=True ,weight_decay=0.0041078152138715185 ,use_ema=True ,ema_momentum=0.2622139826702904 ,rho=0.23715581535892938 ,epsilon=0.0006814058052234377 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8215467062053627 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.644725685916409 ,l1_regularization_strength=0.43346174369073576 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.5219695505152292].
2023-08-03 18:35:01,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7733452429555824, momentum=0.697461155298946 ,nesterov=True ,amsgrad=True ,weight_decay=0.0041078152138715185 ,use_ema=True ,ema_momentum=0.2622139826702904 ,rho=0.23715581535892938 ,epsilon=0.0006814058052234377 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8215467062053627 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.644725685916409 ,l1_regularization_strength=0.43346174369073576 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.5219695505152292].
2023-08-03 18:35:01,170 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9067189363086654, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7738416788739703 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9075897634294462 ,beta=0.7299323966596429].
2023-08-03 18:35:01,171 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9067189363086654, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7738416788739703 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9075897634294462 ,beta=0.7299323966596429].
2023-08-03 18:35:22,458 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:35:22,459 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:35:22,725 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:35:22,725 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:35:24,117 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:35:24,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:35:24,381 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.911016758828863 ,rho=0.23715581535892938 ,epsilon=0.0007611002465482475 ,centered=False ,beta_1=0.8864201448362118 ,beta_2=0.6412378409020054 ,learning_rate_power=-0.337725453948136 ,initial_accumulator_value=0.972316631874656 ,l1_regularization_strength=0.06261510680281812 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4690122249849258 ,beta=0.7342765217986278].
2023-08-03 18:35:24,381 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.911016758828863 ,rho=0.23715581535892938 ,epsilon=0.0007611002465482475 ,centered=False ,beta_1=0.8864201448362118 ,beta_2=0.6412378409020054 ,learning_rate_power=-0.337725453948136 ,initial_accumulator_value=0.972316631874656 ,l1_regularization_strength=0.06261510680281812 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4690122249849258 ,beta=0.7342765217986278].
2023-08-03 18:35:43,156 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:35:43,157 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:35:43,169 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:35:43,169 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:35:44,840 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:35:44,840 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:35:46,465 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.5047189098778883 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5026032102209551 ,rho=0.23715581535892938 ,epsilon=0.0005894541223265688 ,centered=False ,beta_1=0.5818670768630402 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:35:46,466 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.5047189098778883 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5026032102209551 ,rho=0.23715581535892938 ,epsilon=0.0005894541223265688 ,centered=False ,beta_1=0.5818670768630402 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:03,320 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:03,320 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:03,795 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:03,796 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:05,525 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:05,526 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:09,592 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7896933049356634, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7559408537901914 ,rho=0.23715581535892938 ,epsilon=8.050516000881664e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9590224528688803 ,initial_accumulator_value=0.48606938732107097 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.9894859658746914].
2023-08-03 18:36:09,592 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7896933049356634, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7559408537901914 ,rho=0.23715581535892938 ,epsilon=8.050516000881664e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9590224528688803 ,initial_accumulator_value=0.48606938732107097 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.9894859658746914].
2023-08-03 18:36:23,396 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.04377609111452552, momentum=0.373703184826793 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7994287979877654 ,rho=0.23715581535892938 ,epsilon=6.519175773823287e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.6988391159424475 ,learning_rate_power=-0.3443340115237623 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7969095889043977 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.36208420042777967 ,beta=0.7299323966596429].
2023-08-03 18:36:23,396 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.04377609111452552, momentum=0.373703184826793 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7994287979877654 ,rho=0.23715581535892938 ,epsilon=6.519175773823287e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.6988391159424475 ,learning_rate_power=-0.3443340115237623 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7969095889043977 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.36208420042777967 ,beta=0.7299323966596429].
2023-08-03 18:36:24,854 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:24,855 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:26,205 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:26,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:32,348 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:32,348 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:44,797 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:44,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:45,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:45,481 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:47,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:36:47,202 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:06,993 INFO: Applying selection operators for generation 6.
2023-08-03 18:37:06,993 INFO: Applying genetic operators for generation 6.
2023-08-03 18:37:06,999 INFO: Evaluating fitness for for generation 6.
2023-08-03 18:37:06,999 INFO: Will evaluate fitness for 27 individuals.
2023-08-03 18:37:07,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:07,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:07,583 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:07,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:07,626 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8410109157475735 ,rho=0.6752782412493198 ,epsilon=0.0002332995939308003 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.16803032069425128 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.310469062715512 ,beta=0.07290842700526401].
2023-08-03 18:37:07,626 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8410109157475735 ,rho=0.6752782412493198 ,epsilon=0.0002332995939308003 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.16803032069425128 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.310469062715512 ,beta=0.07290842700526401].
2023-08-03 18:37:07,627 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:07,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:27,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:27,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:28,085 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:28,086 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:28,583 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.15790396828317743 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1937767284610633 ,beta_2=0.47335434339441096 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.9124531973251673 ,l1_regularization_strength=0.7123860146953038 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.003064295895890634 ,beta=0.4575787312751832].
2023-08-03 18:37:28,583 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.15790396828317743 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1937767284610633 ,beta_2=0.47335434339441096 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.9124531973251673 ,l1_regularization_strength=0.7123860146953038 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.003064295895890634 ,beta=0.4575787312751832].
2023-08-03 18:37:31,000 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0008769052629904355 ,centered=True ,beta_1=0.15016073778665073 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.21708254489088263 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9461752871127039 ,beta=0.7299323966596429].
2023-08-03 18:37:31,000 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0008769052629904355 ,centered=True ,beta_1=0.15016073778665073 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.21708254489088263 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9461752871127039 ,beta=0.7299323966596429].
2023-08-03 18:37:47,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:47,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:49,133 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:49,133 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:50,523 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:50,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:53,996 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:37:53,996 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:38:08,056 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:38:08,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:38:09,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:38:09,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:38:11,342 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:38:11,342 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:38:14,915 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.3177583608870922 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6034062357265976 ,rho=0.009557951106597962 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.9327503749413241 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6868493467173249 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7761544251503629 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.28803829291399197 ,beta=0.22972829337199974].
2023-08-03 18:38:14,916 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.3177583608870922 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6034062357265976 ,rho=0.009557951106597962 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.9327503749413241 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6868493467173249 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7761544251503629 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.28803829291399197 ,beta=0.22972829337199974].
2023-08-03 18:38:28,203 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5801408118517946, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.007053556199505884 ,use_ema=False ,ema_momentum=0.12999797676565106 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.27739916503499296 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.46452685533441695 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4915767667352974 ,beta=0.7299323966596429].
2023-08-03 18:38:28,203 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5801408118517946, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.007053556199505884 ,use_ema=False ,ema_momentum=0.12999797676565106 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.27739916503499296 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.46452685533441695 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4915767667352974 ,beta=0.7299323966596429].
2023-08-03 18:38:30,763 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:38:30,764 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:38:32,756 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15281462614533203, momentum=0.281425043205067 ,nesterov=False ,amsgrad=False ,weight_decay=0.004461824637914497 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0007479537813428599 ,centered=False ,beta_1=0.9867551148888997 ,beta_2=0.8919389460705562 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.9485511204646546 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6577864902009983 ,beta=0.26240830605233334].
2023-08-03 18:38:32,756 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15281462614533203, momentum=0.281425043205067 ,nesterov=False ,amsgrad=False ,weight_decay=0.004461824637914497 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0007479537813428599 ,centered=False ,beta_1=0.9867551148888997 ,beta_2=0.8919389460705562 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.9485511204646546 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6577864902009983 ,beta=0.26240830605233334].
2023-08-03 18:38:38,027 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0007605914771728812 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5382096446714583 ,beta=0.7299323966596429].
2023-08-03 18:38:38,027 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0007605914771728812 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5382096446714583 ,beta=0.7299323966596429].
2023-08-03 18:38:48,169 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:38:48,170 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:38:52,054 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.40319985626069277, momentum=0.30551813977163556 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.00011382891418664699 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7867396770382802 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.25817546248689216 ,beta=0.22287052500241356].
2023-08-03 18:38:52,055 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.40319985626069277, momentum=0.30551813977163556 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.00011382891418664699 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7867396770382802 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.25817546248689216 ,beta=0.22287052500241356].
2023-08-03 18:38:56,284 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:38:56,284 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:39:00,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.10560397761384777 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.4540626370197528 ,beta_2=0.9177425707955503 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.49019353859790493 ,l1_regularization_strength=0.37297299882335866 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7319149801496551 ,beta=0.7706480558734998].
2023-08-03 18:39:00,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.10560397761384777 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.4540626370197528 ,beta_2=0.9177425707955503 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.49019353859790493 ,l1_regularization_strength=0.37297299882335866 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7319149801496551 ,beta=0.7706480558734998].
2023-08-03 18:39:08,668 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:39:08,669 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:39:15,242 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.47442915746220604 ,nesterov=False ,amsgrad=False ,weight_decay=0.00380941343539428 ,use_ema=False ,ema_momentum=0.5182541293340358 ,rho=0.23715581535892938 ,epsilon=0.0008529920552767773 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3810844367704469 ,learning_rate_power=-0.7646592632905549 ,initial_accumulator_value=0.8295924475001738 ,l1_regularization_strength=0.5669392643686771 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.023488326152265926 ,beta=0.7299323966596429].
2023-08-03 18:39:15,242 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.47442915746220604 ,nesterov=False ,amsgrad=False ,weight_decay=0.00380941343539428 ,use_ema=False ,ema_momentum=0.5182541293340358 ,rho=0.23715581535892938 ,epsilon=0.0008529920552767773 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3810844367704469 ,learning_rate_power=-0.7646592632905549 ,initial_accumulator_value=0.8295924475001738 ,l1_regularization_strength=0.5669392643686771 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.023488326152265926 ,beta=0.7299323966596429].
2023-08-03 18:39:28,791 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:39:28,791 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:39:48,065 INFO: Applying selection operators for generation 7.
2023-08-03 18:39:48,066 INFO: Applying genetic operators for generation 7.
2023-08-03 18:39:48,071 INFO: Evaluating fitness for for generation 7.
2023-08-03 18:39:48,071 INFO: Will evaluate fitness for 30 individuals.
2023-08-03 18:39:48,651 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.009592537667409862 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.8192858161879699 ,beta_2=0.6025256958938264 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5043498961298065 ,beta=0.7299323966596429].
2023-08-03 18:39:48,651 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.009592537667409862 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.8192858161879699 ,beta_2=0.6025256958938264 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5043498961298065 ,beta=0.7299323966596429].
2023-08-03 18:39:48,670 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:39:48,670 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:39:48,781 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:39:48,782 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:39:48,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:39:48,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:10,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:10,051 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:10,084 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=True ,weight_decay=0.0027928263364612907 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.41255098024976755 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.16957285688358847 ,beta_2=0.321975109156709 ,learning_rate_power=-0.6958458610139313 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5695765779425588 ,beta=0.9443708826940928].
2023-08-03 18:40:10,084 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=True ,weight_decay=0.0027928263364612907 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.41255098024976755 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.16957285688358847 ,beta_2=0.321975109156709 ,learning_rate_power=-0.6958458610139313 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5695765779425588 ,beta=0.9443708826940928].
2023-08-03 18:40:10,100 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.11658686157311315, momentum=0.41660192857322775 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4254365235238332 ,rho=0.5107483841070474 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.4404087842868406 ,learning_rate_power=-0.36435901918801694 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.45824937378318276 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.32112481129896286].
2023-08-03 18:40:10,100 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.11658686157311315, momentum=0.41660192857322775 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4254365235238332 ,rho=0.5107483841070474 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.4404087842868406 ,learning_rate_power=-0.36435901918801694 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.45824937378318276 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.32112481129896286].
2023-08-03 18:40:11,329 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:11,329 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:30,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:30,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:31,529 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:31,529 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:32,342 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:32,343 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:33,509 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:33,509 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:51,394 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:51,395 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:51,501 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:51,502 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:53,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:53,075 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:54,384 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:40:54,385 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:11,309 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:11,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:12,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:12,718 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:14,676 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:14,677 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:15,865 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15246299312140987, momentum=0.00820465825863037 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.20543965657863505 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7472525601675797 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6641958872113786 ,initial_accumulator_value=0.2000453996817837 ,l1_regularization_strength=0.8234685234290542 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6411713787486907 ,beta=0.13553573905425198].
2023-08-03 18:41:15,865 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15246299312140987, momentum=0.00820465825863037 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.20543965657863505 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7472525601675797 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6641958872113786 ,initial_accumulator_value=0.2000453996817837 ,l1_regularization_strength=0.8234685234290542 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6411713787486907 ,beta=0.13553573905425198].
2023-08-03 18:41:31,978 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30722148730169185, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0007539937277495241 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.13353357414798717 ,learning_rate_power=-0.5398539094643052 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.10774814318877113 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.13131953328988744 ,beta=0.9538074179322622].
2023-08-03 18:41:31,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30722148730169185, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0007539937277495241 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.13353357414798717 ,learning_rate_power=-0.5398539094643052 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.10774814318877113 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.13131953328988744 ,beta=0.9538074179322622].
2023-08-03 18:41:33,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:33,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:35,629 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:35,630 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:39,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:39,075 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:54,071 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:54,071 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:54,286 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3340209763116926 ,rho=0.6393437356823536 ,epsilon=0.0009775835902021274 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9825752530786955 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.6894762982019743 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8580632150898899 ,beta=0.9927831497320871].
2023-08-03 18:41:54,286 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3340209763116926 ,rho=0.6393437356823536 ,epsilon=0.0009775835902021274 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9825752530786955 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.6894762982019743 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8580632150898899 ,beta=0.9927831497320871].
2023-08-03 18:41:56,411 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:41:56,411 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:42:14,076 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:42:14,076 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:42:16,924 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.28148835720491194, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004525010973434569 ,use_ema=False ,ema_momentum=0.9248488477666443 ,rho=0.22887682897000272 ,epsilon=0.00010566357549220518 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9512579342975793 ,learning_rate_power=-0.155961604152822 ,initial_accumulator_value=0.41749517410676273 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.45709060566072435 ,beta=0.7299323966596429].
2023-08-03 18:42:16,924 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.28148835720491194, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004525010973434569 ,use_ema=False ,ema_momentum=0.9248488477666443 ,rho=0.22887682897000272 ,epsilon=0.00010566357549220518 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9512579342975793 ,learning_rate_power=-0.155961604152822 ,initial_accumulator_value=0.41749517410676273 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.45709060566072435 ,beta=0.7299323966596429].
2023-08-03 18:42:17,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:42:17,646 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:42:39,355 INFO: Applying selection operators for generation 8.
2023-08-03 18:42:39,355 INFO: Applying genetic operators for generation 8.
2023-08-03 18:42:39,364 INFO: Evaluating fitness for for generation 8.
2023-08-03 18:42:39,365 INFO: Will evaluate fitness for 32 individuals.
2023-08-03 18:42:39,921 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:42:39,922 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:42:39,964 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:42:39,964 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:42:40,056 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:42:40,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:42:40,063 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.33849122450591984, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.8841601821451573 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.09841660375695016 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.951827762807233 ,beta=0.7299323966596429].
2023-08-03 18:42:40,064 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.33849122450591984, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.8841601821451573 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.09841660375695016 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.951827762807233 ,beta=0.7299323966596429].
2023-08-03 18:42:59,969 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.41665698415922403, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.143301590535571 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.35101425018576626 ,beta_2=0.08946026673428187 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.010239854973070894 ,beta=0.7299323966596429].
2023-08-03 18:42:59,969 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.41665698415922403, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.143301590535571 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.35101425018576626 ,beta_2=0.08946026673428187 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.010239854973070894 ,beta=0.7299323966596429].
2023-08-03 18:43:00,511 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:43:00,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:43:00,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4652782194467989 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.46492715411553986 ,beta=0.7299323966596429].
2023-08-03 18:43:00,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4652782194467989 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.46492715411553986 ,beta=0.7299323966596429].
2023-08-03 18:43:02,216 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:43:02,217 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:43:21,115 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.638983671873221, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7666638888588917 ,rho=0.6812834855795936 ,epsilon=0.0004513453314090065 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.18598123568835123 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1089756053608647 ,beta=0.7299323966596429].
2023-08-03 18:43:21,116 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.638983671873221, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7666638888588917 ,rho=0.6812834855795936 ,epsilon=0.0004513453314090065 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.18598123568835123 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1089756053608647 ,beta=0.7299323966596429].
2023-08-03 18:43:21,421 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7591271044100181, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.7051626720044903 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.39469846576803613 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.4619907531271997 ,l1_regularization_strength=0.20414153279622294 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7400505249474465 ,beta=0.34618723905498616].
2023-08-03 18:43:21,422 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7591271044100181, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.7051626720044903 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.39469846576803613 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.4619907531271997 ,l1_regularization_strength=0.20414153279622294 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7400505249474465 ,beta=0.34618723905498616].
2023-08-03 18:43:21,679 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.08511408650919094 ,epsilon=0.0007825651218690561 ,centered=False ,beta_1=0.8712720040570519 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6372918906869123 ,initial_accumulator_value=0.05904661614868867 ,l1_regularization_strength=0.8307145907323819 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3064962613895701 ,beta=0.6169871272791652].
2023-08-03 18:43:21,679 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.08511408650919094 ,epsilon=0.0007825651218690561 ,centered=False ,beta_1=0.8712720040570519 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6372918906869123 ,initial_accumulator_value=0.05904661614868867 ,l1_regularization_strength=0.8307145907323819 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3064962613895701 ,beta=0.6169871272791652].
2023-08-03 18:43:23,655 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7357470137666364 ,rho=0.07056933807137633 ,epsilon=4.628535645271343e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.4729264331854567 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.34240172168290406 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4550022144348985 ,beta=0.7426315381618337].
2023-08-03 18:43:23,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7357470137666364 ,rho=0.07056933807137633 ,epsilon=4.628535645271343e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.4729264331854567 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.34240172168290406 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4550022144348985 ,beta=0.7426315381618337].
2023-08-03 18:43:43,211 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7843518998060812, momentum=0.07022165456315344 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.1649392600047338 ,rho=0.3700026646548129 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06652734096806767 ,beta=0.2714298545809245].
2023-08-03 18:43:43,211 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7843518998060812, momentum=0.07022165456315344 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.1649392600047338 ,rho=0.3700026646548129 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06652734096806767 ,beta=0.2714298545809245].
2023-08-03 18:43:44,677 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:43:44,677 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:43:44,722 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.8806617460787772, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8848052901101063 ,rho=0.358444805144171 ,epsilon=0.00038398067192095124 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.9539053317604531 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.358437896872587 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.9743946352878398].
2023-08-03 18:43:44,722 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.8806617460787772, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8848052901101063 ,rho=0.358444805144171 ,epsilon=0.00038398067192095124 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.9539053317604531 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.358437896872587 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.9743946352878398].
2023-08-03 18:43:46,709 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:43:46,709 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:05,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4923656615214608, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0012533380600024881 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.2428155602808787 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.10699186512989667 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8292135837731259 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.2403534341643233 ,beta=0.7299323966596429].
2023-08-03 18:44:05,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4923656615214608, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0012533380600024881 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.2428155602808787 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.10699186512989667 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8292135837731259 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.2403534341643233 ,beta=0.7299323966596429].
2023-08-03 18:44:05,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:05,771 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:07,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:07,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:08,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:08,453 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:25,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5940544249736018, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6782135997520634 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.33185823171170836 ,initial_accumulator_value=0.9203616734338285 ,l1_regularization_strength=0.735991127394492 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.17702220344192487 ,beta=0.7299323966596429].
2023-08-03 18:44:25,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5940544249736018, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6782135997520634 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.33185823171170836 ,initial_accumulator_value=0.9203616734338285 ,l1_regularization_strength=0.735991127394492 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.17702220344192487 ,beta=0.7299323966596429].
2023-08-03 18:44:28,731 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:28,731 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:28,785 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2141598265283886, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.00042395421590221444 ,centered=True ,beta_1=0.7080618971107828 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9226259263410537 ,beta=0.2893055773263139].
2023-08-03 18:44:28,785 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2141598265283886, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.00042395421590221444 ,centered=True ,beta_1=0.7080618971107828 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9226259263410537 ,beta=0.2893055773263139].
2023-08-03 18:44:28,961 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:28,961 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:45,848 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8519066701156881, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6307778575349798 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.44992061941129224 ,initial_accumulator_value=0.37946286835908516 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5911229361884425 ,beta=0.7299323966596429].
2023-08-03 18:44:45,848 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8519066701156881, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6307778575349798 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.44992061941129224 ,initial_accumulator_value=0.37946286835908516 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5911229361884425 ,beta=0.7299323966596429].
2023-08-03 18:44:50,047 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:50,047 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:50,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:50,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:52,057 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:44:52,058 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:06,522 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.02035355683717799, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5449575211731438 ,rho=0.23715581535892938 ,epsilon=7.633250373132434e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9880291817846719 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8767454394171591 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.45987592199162763 ,beta=0.7283168023921277].
2023-08-03 18:45:06,522 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.02035355683717799, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5449575211731438 ,rho=0.23715581535892938 ,epsilon=7.633250373132434e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9880291817846719 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8767454394171591 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.45987592199162763 ,beta=0.7283168023921277].
2023-08-03 18:45:10,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:10,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:10,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3484790974401071, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8556491063550681 ,rho=0.5988912518324714 ,epsilon=0.0009390384303557026 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.1868577228568189 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8062161830840955 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.46585272147321344 ,beta=0.7299323966596429].
2023-08-03 18:45:10,962 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3484790974401071, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8556491063550681 ,rho=0.5988912518324714 ,epsilon=0.0009390384303557026 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.1868577228568189 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8062161830840955 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.46585272147321344 ,beta=0.7299323966596429].
2023-08-03 18:45:12,857 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.0239462574607906 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.01596134780208447 ,beta_2=0.5599740958942331 ,learning_rate_power=-0.14543836300587087 ,initial_accumulator_value=0.1719819100592367 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9983534038627152 ,beta=0.7299323966596429].
2023-08-03 18:45:12,857 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.0239462574607906 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.01596134780208447 ,beta_2=0.5599740958942331 ,learning_rate_power=-0.14543836300587087 ,initial_accumulator_value=0.1719819100592367 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9983534038627152 ,beta=0.7299323966596429].
2023-08-03 18:45:34,997 INFO: Applying selection operators for generation 9.
2023-08-03 18:45:34,997 INFO: Applying genetic operators for generation 9.
2023-08-03 18:45:35,005 INFO: Evaluating fitness for for generation 9.
2023-08-03 18:45:35,005 INFO: Will evaluate fitness for 35 individuals.
2023-08-03 18:45:35,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.16278331453064043, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.4508362992273399 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.20209662161502828 ,beta=0.7299323966596429].
2023-08-03 18:45:35,544 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.16278331453064043, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.4508362992273399 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.20209662161502828 ,beta=0.7299323966596429].
2023-08-03 18:45:35,642 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:35,642 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:35,647 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:35,648 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:35,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:35,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:55,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:55,522 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:56,154 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7368404321853707 ,rho=0.5281739750253814 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8903843326133905 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3508867416779865 ,initial_accumulator_value=0.1432779706595959 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:56,154 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7368404321853707 ,rho=0.5281739750253814 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8903843326133905 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3508867416779865 ,initial_accumulator_value=0.1432779706595959 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:56,674 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:56,675 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:56,813 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:45:56,814 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:46:16,097 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20320183284398186, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.9633384480683026 ,epsilon=0.0009785566671611837 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8649022619399451 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.12735223120095218 ,beta=0.0468965793353342].
2023-08-03 18:46:16,097 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20320183284398186, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.9633384480683026 ,epsilon=0.0009785566671611837 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8649022619399451 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.12735223120095218 ,beta=0.0468965793353342].
2023-08-03 18:46:16,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:46:16,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:46:17,208 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2749440806193735, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.5201546812610327 ,epsilon=0.0006223711950430037 ,centered=False ,beta_1=0.33019054666599656 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5076647535524896 ,initial_accumulator_value=0.5240368949242538 ,l1_regularization_strength=0.9128279720120229 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.37515490746410873 ,beta=0.7299323966596429].
2023-08-03 18:46:17,208 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2749440806193735, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.5201546812610327 ,epsilon=0.0006223711950430037 ,centered=False ,beta_1=0.33019054666599656 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5076647535524896 ,initial_accumulator_value=0.5240368949242538 ,l1_regularization_strength=0.9128279720120229 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.37515490746410873 ,beta=0.7299323966596429].
2023-08-03 18:46:17,336 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:46:17,336 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:46:35,875 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:46:35,875 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:46:37,018 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:46:37,018 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:46:37,800 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0008563730342250986 ,centered=True ,beta_1=0.7858774353915807 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.9526364980475258 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.09704522199796217 ,beta=0.5080399032255722].
2023-08-03 18:46:37,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0008563730342250986 ,centered=True ,beta_1=0.7858774353915807 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.9526364980475258 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.09704522199796217 ,beta=0.5080399032255722].
2023-08-03 18:46:38,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:46:38,390 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:46:56,332 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.4562122017583211, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.409190234113755 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.9099392084641148 ,beta_2=0.2139226589425256 ,learning_rate_power=-0.7501200919859798 ,initial_accumulator_value=0.8824415467619129 ,l1_regularization_strength=0.9693851415681385 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.3108095341058229].
2023-08-03 18:46:56,332 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.4562122017583211, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.409190234113755 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.9099392084641148 ,beta_2=0.2139226589425256 ,learning_rate_power=-0.7501200919859798 ,initial_accumulator_value=0.8824415467619129 ,l1_regularization_strength=0.9693851415681385 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.3108095341058229].
2023-08-03 18:46:57,575 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:46:57,576 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:46:58,372 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:46:58,372 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:47:01,219 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9594835732842536, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=0.003443617566056669 ,use_ema=False ,ema_momentum=0.7770503432443387 ,rho=0.1308598869630372 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7089471478690523 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.17468774862210523 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.16985841765033005 ,beta=0.7299323966596429].
2023-08-03 18:47:01,219 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9594835732842536, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=0.003443617566056669 ,use_ema=False ,ema_momentum=0.7770503432443387 ,rho=0.1308598869630372 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7089471478690523 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.17468774862210523 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.16985841765033005 ,beta=0.7299323966596429].
2023-08-03 18:47:18,641 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.22940977560185627 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.7251107117550618 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7749494552458581 ,beta_2=0.8901685953419906 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5378980102910207 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8446105555895294 ,beta=0.7299323966596429].
2023-08-03 18:47:18,641 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.22940977560185627 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.7251107117550618 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7749494552458581 ,beta_2=0.8901685953419906 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5378980102910207 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8446105555895294 ,beta=0.7299323966596429].
2023-08-03 18:47:18,857 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.688069448040612, momentum=0.8306682073734906 ,nesterov=False ,amsgrad=False ,weight_decay=0.0029935439501964024 ,use_ema=True ,ema_momentum=0.5793856401436159 ,rho=0.6492539438039776 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.16296192333229953 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.5282894284248867 ,l1_regularization_strength=0.9490904041040581 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.2829405729344767 ,beta=0.7299323966596429].
2023-08-03 18:47:18,857 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.688069448040612, momentum=0.8306682073734906 ,nesterov=False ,amsgrad=False ,weight_decay=0.0029935439501964024 ,use_ema=True ,ema_momentum=0.5793856401436159 ,rho=0.6492539438039776 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.16296192333229953 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.5282894284248867 ,l1_regularization_strength=0.9490904041040581 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.2829405729344767 ,beta=0.7299323966596429].
2023-08-03 18:47:19,003 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:47:19,003 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:47:22,267 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5940544249736018, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.43215301507558324 ,rho=0.2277833702647668 ,epsilon=0.00015050404587612997 ,centered=False ,beta_1=0.6782135997520634 ,beta_2=0.07065520564583261 ,learning_rate_power=-0.33185823171170836 ,initial_accumulator_value=0.015974626729186592 ,l1_regularization_strength=0.5697996067357942 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.24894747025978314 ,beta=0.7299323966596429].
2023-08-03 18:47:22,268 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5940544249736018, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.43215301507558324 ,rho=0.2277833702647668 ,epsilon=0.00015050404587612997 ,centered=False ,beta_1=0.6782135997520634 ,beta_2=0.07065520564583261 ,learning_rate_power=-0.33185823171170836 ,initial_accumulator_value=0.015974626729186592 ,l1_regularization_strength=0.5697996067357942 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.24894747025978314 ,beta=0.7299323966596429].
2023-08-03 18:47:39,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:47:39,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:47:41,668 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:47:41,668 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:47:42,197 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:47:42,197 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:47:45,221 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:47:45,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:47:59,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:47:59,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:48:02,186 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.22246846494616557, momentum=0.5854920756739463 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.00029838953982436314 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.07754758407351803 ,initial_accumulator_value=0.37209566552026574 ,l1_regularization_strength=0.19489782058494032 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8798267821069548 ,beta=0.3413078029892723].
2023-08-03 18:48:02,187 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.22246846494616557, momentum=0.5854920756739463 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.00029838953982436314 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.07754758407351803 ,initial_accumulator_value=0.37209566552026574 ,l1_regularization_strength=0.19489782058494032 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8798267821069548 ,beta=0.3413078029892723].
2023-08-03 18:48:02,660 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:48:02,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:48:06,524 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:48:06,525 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:48:19,138 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7540545292486417, momentum=0.633239591665017 ,nesterov=True ,amsgrad=True ,weight_decay=0.005558935361237635 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.9998654611923231 ,l1_regularization_strength=0.07902786270936057 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7384409613983455 ,beta=0.7299323966596429].
2023-08-03 18:48:19,138 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7540545292486417, momentum=0.633239591665017 ,nesterov=True ,amsgrad=True ,weight_decay=0.005558935361237635 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.9998654611923231 ,l1_regularization_strength=0.07902786270936057 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7384409613983455 ,beta=0.7299323966596429].
2023-08-03 18:48:23,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:48:23,724 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:48:32,983 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:48:32,983 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:48:52,780 INFO: Applying selection operators for generation 10.
2023-08-03 18:48:52,781 INFO: Applying genetic operators for generation 10.
2023-08-03 18:48:52,789 INFO: Evaluating fitness for for generation 10.
2023-08-03 18:48:52,789 INFO: Will evaluate fitness for 34 individuals.
2023-08-03 18:48:53,349 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:48:53,350 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:48:53,374 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5164282955610223 ,initial_accumulator_value=0.3075179585220209 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4987360128071484 ,beta=0.7299323966596429].
2023-08-03 18:48:53,374 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5164282955610223 ,initial_accumulator_value=0.3075179585220209 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4987360128071484 ,beta=0.7299323966596429].
2023-08-03 18:48:53,398 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:48:53,398 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:48:53,417 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:48:53,417 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:13,280 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6589280851448354, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.824987067725748 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5472301463588884 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3586584515057514 ,beta=0.18152188891682908].
2023-08-03 18:49:13,280 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6589280851448354, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.824987067725748 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5472301463588884 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3586584515057514 ,beta=0.18152188891682908].
2023-08-03 18:49:13,839 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:13,839 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:13,844 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.25401943614290956, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.005430340534104515 ,use_ema=True ,ema_momentum=0.5390098467402046 ,rho=0.23715581535892938 ,epsilon=0.0007419905729661358 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.6342118118037218 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.2871181397005337 ,l1_regularization_strength=0.8179965700756624 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.358292176257597 ,beta=0.7299323966596429].
2023-08-03 18:49:13,844 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.25401943614290956, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.005430340534104515 ,use_ema=True ,ema_momentum=0.5390098467402046 ,rho=0.23715581535892938 ,epsilon=0.0007419905729661358 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.6342118118037218 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.2871181397005337 ,l1_regularization_strength=0.8179965700756624 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.358292176257597 ,beta=0.7299323966596429].
2023-08-03 18:49:13,888 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.045937570242944425 ,rho=0.09352859298410465 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1731493496777342 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6258638243707245 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.20618984355692682 ,beta=0.7299323966596429].
2023-08-03 18:49:13,888 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.045937570242944425 ,rho=0.09352859298410465 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1731493496777342 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6258638243707245 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.20618984355692682 ,beta=0.7299323966596429].
2023-08-03 18:49:34,850 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:34,850 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:35,586 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:35,586 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:36,008 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:36,009 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:37,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:37,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:55,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:55,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:56,066 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.33173637252652877, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.26214507517678354 ,rho=0.23715581535892938 ,epsilon=0.0005170334425294668 ,centered=True ,beta_1=0.5958668629515017 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5849278252766429 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9052771848668771 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8711051980102877 ,beta=0.7299323966596429].
2023-08-03 18:49:56,067 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.33173637252652877, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.26214507517678354 ,rho=0.23715581535892938 ,epsilon=0.0005170334425294668 ,centered=True ,beta_1=0.5958668629515017 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5849278252766429 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9052771848668771 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8711051980102877 ,beta=0.7299323966596429].
2023-08-03 18:49:56,619 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:56,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:58,326 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:49:58,327 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:50:16,057 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.15740629846569, momentum=0.7593700987190517 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9580275964645412 ,rho=0.1568861200359466 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5630176278919596 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.15330997904823573 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3916894306030255 ,beta=0.6780576591006968].
2023-08-03 18:50:16,057 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.15740629846569, momentum=0.7593700987190517 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9580275964645412 ,rho=0.1568861200359466 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5630176278919596 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.15330997904823573 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3916894306030255 ,beta=0.6780576591006968].
2023-08-03 18:50:17,294 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8452205557541588, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0001672172307855726 ,centered=True ,beta_1=0.10875732317912634 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6627501282239616 ,initial_accumulator_value=0.14455543732627274 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9458690389070398 ,beta=0.5489581774754485].
2023-08-03 18:50:17,294 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8452205557541588, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0001672172307855726 ,centered=True ,beta_1=0.10875732317912634 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6627501282239616 ,initial_accumulator_value=0.14455543732627274 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9458690389070398 ,beta=0.5489581774754485].
2023-08-03 18:50:17,751 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0.9990488590530744 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.6629865018338095 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.38332622999260857 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.796262357266621 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7155139451580093 ,beta=0.37645302849776474].
2023-08-03 18:50:17,751 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0.9990488590530744 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.6629865018338095 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.38332622999260857 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.796262357266621 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7155139451580093 ,beta=0.37645302849776474].
2023-08-03 18:50:19,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.25534436071616784, momentum=0.6591902400627094 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7908012491948102 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.14642945456214462 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.27594809083581495 ,beta=0.7299323966596429].
2023-08-03 18:50:19,208 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.25534436071616784, momentum=0.6591902400627094 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7908012491948102 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.14642945456214462 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.27594809083581495 ,beta=0.7299323966596429].
2023-08-03 18:50:35,880 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.919777519662146, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5794903646562759 ,rho=0.8136803087754898 ,epsilon=1.4266895719009965e-05 ,centered=False ,beta_1=0.3254201439677258 ,beta_2=0.94585528382446 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6829171295867116 ,beta=0.7299323966596429].
2023-08-03 18:50:35,880 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.919777519662146, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5794903646562759 ,rho=0.8136803087754898 ,epsilon=1.4266895719009965e-05 ,centered=False ,beta_1=0.3254201439677258 ,beta_2=0.94585528382446 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6829171295867116 ,beta=0.7299323966596429].
2023-08-03 18:50:38,351 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:50:38,352 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:50:39,890 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5562510096511564, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=True ,weight_decay=0.0076623714391632555 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.5084276643898552 ,epsilon=0.0007519820683490277 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.23104268982218545 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.28598272763005017 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9450625960625579 ,beta=0.9089227079421563].
2023-08-03 18:50:39,891 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5562510096511564, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=True ,weight_decay=0.0076623714391632555 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.5084276643898552 ,epsilon=0.0007519820683490277 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.23104268982218545 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.28598272763005017 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9450625960625579 ,beta=0.9089227079421563].
2023-08-03 18:50:41,046 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:50:41,046 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:50:57,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.04766139696821803, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0006429074021958272 ,centered=False ,beta_1=0.1346791064961803 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.33366438626055084 ,initial_accumulator_value=0.8609506232807572 ,l1_regularization_strength=0.13040528461281709 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7523673446383072 ,beta=0.7299323966596429].
2023-08-03 18:50:57,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.04766139696821803, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0006429074021958272 ,centered=False ,beta_1=0.1346791064961803 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.33366438626055084 ,initial_accumulator_value=0.8609506232807572 ,l1_regularization_strength=0.13040528461281709 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7523673446383072 ,beta=0.7299323966596429].
2023-08-03 18:50:58,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:50:58,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:01,920 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9710818036158146, momentum=0.7853001223623993 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.37120797167383446 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.22395147278403693 ,beta_2=0.9762497608792838 ,learning_rate_power=-0.8617677588876513 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7406986731719293 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:01,921 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9710818036158146, momentum=0.7853001223623993 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.37120797167383446 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.22395147278403693 ,beta_2=0.9762497608792838 ,learning_rate_power=-0.8617677588876513 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7406986731719293 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:04,158 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:04,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:18,909 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:18,909 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:20,565 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:20,566 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:32,583 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4962955632843511, momentum=0.23495463658587534 ,nesterov=True ,amsgrad=True ,weight_decay=0.002236962749807272 ,use_ema=False ,ema_momentum=0.08224122496889041 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.48371527508058976 ,learning_rate_power=-0.019004426861304213 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.95772204874707 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:32,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4962955632843511, momentum=0.23495463658587534 ,nesterov=True ,amsgrad=True ,weight_decay=0.002236962749807272 ,use_ema=False ,ema_momentum=0.08224122496889041 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.48371527508058976 ,learning_rate_power=-0.019004426861304213 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.95772204874707 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:38,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:38,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:41,141 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:41,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:53,489 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:51:53,489 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:13,341 INFO: Applying selection operators for generation 11.
2023-08-03 18:52:13,341 INFO: Applying genetic operators for generation 11.
2023-08-03 18:52:13,346 INFO: Evaluating fitness for for generation 11.
2023-08-03 18:52:13,346 INFO: Will evaluate fitness for 32 individuals.
2023-08-03 18:52:13,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:13,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:13,914 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:13,914 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:13,934 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:13,935 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:13,981 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.783196137787697, momentum=0.35988091704710945 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7976757351878536 ,rho=0.29573884903473935 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6979694083697613 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9295404285644258 ,initial_accumulator_value=0.5205396220599279 ,l1_regularization_strength=0.883478441537231 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.44972236194198734 ,beta=0.7299323966596429].
2023-08-03 18:52:13,981 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.783196137787697, momentum=0.35988091704710945 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7976757351878536 ,rho=0.29573884903473935 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6979694083697613 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9295404285644258 ,initial_accumulator_value=0.5205396220599279 ,l1_regularization_strength=0.883478441537231 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.44972236194198734 ,beta=0.7299323966596429].
2023-08-03 18:52:34,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:34,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:34,440 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:34,441 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:34,541 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.21563645358358363 ,rho=0.23715581535892938 ,epsilon=5.9401253168134036e-05 ,centered=True ,beta_1=0.1626681848449527 ,beta_2=0.9355613414037182 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.933893015580645 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.39422532631092044 ,beta=0.7299323966596429].
2023-08-03 18:52:34,542 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.21563645358358363 ,rho=0.23715581535892938 ,epsilon=5.9401253168134036e-05 ,centered=True ,beta_1=0.1626681848449527 ,beta_2=0.9355613414037182 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.933893015580645 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.39422532631092044 ,beta=0.7299323966596429].
2023-08-03 18:52:36,247 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:36,247 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:54,454 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=0.007085763478114629 ,use_ema=False ,ema_momentum=0.8837620969393557 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5474472735097501 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8789742336960661 ,beta=0.11258128058133887].
2023-08-03 18:52:54,454 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=0.007085763478114629 ,use_ema=False ,ema_momentum=0.8837620969393557 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5474472735097501 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8789742336960661 ,beta=0.11258128058133887].
2023-08-03 18:52:56,014 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:56,014 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:57,521 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:57,522 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:57,747 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:52:57,748 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:17,058 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:17,059 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:18,212 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:18,212 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:19,001 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:19,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:23,672 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:23,672 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:37,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:37,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:38,899 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:38,899 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:40,754 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:40,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:44,354 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:44,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:59,553 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5612834896316385, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.9497511610290399 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9209220137556335 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.27638123909557255 ,l1_regularization_strength=0.47601621205165 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.03282226131770982].
2023-08-03 18:53:59,553 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5612834896316385, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.9497511610290399 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9209220137556335 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.27638123909557255 ,l1_regularization_strength=0.47601621205165 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.03282226131770982].
2023-08-03 18:53:59,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:53:59,745 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:54:01,403 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:54:01,403 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:54:04,495 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7582716356601359 ,rho=0.6489075230613146 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.3808054988227092 ,beta_2=0.43192210955293964 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.3357797269523357 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.26638664690815606 ,beta=0.7299323966596429].
2023-08-03 18:54:04,496 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7582716356601359 ,rho=0.6489075230613146 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.3808054988227092 ,beta_2=0.43192210955293964 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.3357797269523357 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.26638664690815606 ,beta=0.7299323966596429].
2023-08-03 18:54:20,910 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9546738178131284, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.295808537912873 ,rho=0.23715581535892938 ,epsilon=0.00032992739616601697 ,centered=False ,beta_1=0.37534283344782526 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.2676389740374442 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.36958349848863703 ,beta=0.7299323966596429].
2023-08-03 18:54:20,910 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9546738178131284, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.295808537912873 ,rho=0.23715581535892938 ,epsilon=0.00032992739616601697 ,centered=False ,beta_1=0.37534283344782526 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.2676389740374442 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.36958349848863703 ,beta=0.7299323966596429].
2023-08-03 18:54:22,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:54:22,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:54:23,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:54:23,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:54:26,493 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:54:26,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:54:39,429 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.9329821728972884 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8444505035682157 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7083957252236525 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5204685065846613 ,initial_accumulator_value=0.7110610596681388 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4337264207988536 ,beta=0.6241090306186522].
2023-08-03 18:54:39,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.9329821728972884 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8444505035682157 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7083957252236525 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5204685065846613 ,initial_accumulator_value=0.7110610596681388 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4337264207988536 ,beta=0.6241090306186522].
2023-08-03 18:54:43,403 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:54:43,404 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:54:44,222 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:54:44,222 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:54:46,632 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:54:46,633 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:06,664 INFO: Applying selection operators for generation 12.
2023-08-03 18:55:06,664 INFO: Applying genetic operators for generation 12.
2023-08-03 18:55:06,674 INFO: Evaluating fitness for for generation 12.
2023-08-03 18:55:06,674 INFO: Will evaluate fitness for 34 individuals.
2023-08-03 18:55:07,211 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:07,211 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:07,321 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8192069110891562, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8414696954328427 ,rho=0.23715581535892938 ,epsilon=0.00045061980430350095 ,centered=False ,beta_1=0.10061925543005823 ,beta_2=0.7124293024127827 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.3143657336864901 ,l1_regularization_strength=0.33105796517887176 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:07,321 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8192069110891562, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8414696954328427 ,rho=0.23715581535892938 ,epsilon=0.00045061980430350095 ,centered=False ,beta_1=0.10061925543005823 ,beta_2=0.7124293024127827 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.3143657336864901 ,l1_regularization_strength=0.33105796517887176 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:07,385 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.9916971952988666 ,epsilon=0.0003750940208546023 ,centered=False ,beta_1=0.704014875709983 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.15860274944157404 ,initial_accumulator_value=0.8886122050673096 ,l1_regularization_strength=0.0051221012372004715 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4125354338372109 ,beta=0.7299323966596429].
2023-08-03 18:55:07,385 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.9916971952988666 ,epsilon=0.0003750940208546023 ,centered=False ,beta_1=0.704014875709983 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.15860274944157404 ,initial_accumulator_value=0.8886122050673096 ,l1_regularization_strength=0.0051221012372004715 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4125354338372109 ,beta=0.7299323966596429].
2023-08-03 18:55:07,393 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:07,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:27,181 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0010799681414881458 ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.4126261630172652 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9862517378590597 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6890403953603784 ,beta=0.14137812517869452].
2023-08-03 18:55:27,182 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0010799681414881458 ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.4126261630172652 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9862517378590597 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6890403953603784 ,beta=0.14137812517869452].
2023-08-03 18:55:27,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:27,882 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:30,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:30,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:30,459 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:30,460 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:49,117 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:49,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:49,514 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:49,514 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:51,242 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.1744211015990077 ,rho=0.14415330483314737 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.49231035282548585 ,initial_accumulator_value=0.23612417088570103 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6256470822823805 ,beta=0.3440811280865048].
2023-08-03 18:55:51,242 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.1744211015990077 ,rho=0.14415330483314737 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.49231035282548585 ,initial_accumulator_value=0.23612417088570103 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6256470822823805 ,beta=0.3440811280865048].
2023-08-03 18:55:51,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:55:51,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:56:09,785 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6003774147909338, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004107794359327069 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0002393690366999939 ,centered=False ,beta_1=0.73426982340552 ,beta_2=0.6074935940328051 ,learning_rate_power=-0.7592015354423132 ,initial_accumulator_value=0.5781689976933185 ,l1_regularization_strength=0.3149420856797783 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8424895881867308 ,beta=0.8834969709670251].
2023-08-03 18:56:09,785 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6003774147909338, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004107794359327069 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0002393690366999939 ,centered=False ,beta_1=0.73426982340552 ,beta_2=0.6074935940328051 ,learning_rate_power=-0.7592015354423132 ,initial_accumulator_value=0.5781689976933185 ,l1_regularization_strength=0.3149420856797783 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8424895881867308 ,beta=0.8834969709670251].
2023-08-03 18:56:10,145 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:56:10,145 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:56:12,063 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:56:12,064 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:56:13,858 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.080609088413512 ,rho=0.23715581535892938 ,epsilon=0.0002984122225413071 ,centered=False ,beta_1=0.5556297301214762 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.47248570750329455 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.061476113208902006 ,beta=0.7299323966596429].
2023-08-03 18:56:13,858 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.080609088413512 ,rho=0.23715581535892938 ,epsilon=0.0002984122225413071 ,centered=False ,beta_1=0.5556297301214762 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.47248570750329455 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.061476113208902006 ,beta=0.7299323966596429].
2023-08-03 18:56:30,218 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:56:30,218 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:56:32,713 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:56:32,713 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:56:33,608 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.42753875679083386, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.41082483554106786 ,rho=0.783997053421095 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8557249593204757 ,beta=0.7299323966596429].
2023-08-03 18:56:33,608 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.42753875679083386, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.41082483554106786 ,rho=0.783997053421095 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8557249593204757 ,beta=0.7299323966596429].
2023-08-03 18:56:37,955 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:56:37,955 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:56:50,285 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.023314437173210023, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8935833431595825 ,rho=0.9837161886880954 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.3600781988162287 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6698148087872073 ,beta=0.7299323966596429].
2023-08-03 18:56:50,285 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.023314437173210023, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8935833431595825 ,rho=0.9837161886880954 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.3600781988162287 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6698148087872073 ,beta=0.7299323966596429].
2023-08-03 18:56:54,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4227847672408195, momentum=0.3257677516301595 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.5439870743414941 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5804431495949934 ,learning_rate_power=-0.7421504302169806 ,initial_accumulator_value=0.012194232049618448 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.21922238492244006 ,beta=0.7299323966596429].
2023-08-03 18:56:54,208 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4227847672408195, momentum=0.3257677516301595 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.5439870743414941 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5804431495949934 ,learning_rate_power=-0.7421504302169806 ,initial_accumulator_value=0.012194232049618448 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.21922238492244006 ,beta=0.7299323966596429].
2023-08-03 18:56:57,309 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2325961651598012, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0002779814604760929 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.14931000665629435 ,epsilon=0.00035776375258542745 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.54564467358763 ,beta=0.7299323966596429].
2023-08-03 18:56:57,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2325961651598012, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0002779814604760929 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.14931000665629435 ,epsilon=0.00035776375258542745 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.54564467358763 ,beta=0.7299323966596429].
2023-08-03 18:56:59,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:56:59,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:57:12,854 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8949072370140442, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.20798788017473535 ,epsilon=7.820257523136429e-05 ,centered=False ,beta_1=0.5695857112961559 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.6041692188485903 ,l1_regularization_strength=0.7071910441124482 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9977857188459544 ,beta=0.7299323966596429].
2023-08-03 18:57:12,854 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8949072370140442, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.20798788017473535 ,epsilon=7.820257523136429e-05 ,centered=False ,beta_1=0.5695857112961559 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.6041692188485903 ,l1_regularization_strength=0.7071910441124482 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9977857188459544 ,beta=0.7299323966596429].
2023-08-03 18:57:16,913 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:57:16,913 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:57:20,105 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:57:20,105 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:57:21,189 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.7969810172483965 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.19653592024654598 ,l1_regularization_strength=0.7439125008942914 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7709231550861113 ,beta=0.9971934062231782].
2023-08-03 18:57:21,189 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.7969810172483965 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.19653592024654598 ,l1_regularization_strength=0.7439125008942914 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7709231550861113 ,beta=0.9971934062231782].
2023-08-03 18:57:36,123 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:57:36,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:57:37,490 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:57:37,491 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:57:40,691 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.6246398250776307 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.31351843243991495 ,rho=0.23715581535892938 ,epsilon=0.0005786707230471011 ,centered=True ,beta_1=0.4425913664250577 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3656103952807763 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.540733471752931 ,beta=0.21416703264118941].
2023-08-03 18:57:40,692 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.6246398250776307 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.31351843243991495 ,rho=0.23715581535892938 ,epsilon=0.0005786707230471011 ,centered=True ,beta_1=0.4425913664250577 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3656103952807763 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.540733471752931 ,beta=0.21416703264118941].
2023-08-03 18:57:56,269 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.258221936664097, momentum=0.1544559435518157 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.601083273089266 ,rho=0.8322270521026406 ,epsilon=0.0008371585944822955 ,centered=True ,beta_1=0.88520079438346 ,beta_2=0.4436341296282733 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9670696132013925 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.2267467744099474].
2023-08-03 18:57:56,269 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.258221936664097, momentum=0.1544559435518157 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.601083273089266 ,rho=0.8322270521026406 ,epsilon=0.0008371585944822955 ,centered=True ,beta_1=0.88520079438346 ,beta_2=0.4436341296282733 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9670696132013925 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.2267467744099474].
2023-08-03 18:57:58,618 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:57:58,618 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:58:05,195 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.5204365218978119 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.00033476188553703697 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.6315102442325442 ,learning_rate_power=-0.6286319782115428 ,initial_accumulator_value=0.2178127516747288 ,l1_regularization_strength=0.3180564728256028 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:58:05,196 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.5204365218978119 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.00033476188553703697 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.6315102442325442 ,learning_rate_power=-0.6286319782115428 ,initial_accumulator_value=0.2178127516747288 ,l1_regularization_strength=0.3180564728256028 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:58:35,379 INFO: Applying selection operators for generation 13.
2023-08-03 18:58:35,379 INFO: Applying genetic operators for generation 13.
2023-08-03 18:58:35,385 INFO: Evaluating fitness for for generation 13.
2023-08-03 18:58:35,385 INFO: Will evaluate fitness for 30 individuals.
2023-08-03 18:58:35,935 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.3943803971081533, momentum=0.027626010349201202 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6057674405878 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5393259686050872 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.42336955177728175 ,beta=0.7299323966596429].
2023-08-03 18:58:35,935 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.3943803971081533, momentum=0.027626010349201202 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6057674405878 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5393259686050872 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.42336955177728175 ,beta=0.7299323966596429].
2023-08-03 18:58:36,092 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:58:36,092 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:58:36,098 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.34349006161819406, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9337802190223686 ,rho=0.47311199873204257 ,epsilon=0.00019186266332832518 ,centered=True ,beta_1=0.17039767678358186 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9071735977968977 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8231587434377214 ,beta=0.7299323966596429].
2023-08-03 18:58:36,098 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.34349006161819406, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9337802190223686 ,rho=0.47311199873204257 ,epsilon=0.00019186266332832518 ,centered=True ,beta_1=0.17039767678358186 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9071735977968977 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8231587434377214 ,beta=0.7299323966596429].
2023-08-03 18:58:36,113 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:58:36,113 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:58:56,617 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:58:56,617 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:58:56,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12694311569473682 ,rho=0.23715581535892938 ,epsilon=0.0007452035914333557 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.27947414250236746 ,l1_regularization_strength=0.8000548814356219 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9847112215111645 ,beta=0.7299323966596429].
2023-08-03 18:58:56,659 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12694311569473682 ,rho=0.23715581535892938 ,epsilon=0.0007452035914333557 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.27947414250236746 ,l1_regularization_strength=0.8000548814356219 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9847112215111645 ,beta=0.7299323966596429].
2023-08-03 18:58:57,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:58:57,560 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:58:58,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.5228707417180884 ,epsilon=0.0007154449369185434 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8192709244884023 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3274012666733521 ,beta=0.7299323966596429].
2023-08-03 18:58:58,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.5228707417180884 ,epsilon=0.0007154449369185434 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8192709244884023 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3274012666733521 ,beta=0.7299323966596429].
2023-08-03 18:59:17,811 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:17,811 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:18,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:18,861 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:20,587 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:20,587 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:20,725 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:20,725 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:38,436 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:38,437 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:39,685 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:39,685 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:40,632 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.23594213829648059, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3896066573187549 ,rho=0.46357675994585257 ,epsilon=8.686028054072661e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.7880606048312052 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.5582460320816587 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7887675865133166 ,beta=0.9874153296738893].
2023-08-03 18:59:40,632 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.23594213829648059, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3896066573187549 ,rho=0.46357675994585257 ,epsilon=8.686028054072661e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.7880606048312052 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.5582460320816587 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7887675865133166 ,beta=0.9874153296738893].
2023-08-03 18:59:41,420 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:41,420 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:58,840 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 18:59:58,840 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:00:00,279 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9100739606226091, momentum=0.13297341695079568 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.040681022574463266 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.3620612623441458 ,l1_regularization_strength=0.39870254137287586 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9744772986634707 ,beta=0.6763510716717226].
2023-08-03 19:00:00,280 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9100739606226091, momentum=0.13297341695079568 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.040681022574463266 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.3620612623441458 ,l1_regularization_strength=0.39870254137287586 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9744772986634707 ,beta=0.6763510716717226].
2023-08-03 19:00:02,053 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:00:02,053 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:00:03,866 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:00:03,869 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:00:20,073 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4902659706765956 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7640338299779184 ,learning_rate_power=-0.5601569142254391 ,initial_accumulator_value=0.01973265078522113 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.270683868527237 ,beta=0.7780577114374169].
2023-08-03 19:00:20,074 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4902659706765956 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7640338299779184 ,learning_rate_power=-0.5601569142254391 ,initial_accumulator_value=0.01973265078522113 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.270683868527237 ,beta=0.7780577114374169].
2023-08-03 19:00:23,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.3918859028053343 ,nesterov=True ,amsgrad=False ,weight_decay=0.001298117933692045 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.00046593379246748895 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.16332705755376198 ,learning_rate_power=-0.30393151809892527 ,initial_accumulator_value=0.2201953476398807 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.13842902312106753 ,beta=0.6732363354207402].
2023-08-03 19:00:23,404 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.3918859028053343 ,nesterov=True ,amsgrad=False ,weight_decay=0.001298117933692045 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.00046593379246748895 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.16332705755376198 ,learning_rate_power=-0.30393151809892527 ,initial_accumulator_value=0.2201953476398807 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.13842902312106753 ,beta=0.6732363354207402].
2023-08-03 19:00:23,414 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:00:23,415 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:00:24,092 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:00:24,092 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:00:43,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:00:43,954 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:00:44,098 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:00:44,099 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:00:44,166 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:00:44,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:04,117 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:04,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:04,436 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:04,436 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:04,516 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:04,516 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:25,040 INFO: Applying selection operators for generation 14.
2023-08-03 19:01:25,041 INFO: Applying genetic operators for generation 14.
2023-08-03 19:01:25,047 INFO: Evaluating fitness for for generation 14.
2023-08-03 19:01:25,047 INFO: Will evaluate fitness for 29 individuals.
2023-08-03 19:01:25,566 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:25,566 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:25,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:25,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:25,764 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:25,764 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:25,769 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:25,770 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:45,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:45,612 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:46,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:46,094 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:46,191 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:46,191 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:46,226 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:01:46,226 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:02:05,556 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.026662112747166566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8979225546777576 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7606278729264263 ,learning_rate_power=-0.03334201430749972 ,initial_accumulator_value=0.16147629153269127 ,l1_regularization_strength=0.38818913076506145 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.37507110820983913].
2023-08-03 19:02:05,556 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.026662112747166566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8979225546777576 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7606278729264263 ,learning_rate_power=-0.03334201430749972 ,initial_accumulator_value=0.16147629153269127 ,l1_regularization_strength=0.38818913076506145 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.37507110820983913].
2023-08-03 19:02:06,313 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.505621898830118 ,rho=0.44143446349293924 ,epsilon=0.0002717742643319891 ,centered=False ,beta_1=0.05524812568317572 ,beta_2=0.1057692055802153 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:02:06,313 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.505621898830118 ,rho=0.44143446349293924 ,epsilon=0.0002717742643319891 ,centered=False ,beta_1=0.05524812568317572 ,beta_2=0.1057692055802153 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:02:06,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:02:06,421 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:02:06,490 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:02:06,490 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:02:26,054 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.620516019610248, momentum=0.13099393190439457 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04900527320764059 ,rho=0.670481991536649 ,epsilon=0.000275188301898957 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.800531917949474 ,beta=0.7299323966596429].
2023-08-03 19:02:26,055 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.620516019610248, momentum=0.13099393190439457 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04900527320764059 ,rho=0.670481991536649 ,epsilon=0.000275188301898957 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.800531917949474 ,beta=0.7299323966596429].
2023-08-03 19:02:26,769 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:02:26,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:02:27,754 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:02:27,755 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:02:29,942 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5088554048732272, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7519835853932443 ,rho=0.23715581535892938 ,epsilon=5.152913633923573e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.4920654904444285 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.42531705911117557 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6186581311343747 ,beta=0.7299323966596429].
2023-08-03 19:02:29,943 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5088554048732272, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7519835853932443 ,rho=0.23715581535892938 ,epsilon=5.152913633923573e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.4920654904444285 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.42531705911117557 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6186581311343747 ,beta=0.7299323966596429].
2023-08-03 19:02:47,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.050810580986712095, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.00410994423422259 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.5718492046149838 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9406933496549703 ,learning_rate_power=-0.9456030516659643 ,initial_accumulator_value=0.8864979469846109 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9964337180584876 ,beta=0.6237073697243155].
2023-08-03 19:02:47,692 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.050810580986712095, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.00410994423422259 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.5718492046149838 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9406933496549703 ,learning_rate_power=-0.9456030516659643 ,initial_accumulator_value=0.8864979469846109 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9964337180584876 ,beta=0.6237073697243155].
2023-08-03 19:02:48,468 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:02:48,468 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:02:48,934 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.02278235311178811, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=0.006543647360607024 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=5.64140967682472e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.558930283891675 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8134654155915387 ,l1_regularization_strength=0.4058665624027723 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5612097701238173 ,beta=0.7299323966596429].
2023-08-03 19:02:48,934 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.02278235311178811, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=0.006543647360607024 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=5.64140967682472e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.558930283891675 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8134654155915387 ,l1_regularization_strength=0.4058665624027723 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5612097701238173 ,beta=0.7299323966596429].
2023-08-03 19:02:53,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:02:53,080 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:03:08,946 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.4587839595599227 ,epsilon=0.00041457165132821995 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.6753956012480663 ,learning_rate_power=-0.7115831835502779 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.47651942078426124 ,beta=0.7299323966596429].
2023-08-03 19:03:08,946 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.4587839595599227 ,epsilon=0.00041457165132821995 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.6753956012480663 ,learning_rate_power=-0.7115831835502779 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.47651942078426124 ,beta=0.7299323966596429].
2023-08-03 19:03:11,297 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:03:11,297 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:03:12,132 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.295530350668603 ,rho=0.23715581535892938 ,epsilon=0.0004219717075854789 ,centered=False ,beta_1=0.996516861555745 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.41331683669430264 ,initial_accumulator_value=0.5610409745480609 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8262339232808454 ,beta=0.7299323966596429].
2023-08-03 19:03:12,133 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.295530350668603 ,rho=0.23715581535892938 ,epsilon=0.0004219717075854789 ,centered=False ,beta_1=0.996516861555745 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.41331683669430264 ,initial_accumulator_value=0.5610409745480609 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8262339232808454 ,beta=0.7299323966596429].
2023-08-03 19:03:13,488 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:03:13,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:03:31,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0003374009095842377 ,centered=False ,beta_1=0.8567359645887829 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.547377270767725 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.625270427782729 ,beta=0.7299323966596429].
2023-08-03 19:03:31,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0003374009095842377 ,centered=False ,beta_1=0.8567359645887829 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.547377270767725 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.625270427782729 ,beta=0.7299323966596429].
2023-08-03 19:03:34,359 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.4547810298503454 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.9492017396090172 ,epsilon=0.00022178926030756192 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.27748272956683473 ,l1_regularization_strength=0.34731246996361675 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.885704924692922 ,beta=0.7299323966596429].
2023-08-03 19:03:34,359 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.4547810298503454 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.9492017396090172 ,epsilon=0.00022178926030756192 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.27748272956683473 ,l1_regularization_strength=0.34731246996361675 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.885704924692922 ,beta=0.7299323966596429].
2023-08-03 19:03:34,472 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:03:34,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:03:55,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:03:55,473 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:03:57,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:03:57,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:16,907 INFO: Applying selection operators for generation 15.
2023-08-03 19:04:16,907 INFO: Applying genetic operators for generation 15.
2023-08-03 19:04:16,913 INFO: Evaluating fitness for for generation 15.
2023-08-03 19:04:16,913 INFO: Will evaluate fitness for 28 individuals.
2023-08-03 19:04:17,481 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7660608525513019, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=0.0008266167808676731 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.04134511721850387 ,epsilon=0.000585002847778427 ,centered=True ,beta_1=0.35853815350610463 ,beta_2=0.4776204695377021 ,learning_rate_power=-0.1253545735134739 ,initial_accumulator_value=0.6090539761883859 ,l1_regularization_strength=0.09794093908789336 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6268062584225074 ,beta=0.2715154088280527].
2023-08-03 19:04:17,481 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7660608525513019, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=0.0008266167808676731 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.04134511721850387 ,epsilon=0.000585002847778427 ,centered=True ,beta_1=0.35853815350610463 ,beta_2=0.4776204695377021 ,learning_rate_power=-0.1253545735134739 ,initial_accumulator_value=0.6090539761883859 ,l1_regularization_strength=0.09794093908789336 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6268062584225074 ,beta=0.2715154088280527].
2023-08-03 19:04:17,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:17,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:17,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:17,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:17,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:17,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:37,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:37,728 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:37,891 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:37,891 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:38,151 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.04280139898451363, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0008820516669498337 ,centered=False ,beta_1=0.9077418412349069 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.30694718557728184 ,initial_accumulator_value=0.6631281045249205 ,l1_regularization_strength=0.6081011861420829 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.31032935712218324 ,beta=0.7299323966596429].
2023-08-03 19:04:38,151 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.04280139898451363, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0008820516669498337 ,centered=False ,beta_1=0.9077418412349069 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.30694718557728184 ,initial_accumulator_value=0.6631281045249205 ,l1_regularization_strength=0.6081011861420829 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.31032935712218324 ,beta=0.7299323966596429].
2023-08-03 19:04:40,694 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:40,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:58,004 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:58,004 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:58,686 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:04:58,686 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:01,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:01,214 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:01,405 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:01,405 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:18,986 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0034785203888361674 ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.2872451863265404 ,epsilon=0.0007442565803255094 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.00939835986686166 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.12956440063868468 ,l1_regularization_strength=0.35429077580323454 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.19892647462972923 ,beta=0.418928390873046].
2023-08-03 19:05:18,986 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0034785203888361674 ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.2872451863265404 ,epsilon=0.0007442565803255094 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.00939835986686166 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.12956440063868468 ,l1_regularization_strength=0.35429077580323454 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.19892647462972923 ,beta=0.418928390873046].
2023-08-03 19:05:19,127 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:19,128 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:21,571 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7352170705850971 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.1125121181719394 ,epsilon=0.0001364556690146114 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.031181236202793672 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7677169319035604 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:21,571 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7352170705850971 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.1125121181719394 ,epsilon=0.0001364556690146114 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.031181236202793672 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7677169319035604 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:21,603 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.6774495362924049 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8372347056251732 ,rho=0.9477205214278847 ,epsilon=0.0008072214890466221 ,centered=False ,beta_1=0.32866322220388344 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9838302852322498 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6022301679250225 ,beta=0.7699150742285095].
2023-08-03 19:05:21,603 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.6774495362924049 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8372347056251732 ,rho=0.9477205214278847 ,epsilon=0.0008072214890466221 ,centered=False ,beta_1=0.32866322220388344 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9838302852322498 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6022301679250225 ,beta=0.7699150742285095].
2023-08-03 19:05:39,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:39,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:42,590 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:42,590 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:44,549 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7908224337414631 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5649586724605092 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.39341550716668905 ,beta=0.7299323966596429].
2023-08-03 19:05:44,549 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7908224337414631 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5649586724605092 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.39341550716668905 ,beta=0.7299323966596429].
2023-08-03 19:05:46,571 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:46,571 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:59,991 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:05:59,991 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:06:03,069 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:06:03,069 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:06:05,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:06:05,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:06:07,155 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:06:07,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:06:21,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:06:21,240 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:06:24,104 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.893528861380375 ,rho=0.8094130777566323 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5558965661686489 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.44818997131341765 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.057395433321911105 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.22107621926958032 ,beta=0.848569326768565].
2023-08-03 19:06:24,104 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.893528861380375 ,rho=0.8094130777566323 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5558965661686489 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.44818997131341765 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.057395433321911105 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.22107621926958032 ,beta=0.848569326768565].
2023-08-03 19:06:41,778 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6602771086125876 ,rho=0.23715581535892938 ,epsilon=0.00046849165830314027 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.19577751657268716 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7982893844076641 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7219045397306038 ,beta=0.04261736295581109].
2023-08-03 19:06:41,778 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6602771086125876 ,rho=0.23715581535892938 ,epsilon=0.00046849165830314027 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.19577751657268716 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7982893844076641 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7219045397306038 ,beta=0.04261736295581109].
2023-08-03 19:06:43,161 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:06:43,161 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:04,292 INFO: Applying selection operators for generation 16.
2023-08-03 19:07:04,293 INFO: Applying genetic operators for generation 16.
2023-08-03 19:07:04,298 INFO: Evaluating fitness for for generation 16.
2023-08-03 19:07:04,298 INFO: Will evaluate fitness for 32 individuals.
2023-08-03 19:07:04,919 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:04,919 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:04,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:04,929 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:04,940 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:04,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:04,942 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:04,943 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:25,002 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.5504439671463102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6007600106370667 ,rho=0.5951133355936628 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1016693348124813 ,beta_2=0.9846261701422967 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.2878804120544495 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:25,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.5504439671463102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6007600106370667 ,rho=0.5951133355936628 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1016693348124813 ,beta_2=0.9846261701422967 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.2878804120544495 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:25,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:25,239 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:25,310 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:25,310 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:25,855 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:25,856 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:46,064 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.3424951717775504 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.152168395153362 ,learning_rate_power=-0.847980628759717 ,initial_accumulator_value=0.4082537341917928 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4916581695583824 ,beta=0.7299323966596429].
2023-08-03 19:07:46,064 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.3424951717775504 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.152168395153362 ,learning_rate_power=-0.847980628759717 ,initial_accumulator_value=0.4082537341917928 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4916581695583824 ,beta=0.7299323966596429].
2023-08-03 19:07:46,112 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:46,113 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:46,304 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:07:46,304 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:07:48,571 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:07:48,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:06,382 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:06,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:08,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:08,970 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:09,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:09,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:10,018 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:10,018 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:26,854 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.23818451513715722, momentum=0.22328424772384237 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.4849378372248768 ,epsilon=0.0006216188550193642 ,centered=True ,beta_1=0.6146744980138058 ,beta_2=0.24856264898925584 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6461506083226076 ,beta=0.7299323966596429].
2023-08-03 19:08:26,854 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.23818451513715722, momentum=0.22328424772384237 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.4849378372248768 ,epsilon=0.0006216188550193642 ,centered=True ,beta_1=0.6146744980138058 ,beta_2=0.24856264898925584 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6461506083226076 ,beta=0.7299323966596429].
2023-08-03 19:08:29,136 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.009400492742253148 ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.9158765788035188 ,epsilon=0.00028662749076151863 ,centered=True ,beta_1=0.8638374898786376 ,beta_2=0.03182728563652237 ,learning_rate_power=-0.06852893100447688 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8600299152110146 ,beta=0.14929307081454257].
2023-08-03 19:08:29,136 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.009400492742253148 ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.9158765788035188 ,epsilon=0.00028662749076151863 ,centered=True ,beta_1=0.8638374898786376 ,beta_2=0.03182728563652237 ,learning_rate_power=-0.06852893100447688 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8600299152110146 ,beta=0.14929307081454257].
2023-08-03 19:08:30,089 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:30,089 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:30,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:30,569 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:51,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:51,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:51,900 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:51,900 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:08:51,904 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12364340079272862, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.27603909480334476 ,rho=0.9125167735299321 ,epsilon=0.00018214407453255599 ,centered=False ,beta_1=0.06727454342332972 ,beta_2=0.1837708455380933 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.1563859830910156 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.47301547980553516 ,beta=0.7299323966596429].
2023-08-03 19:08:51,904 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12364340079272862, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.27603909480334476 ,rho=0.9125167735299321 ,epsilon=0.00018214407453255599 ,centered=False ,beta_1=0.06727454342332972 ,beta_2=0.1837708455380933 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.1563859830910156 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.47301547980553516 ,beta=0.7299323966596429].
2023-08-03 19:08:58,873 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.0009343691432764582 ,use_ema=True ,ema_momentum=0.5517458109265133 ,rho=0.36260947356698947 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6788114035873923 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5813465010729527 ,beta=0.4951888883519612].
2023-08-03 19:08:58,874 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.0009343691432764582 ,use_ema=True ,ema_momentum=0.5517458109265133 ,rho=0.36260947356698947 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6788114035873923 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5813465010729527 ,beta=0.4951888883519612].
2023-08-03 19:09:11,594 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6266591430653683, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.3345446581679459 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.9765795696511269 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3874265876627978 ,beta=0.7299323966596429].
2023-08-03 19:09:11,595 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6266591430653683, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.3345446581679459 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.9765795696511269 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3874265876627978 ,beta=0.7299323966596429].
2023-08-03 19:09:12,495 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:09:12,495 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:09:15,853 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:09:15,853 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:09:19,130 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:09:19,130 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:09:31,953 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:09:31,953 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:09:33,068 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:09:33,068 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:09:36,084 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:09:36,084 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:09:39,610 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:09:39,610 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:09:59,824 INFO: Applying selection operators for generation 17.
2023-08-03 19:09:59,824 INFO: Applying genetic operators for generation 17.
2023-08-03 19:09:59,833 INFO: Evaluating fitness for for generation 17.
2023-08-03 19:09:59,833 INFO: Will evaluate fitness for 29 individuals.
2023-08-03 19:10:00,401 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8753042719074945, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.679426465234774 ,epsilon=0.0005157906246128007 ,centered=True ,beta_1=0.8738419562047826 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.32659359352669504 ,initial_accumulator_value=0.35486422438013854 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.36733779630770536 ,beta=0.7299323966596429].
2023-08-03 19:10:00,401 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8753042719074945, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.679426465234774 ,epsilon=0.0005157906246128007 ,centered=True ,beta_1=0.8738419562047826 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.32659359352669504 ,initial_accumulator_value=0.35486422438013854 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.36733779630770536 ,beta=0.7299323966596429].
2023-08-03 19:10:00,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:10:00,421 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:10:00,427 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6021607667918152, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8623665389487806 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7178169006558627 ,beta_2=0.605268968396046 ,learning_rate_power=-0.3655802465156035 ,initial_accumulator_value=0.9027394900594832 ,l1_regularization_strength=0.6950035160329319 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.040192531090395556 ,beta=0.7299323966596429].
2023-08-03 19:10:00,427 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6021607667918152, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8623665389487806 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7178169006558627 ,beta_2=0.605268968396046 ,learning_rate_power=-0.3655802465156035 ,initial_accumulator_value=0.9027394900594832 ,l1_regularization_strength=0.6950035160329319 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.040192531090395556 ,beta=0.7299323966596429].
2023-08-03 19:10:00,429 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:10:00,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:10:20,878 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.4372579101403945, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.0020526044909148053 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.00013617243020106165 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.6991590786005668 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.30319409146874166 ,l1_regularization_strength=0.3618880292018197 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.11244284780860536 ,beta=0.9531620000694905].
2023-08-03 19:10:20,878 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.4372579101403945, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.0020526044909148053 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.00013617243020106165 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.6991590786005668 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.30319409146874166 ,l1_regularization_strength=0.3618880292018197 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.11244284780860536 ,beta=0.9531620000694905].
2023-08-03 19:10:21,069 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:10:21,069 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:10:24,042 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:10:24,042 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:10:24,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3765345223819613, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.007886461142077672 ,use_ema=True ,ema_momentum=0.2543126733150398 ,rho=0.8141112781608844 ,epsilon=0.0007247277178874908 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1548646509778273 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.29290858378831275 ,beta=0.867670261105696].
2023-08-03 19:10:24,154 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3765345223819613, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=0.007886461142077672 ,use_ema=True ,ema_momentum=0.2543126733150398 ,rho=0.8141112781608844 ,epsilon=0.0007247277178874908 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1548646509778273 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.29290858378831275 ,beta=0.867670261105696].
2023-08-03 19:10:41,512 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:10:41,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:10:44,609 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:10:44,609 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:10:44,748 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2976017853330458 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.11560621049027553 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.2132708416667829 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:10:44,748 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2976017853330458 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.11560621049027553 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.2132708416667829 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:10:47,985 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:10:47,986 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:11:02,033 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.18762202201064748, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4462707545040161 ,rho=0.951487767602064 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.3361438128414974 ,beta_2=0.35856228960615266 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.7388212599770935 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7370839711395327 ,beta=0.7299323966596429].
2023-08-03 19:11:02,033 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.18762202201064748, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4462707545040161 ,rho=0.951487767602064 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.3361438128414974 ,beta_2=0.35856228960615266 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.7388212599770935 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7370839711395327 ,beta=0.7299323966596429].
2023-08-03 19:11:05,349 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9497763041451776, momentum=0.028553095709264342 ,nesterov=True ,amsgrad=False ,weight_decay=0.009996840796329681 ,use_ema=False ,ema_momentum=0.9761552379740616 ,rho=0.2812925903556919 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.6353969642050991 ,learning_rate_power=-0.6389950775256301 ,initial_accumulator_value=0.45678014795092126 ,l1_regularization_strength=0.6152391649343046 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.11733984717253232 ,beta=0.7299323966596429].
2023-08-03 19:11:05,350 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9497763041451776, momentum=0.028553095709264342 ,nesterov=True ,amsgrad=False ,weight_decay=0.009996840796329681 ,use_ema=False ,ema_momentum=0.9761552379740616 ,rho=0.2812925903556919 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.6353969642050991 ,learning_rate_power=-0.6389950775256301 ,initial_accumulator_value=0.45678014795092126 ,l1_regularization_strength=0.6152391649343046 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.11733984717253232 ,beta=0.7299323966596429].
2023-08-03 19:11:05,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:11:05,428 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:11:08,107 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:11:08,107 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:11:25,781 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:11:25,781 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:11:26,762 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.749833969750659 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.02447892093771098 ,learning_rate_power=-0.9150462331592449 ,initial_accumulator_value=0.6178797407477467 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7200757936265737 ,beta=0.9844117646458841].
2023-08-03 19:11:26,762 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.749833969750659 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.02447892093771098 ,learning_rate_power=-0.9150462331592449 ,initial_accumulator_value=0.6178797407477467 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7200757936265737 ,beta=0.9844117646458841].
2023-08-03 19:11:28,171 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7266756614509887, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.928309034094637 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.496263691197218 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7927852589965192 ,beta=0.9709684535531333].
2023-08-03 19:11:28,172 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7266756614509887, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.928309034094637 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.496263691197218 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7927852589965192 ,beta=0.9709684535531333].
2023-08-03 19:11:29,168 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.45067539116972366, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0006112956882958435 ,centered=False ,beta_1=0.2510366810519874 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6472139564203058 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.04191213962997509 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8002231288509208 ,beta=0.7299323966596429].
2023-08-03 19:11:29,168 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.45067539116972366, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0006112956882958435 ,centered=False ,beta_1=0.2510366810519874 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6472139564203058 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.04191213962997509 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8002231288509208 ,beta=0.7299323966596429].
2023-08-03 19:11:46,124 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:11:46,124 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:11:51,782 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:11:51,782 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:11:52,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:11:52,861 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:11:58,447 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5740881127422892, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.2910445244762052 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.18265217116561772 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8971050170779593 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8171225355473749 ,beta=0.736658412153225].
2023-08-03 19:11:58,448 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5740881127422892, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.2910445244762052 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.18265217116561772 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8971050170779593 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8171225355473749 ,beta=0.736658412153225].
2023-08-03 19:12:09,564 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.4138461314502504 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.00021444204417597426 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.49792185631337815 ,learning_rate_power=-0.6727508312794505 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6295695119033484 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.3626676719974776].
2023-08-03 19:12:09,564 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.4138461314502504 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.00021444204417597426 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.49792185631337815 ,learning_rate_power=-0.6727508312794505 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6295695119033484 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.3626676719974776].
2023-08-03 19:12:11,996 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.662839779812908 ,epsilon=0.0008271713363153002 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9115910220432364 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8627106678033196 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7206415569778025 ,beta=0.7299323966596429].
2023-08-03 19:12:11,996 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.662839779812908 ,epsilon=0.0008271713363153002 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9115910220432364 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.8627106678033196 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7206415569778025 ,beta=0.7299323966596429].
2023-08-03 19:12:13,291 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:12:13,292 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:12:33,178 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:12:33,178 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:12:33,540 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:12:33,540 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:12:53,329 INFO: Applying selection operators for generation 18.
2023-08-03 19:12:53,330 INFO: Applying genetic operators for generation 18.
2023-08-03 19:12:53,335 INFO: Evaluating fitness for for generation 18.
2023-08-03 19:12:53,336 INFO: Will evaluate fitness for 26 individuals.
2023-08-03 19:12:53,921 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.48870431566921, momentum=0.5385727675690621 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0001978993445076601 ,centered=False ,beta_1=0.05122283988385956 ,beta_2=0.3750060668371963 ,learning_rate_power=-0.6331415458794996 ,initial_accumulator_value=0.899575867237343 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6209703769619915 ,beta=0.7299323966596429].
2023-08-03 19:12:53,921 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.48870431566921, momentum=0.5385727675690621 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0001978993445076601 ,centered=False ,beta_1=0.05122283988385956 ,beta_2=0.3750060668371963 ,learning_rate_power=-0.6331415458794996 ,initial_accumulator_value=0.899575867237343 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6209703769619915 ,beta=0.7299323966596429].
2023-08-03 19:12:53,941 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:12:53,941 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:12:53,943 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:12:53,943 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:12:53,944 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:12:53,944 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:13:14,236 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:13:14,236 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:13:14,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008934869933082446 ,use_ema=False ,ema_momentum=0.04707174606989861 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6495447932858056 ,beta_2=0.05674616147056244 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.891745985375845 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.059374888438591955].
2023-08-03 19:13:14,502 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008934869933082446 ,use_ema=False ,ema_momentum=0.04707174606989861 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6495447932858056 ,beta_2=0.05674616147056244 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.891745985375845 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.059374888438591955].
2023-08-03 19:13:18,371 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:13:18,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:13:25,792 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.532378841602317, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0008840928781710221 ,centered=False ,beta_1=0.20295671175049956 ,beta_2=0.9385432572670396 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.44961298176928044 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9251727233751768 ,beta=0.7299323966596429].
2023-08-03 19:13:25,792 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.532378841602317, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0008840928781710221 ,centered=False ,beta_1=0.20295671175049956 ,beta_2=0.9385432572670396 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.44961298176928044 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9251727233751768 ,beta=0.7299323966596429].
2023-08-03 19:13:34,763 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:13:34,763 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:13:35,216 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:13:35,216 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:13:38,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4526953312449369, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0008476423070502322 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0009636277854224266 ,centered=False ,beta_1=0.6557477803877749 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9604184693767954 ,beta=0.22628872264910282].
2023-08-03 19:13:38,930 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4526953312449369, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0008476423070502322 ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=0.0009636277854224266 ,centered=False ,beta_1=0.6557477803877749 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9604184693767954 ,beta=0.22628872264910282].
2023-08-03 19:13:44,196 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.012435841462796193, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.28856447810331765 ,rho=0.8513237514798274 ,epsilon=2.1740181900024643e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.2625560719408375 ,l1_regularization_strength=0.6337697051250808 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7492394072538043 ,beta=0.7299323966596429].
2023-08-03 19:13:44,196 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.012435841462796193, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.28856447810331765 ,rho=0.8513237514798274 ,epsilon=2.1740181900024643e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.2625560719408375 ,l1_regularization_strength=0.6337697051250808 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7492394072538043 ,beta=0.7299323966596429].
2023-08-03 19:13:55,702 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:13:55,702 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:13:55,762 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:13:55,762 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:14:02,919 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4291249663985428, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.9922237504510407 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.19178788447316863 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7961978220492639 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9864528672603179 ,beta=0.7299323966596429].
2023-08-03 19:14:02,919 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4291249663985428, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.589426096090476 ,rho=0.9922237504510407 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.19178788447316863 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7961978220492639 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9864528672603179 ,beta=0.7299323966596429].
2023-08-03 19:14:08,250 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:14:08,250 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:14:16,064 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:14:16,065 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:14:16,490 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:14:16,490 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:14:26,515 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:14:26,515 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:14:28,553 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:14:28,554 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.7399213144734977 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.589426096090476 ,rho=0.23715581535892938 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:14:37,055 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:14:37,055 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:14:37,120 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:14:37,120 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:14:47,073 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.660573848641616, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8715471348338156 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.749869873301508 ,beta_2=0.8879206893561581 ,learning_rate_power=-0.34261084235922057 ,initial_accumulator_value=0.32682668903637657 ,l1_regularization_strength=0.04030710230850354 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:14:47,073 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.660573848641616, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8715471348338156 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.749869873301508 ,beta_2=0.8879206893561581 ,learning_rate_power=-0.34261084235922057 ,initial_accumulator_value=0.32682668903637657 ,l1_regularization_strength=0.04030710230850354 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:14:48,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:14:48,774 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9845430340557797 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5973510941642979 ,beta=0.7299323966596429].
2023-08-03 19:14:57,498 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:14:57,499 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:15:17,662 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2179794875146831, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9416508903892018 ,rho=0.7001326912246315 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6696675590914437 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9739488289464568 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:15:17,663 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2179794875146831, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9416508903892018 ,rho=0.7001326912246315 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6696675590914437 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9739488289464568 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:15:39,842 INFO: Applying selection operators for generation 19.
2023-08-03 19:15:39,843 INFO: Applying genetic operators for generation 19.
2023-08-03 19:15:39,847 INFO: Evaluating fitness for for generation 19.
2023-08-03 19:15:39,847 INFO: Will evaluate fitness for 32 individuals.
2023-08-03 19:15:40,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:15:40,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:15:40,414 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7626961763021415, momentum=0.8725461565792823 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7791874120124728 ,rho=0.9096716276833376 ,epsilon=0.0006318437250948688 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.2303985051792975 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1806331697484187 ,beta=0.49318797296540795].
2023-08-03 19:15:40,414 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7626961763021415, momentum=0.8725461565792823 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7791874120124728 ,rho=0.9096716276833376 ,epsilon=0.0006318437250948688 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.2303985051792975 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1806331697484187 ,beta=0.49318797296540795].
2023-08-03 19:15:40,447 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:15:40,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:15:40,457 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:15:40,458 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:00,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:00,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:01,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:01,205 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:01,252 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:01,252 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:13,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:13,367 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:21,414 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:21,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:21,644 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7754880106308016 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.5628788025908043 ,l1_regularization_strength=0.7444434604000989 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.415629258036435 ,beta=0.7299323966596429].
2023-08-03 19:16:21,644 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7754880106308016 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.5628788025908043 ,l1_regularization_strength=0.7444434604000989 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.415629258036435 ,beta=0.7299323966596429].
2023-08-03 19:16:21,667 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:21,667 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:33,893 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.00510973650669988 ,nesterov=True ,amsgrad=True ,weight_decay=0.000355978861895102 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.6466551037144718 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9914441539901898 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7137051868203835 ,beta=0.9012682401920912].
2023-08-03 19:16:33,893 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.00510973650669988 ,nesterov=True ,amsgrad=True ,weight_decay=0.000355978861895102 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.6466551037144718 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9914441539901898 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7137051868203835 ,beta=0.9012682401920912].
2023-08-03 19:16:40,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:40,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:41,426 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:41,426 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:42,053 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:42,053 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:53,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:16:53,421 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:00,697 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:00,697 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:01,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:01,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:03,022 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:03,023 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:14,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:14,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:21,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.439403768024182, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.08026460733633722 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5594446283873303 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.054456133526203376 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.3635694530499509 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.0072153308891366175 ,beta=0.39748296862007526].
2023-08-03 19:17:21,899 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.439403768024182, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.08026460733633722 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5594446283873303 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.054456133526203376 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.3635694530499509 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.0072153308891366175 ,beta=0.39748296862007526].
2023-08-03 19:17:22,231 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:22,231 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:23,488 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:23,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:35,127 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.18512482535561758, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008225211814718449 ,use_ema=True ,ema_momentum=0.3620126173496411 ,rho=0.811544830139319 ,epsilon=0.0006687497614861597 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9817757270939922 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.44309554635396875 ,beta=0.6005164195998965].
2023-08-03 19:17:35,128 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.18512482535561758, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008225211814718449 ,use_ema=True ,ema_momentum=0.3620126173496411 ,rho=0.811544830139319 ,epsilon=0.0006687497614861597 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9817757270939922 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.44309554635396875 ,beta=0.6005164195998965].
2023-08-03 19:17:42,341 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:42,341 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:43,943 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:43,943 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:45,536 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:45,536 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:59,582 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:17:59,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:18:02,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:18:02,481 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:18:04,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:18:04,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:18:06,062 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:18:06,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:18:21,069 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:18:21,069 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:18:40,977 INFO: Applying selection operators for generation 20.
2023-08-03 19:18:40,978 INFO: Applying genetic operators for generation 20.
2023-08-03 19:18:40,987 INFO: Evaluating fitness for for generation 20.
2023-08-03 19:18:40,987 INFO: Will evaluate fitness for 26 individuals.
2023-08-03 19:18:41,582 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.1676921872107724 ,nesterov=False ,amsgrad=False ,weight_decay=0.008125667822906 ,use_ema=False ,ema_momentum=0.5029701533256953 ,rho=0.349232870559271 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.13510427758273102 ,learning_rate_power=-0.5246938835330794 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.052580841316726135 ,beta=0.7299323966596429].
2023-08-03 19:18:41,582 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.1676921872107724 ,nesterov=False ,amsgrad=False ,weight_decay=0.008125667822906 ,use_ema=False ,ema_momentum=0.5029701533256953 ,rho=0.349232870559271 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.13510427758273102 ,learning_rate_power=-0.5246938835330794 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.052580841316726135 ,beta=0.7299323966596429].
2023-08-03 19:18:41,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:18:41,650 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:18:41,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:18:41,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:18:41,675 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.7361132549317458 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.43961807308778456 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.334005467219601 ,l1_regularization_strength=0.7458442513984013 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.018117657695271072 ,beta=0.7299323966596429].
2023-08-03 19:18:41,675 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.7361132549317458 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.43961807308778456 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.334005467219601 ,l1_regularization_strength=0.7458442513984013 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.018117657695271072 ,beta=0.7299323966596429].
2023-08-03 19:19:01,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:19:01,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:19:02,627 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0005093644314987006 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.26952800535850185 ,learning_rate_power=-0.7610593446444703 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.9769264304123796].
2023-08-03 19:19:02,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0005093644314987006 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.26952800535850185 ,learning_rate_power=-0.7610593446444703 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.9769264304123796].
2023-08-03 19:19:04,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.4057330374412137 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5715999324753026 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5390027497959647 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.09752169355160678 ,l1_regularization_strength=0.8268875416793238 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9698628335517229 ,beta=0.7299323966596429].
2023-08-03 19:19:04,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.4057330374412137 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5715999324753026 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5390027497959647 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.09752169355160678 ,l1_regularization_strength=0.8268875416793238 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9698628335517229 ,beta=0.7299323966596429].
2023-08-03 19:19:05,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:19:05,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:19:21,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.017138287363935745, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9419935494413452 ,rho=0.014180526947371375 ,epsilon=0.0008123241535492488 ,centered=False ,beta_1=0.2551806120653005 ,beta_2=0.5781232966062699 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.5738149789038061 ,l1_regularization_strength=0.37432640120020233 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4760287669819877 ,beta=0.26514642920193987].
2023-08-03 19:19:21,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.017138287363935745, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9419935494413452 ,rho=0.014180526947371375 ,epsilon=0.0008123241535492488 ,centered=False ,beta_1=0.2551806120653005 ,beta_2=0.5781232966062699 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.5738149789038061 ,l1_regularization_strength=0.37432640120020233 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4760287669819877 ,beta=0.26514642920193987].
2023-08-03 19:19:24,706 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.16137709078699036, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8363826969735302 ,rho=0.6350870532080233 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.3458699676397795 ,beta_2=0.14168370812646935 ,learning_rate_power=-0.20722489925152088 ,initial_accumulator_value=0.2883158650843586 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.003633497545208697 ,beta=0.7299323966596429].
2023-08-03 19:19:24,707 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.16137709078699036, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8363826969735302 ,rho=0.6350870532080233 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.3458699676397795 ,beta_2=0.14168370812646935 ,learning_rate_power=-0.20722489925152088 ,initial_accumulator_value=0.2883158650843586 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.003633497545208697 ,beta=0.7299323966596429].
2023-08-03 19:19:25,576 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:19:25,577 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:19:25,730 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.3318224101560373, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.82175997181287 ,rho=0.4009212055466451 ,epsilon=0.0004949570475493959 ,centered=True ,beta_1=0.7721946199082487 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6470053388158999 ,beta=0.7299323966596429].
2023-08-03 19:19:25,730 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.3318224101560373, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.82175997181287 ,rho=0.4009212055466451 ,epsilon=0.0004949570475493959 ,centered=True ,beta_1=0.7721946199082487 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6470053388158999 ,beta=0.7299323966596429].
2023-08-03 19:19:45,980 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:19:45,980 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:19:46,029 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5752227127184366, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.005948105688938367 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.6421590776949474 ,epsilon=0.0005353017604164535 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.758995861656688 ,l1_regularization_strength=0.4371399716357315 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:19:46,029 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5752227127184366, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.005948105688938367 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.6421590776949474 ,epsilon=0.0005353017604164535 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.758995861656688 ,l1_regularization_strength=0.4371399716357315 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:19:48,669 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:19:48,669 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:19:58,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:19:58,797 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:20:06,276 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3047323932558308 ,rho=0.5049220606417423 ,epsilon=0.00022529233748277153 ,centered=False ,beta_1=0.4080236975229201 ,beta_2=0.19024036201775363 ,learning_rate_power=-0.9798245180709838 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8443572104426558 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.2846345432348243 ,beta=0.6261412211516993].
2023-08-03 19:20:06,277 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3047323932558308 ,rho=0.5049220606417423 ,epsilon=0.00022529233748277153 ,centered=False ,beta_1=0.4080236975229201 ,beta_2=0.19024036201775363 ,learning_rate_power=-0.9798245180709838 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8443572104426558 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.2846345432348243 ,beta=0.6261412211516993].
2023-08-03 19:20:09,901 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:20:09,901 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:20:11,188 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=0.008836339138308053 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.481697245791217 ,epsilon=0.0002288384147587962 ,centered=False ,beta_1=0.4481012885113289 ,beta_2=0.464007481348495 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.48074639247550377 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.0013016782029794394].
2023-08-03 19:20:11,188 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=0.008836339138308053 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.481697245791217 ,epsilon=0.0002288384147587962 ,centered=False ,beta_1=0.4481012885113289 ,beta_2=0.464007481348495 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.48074639247550377 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.0013016782029794394].
2023-08-03 19:20:19,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0038312548381825387 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0005303146773706362 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7451858674714376 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.5763000100598229 ,l1_regularization_strength=0.621138876817193 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.635879958954574 ,beta=0.7299323966596429].
2023-08-03 19:20:19,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0038312548381825387 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0005303146773706362 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7451858674714376 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.5763000100598229 ,l1_regularization_strength=0.621138876817193 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.635879958954574 ,beta=0.7299323966596429].
2023-08-03 19:20:24,540 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9237974530937891 ,rho=0.014180526947371375 ,epsilon=0.0007428718833920764 ,centered=True ,beta_1=0.5356944231847182 ,beta_2=0.8834204465704122 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.14031902667851193 ,l1_regularization_strength=0.9667085179642528 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.25508501124575544 ,beta=0.7299323966596429].
2023-08-03 19:20:24,540 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9237974530937891 ,rho=0.014180526947371375 ,epsilon=0.0007428718833920764 ,centered=True ,beta_1=0.5356944231847182 ,beta_2=0.8834204465704122 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.14031902667851193 ,l1_regularization_strength=0.9667085179642528 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.25508501124575544 ,beta=0.7299323966596429].
2023-08-03 19:20:30,494 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8757772515332166 ,rho=0.672474775226562 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8166465928268698 ,beta_2=0.09380582107835245 ,learning_rate_power=-0.08129546296909884 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7819008691833865 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8598073891754919 ,beta=0.953539157741015].
2023-08-03 19:20:30,494 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8757772515332166 ,rho=0.672474775226562 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8166465928268698 ,beta_2=0.09380582107835245 ,learning_rate_power=-0.08129546296909884 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7819008691833865 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8598073891754919 ,beta=0.953539157741015].
2023-08-03 19:20:35,005 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:20:35,006 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:20:44,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.266131102981391, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.44661784167249974 ,rho=0.3272998160707594 ,epsilon=0.0006359736233171419 ,centered=True ,beta_1=0.5572273905293189 ,beta_2=0.18513599692599303 ,learning_rate_power=-0.740227145513013 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.3977077973622667].
2023-08-03 19:20:44,140 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.266131102981391, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.44661784167249974 ,rho=0.3272998160707594 ,epsilon=0.0006359736233171419 ,centered=True ,beta_1=0.5572273905293189 ,beta_2=0.18513599692599303 ,learning_rate_power=-0.740227145513013 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.3977077973622667].
2023-08-03 19:20:48,019 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:20:48,020 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:21:08,639 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:21:08,639 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:21:27,861 INFO: Applying selection operators for generation 21.
2023-08-03 19:21:27,862 INFO: Applying genetic operators for generation 21.
2023-08-03 19:21:27,868 INFO: Evaluating fitness for for generation 21.
2023-08-03 19:21:27,868 INFO: Will evaluate fitness for 20 individuals.
2023-08-03 19:21:28,426 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:21:28,426 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:21:28,575 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7589833122734652, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0004915350392543896 ,centered=False ,beta_1=0.4017199023723047 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.2446282209527194 ,initial_accumulator_value=0.49878318768213836 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.2682767177300741].
2023-08-03 19:21:28,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7589833122734652, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0004915350392543896 ,centered=False ,beta_1=0.4017199023723047 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.2446282209527194 ,initial_accumulator_value=0.49878318768213836 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.2682767177300741].
2023-08-03 19:21:28,585 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:21:28,585 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:21:28,627 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7534037189266242, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8491606497923498 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5706614944921109 ,learning_rate_power=-0.225504757350096 ,initial_accumulator_value=0.17404104420583422 ,l1_regularization_strength=0.28465467713622816 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.9723993184012748].
2023-08-03 19:21:28,627 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7534037189266242, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8491606497923498 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5706614944921109 ,learning_rate_power=-0.225504757350096 ,initial_accumulator_value=0.17404104420583422 ,l1_regularization_strength=0.28465467713622816 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.9723993184012748].
2023-08-03 19:21:48,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.6641806441710951 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.31466675706402214 ,rho=0.8696069795145321 ,epsilon=0.0008579481072255698 ,centered=False ,beta_1=0.17547285503371846 ,beta_2=0.40668595001094376 ,learning_rate_power=-0.9503648875087278 ,initial_accumulator_value=0.07225946260828153 ,l1_regularization_strength=0.3837658666021344 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.678196996174367 ,beta=0.6586169272268507].
2023-08-03 19:21:48,373 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.6641806441710951 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.31466675706402214 ,rho=0.8696069795145321 ,epsilon=0.0008579481072255698 ,centered=False ,beta_1=0.17547285503371846 ,beta_2=0.40668595001094376 ,learning_rate_power=-0.9503648875087278 ,initial_accumulator_value=0.07225946260828153 ,l1_regularization_strength=0.3837658666021344 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.678196996174367 ,beta=0.6586169272268507].
2023-08-03 19:21:48,664 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.1405512886957716, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.718572898274326 ,epsilon=0.0003314842819475529 ,centered=False ,beta_1=0.5248464979196091 ,beta_2=0.5662387175923038 ,learning_rate_power=-0.10773258439206246 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:21:48,665 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.1405512886957716, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.718572898274326 ,epsilon=0.0003314842819475529 ,centered=False ,beta_1=0.5248464979196091 ,beta_2=0.5662387175923038 ,learning_rate_power=-0.10773258439206246 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:21:49,092 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:21:49,092 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:21:52,947 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.318491225651768, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004022320808824822 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.9293661554996607 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.4024659061037471 ,learning_rate_power=-0.21732665261044326 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.1940285749516395 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6677557341869624 ,beta=0.7299323966596429].
2023-08-03 19:21:52,948 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.318491225651768, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004022320808824822 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.9293661554996607 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.4024659061037471 ,learning_rate_power=-0.21732665261044326 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.1940285749516395 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6677557341869624 ,beta=0.7299323966596429].
2023-08-03 19:22:10,273 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:10,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:11,860 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8112072257199403, momentum=0.4137869677677881 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.8304361313439963 ,epsilon=0.0008898004150981546 ,centered=False ,beta_1=0.9090859474383443 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3396477166978952 ,initial_accumulator_value=0.2918139707981954 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4706606510911219 ,beta=0.7299323966596429].
2023-08-03 19:22:11,860 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8112072257199403, momentum=0.4137869677677881 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.8304361313439963 ,epsilon=0.0008898004150981546 ,centered=False ,beta_1=0.9090859474383443 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3396477166978952 ,initial_accumulator_value=0.2918139707981954 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4706606510911219 ,beta=0.7299323966596429].
2023-08-03 19:22:12,393 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:12,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:18,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:18,405 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:30,637 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:30,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:32,610 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:32,610 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:38,891 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:38,891 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:45,579 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:45,579 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:50,977 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:50,977 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:22:52,784 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.28542708113428006 ,rho=0.21622584696452274 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7534945633925876 ,learning_rate_power=-0.4524146381211116 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6888009611302303 ,beta=0.5235003526621964].
2023-08-03 19:22:52,784 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.28542708113428006 ,rho=0.21622584696452274 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7534945633925876 ,learning_rate_power=-0.4524146381211116 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6888009611302303 ,beta=0.5235003526621964].
2023-08-03 19:23:11,814 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9440126833847414, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9555736798071193 ,rho=0.5625446765874969 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1673148669400446 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.027028842637553674 ,l1_regularization_strength=0.7389341967503585 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.37116217313628963 ,beta=0.867890999711801].
2023-08-03 19:23:11,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9440126833847414, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9555736798071193 ,rho=0.5625446765874969 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1673148669400446 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.027028842637553674 ,l1_regularization_strength=0.7389341967503585 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.37116217313628963 ,beta=0.867890999711801].
2023-08-03 19:23:15,551 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.932226465988001 ,rho=0.014180526947371375 ,epsilon=0.0005910167208698977 ,centered=False ,beta_1=0.41359474430718324 ,beta_2=0.014479800122169872 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.04168814898007456 ,l1_regularization_strength=0.3948826118623061 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6915691854093888 ,beta=0.1321011343190036].
2023-08-03 19:23:15,552 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.932226465988001 ,rho=0.014180526947371375 ,epsilon=0.0005910167208698977 ,centered=False ,beta_1=0.41359474430718324 ,beta_2=0.014479800122169872 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.04168814898007456 ,l1_regularization_strength=0.3948826118623061 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6915691854093888 ,beta=0.1321011343190036].
2023-08-03 19:23:46,196 INFO: Applying selection operators for generation 22.
2023-08-03 19:23:46,197 INFO: Applying genetic operators for generation 22.
2023-08-03 19:23:46,202 INFO: Evaluating fitness for for generation 22.
2023-08-03 19:23:46,202 INFO: Will evaluate fitness for 26 individuals.
2023-08-03 19:23:46,788 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:23:46,788 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:23:46,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:23:46,801 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:23:46,812 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8290838650742046, momentum=0.8572315394773184 ,nesterov=False ,amsgrad=False ,weight_decay=0.003629681567474389 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.08107331676831564 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.8935402398394179 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7254789614339365 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3671159233124114 ,beta=0.7299323966596429].
2023-08-03 19:23:46,812 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8290838650742046, momentum=0.8572315394773184 ,nesterov=False ,amsgrad=False ,weight_decay=0.003629681567474389 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.08107331676831564 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.8935402398394179 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7254789614339365 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3671159233124114 ,beta=0.7299323966596429].
2023-08-03 19:23:46,827 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:23:46,827 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:06,875 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.9794933980442061 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5887403438173923 ,beta_2=0.010510209552321514 ,learning_rate_power=-0.7710386297653724 ,initial_accumulator_value=0.26355810141207736 ,l1_regularization_strength=0.3531946062408301 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4547759449687391 ,beta=0.4177282713192465].
2023-08-03 19:24:06,875 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.9794933980442061 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5887403438173923 ,beta_2=0.010510209552321514 ,learning_rate_power=-0.7710386297653724 ,initial_accumulator_value=0.26355810141207736 ,l1_regularization_strength=0.3531946062408301 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4547759449687391 ,beta=0.4177282713192465].
2023-08-03 19:24:07,160 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:07,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:07,409 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:07,409 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:09,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:09,937 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:27,394 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:27,395 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:27,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:27,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:30,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:30,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:30,250 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:30,251 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:48,365 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:48,365 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:49,163 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:49,163 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:51,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:51,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:24:51,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.575874404414411, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00042480868572911394 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.6686904342455529 ,learning_rate_power=-0.020679858106275928 ,initial_accumulator_value=0.5588548883029502 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8323816610957692 ,beta=0.40276270735773745].
2023-08-03 19:24:51,208 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.575874404414411, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00042480868572911394 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.6686904342455529 ,learning_rate_power=-0.020679858106275928 ,initial_accumulator_value=0.5588548883029502 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8323816610957692 ,beta=0.40276270735773745].
2023-08-03 19:25:08,823 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4171834444209118, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26617528431251325 ,rho=0.026956411500407618 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8164062562750328 ,beta_2=0.47181564197309767 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.904619378196373 ,beta=0.7299323966596429].
2023-08-03 19:25:08,823 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4171834444209118, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26617528431251325 ,rho=0.026956411500407618 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8164062562750328 ,beta_2=0.47181564197309767 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.904619378196373 ,beta=0.7299323966596429].
2023-08-03 19:25:09,650 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4019580629625865 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5382941551081807 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.2742075097684312 ,beta=0.7299323966596429].
2023-08-03 19:25:09,651 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4019580629625865 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5382941551081807 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.2742075097684312 ,beta=0.7299323966596429].
2023-08-03 19:25:11,319 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:25:11,319 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:25:14,797 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:25:14,797 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:25:30,296 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4696854916967592 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.41200005726601563 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.11407692090901533 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:25:30,296 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4696854916967592 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.41200005726601563 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.11407692090901533 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:25:31,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:25:31,560 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:25:32,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.003374136821311824, momentum=0.1372965160450058 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.30045998196836166 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.6156694109584883 ,l1_regularization_strength=0.5416893869883279 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.24254509805622138 ,beta=0.7299323966596429].
2023-08-03 19:25:32,519 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.003374136821311824, momentum=0.1372965160450058 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.30045998196836166 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.6156694109584883 ,l1_regularization_strength=0.5416893869883279 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.24254509805622138 ,beta=0.7299323966596429].
2023-08-03 19:25:35,267 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:25:35,268 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:25:50,766 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:25:50,767 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:26:11,087 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:26:11,087 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:26:30,663 INFO: Applying selection operators for generation 23.
2023-08-03 19:26:30,663 INFO: Applying genetic operators for generation 23.
2023-08-03 19:26:30,667 INFO: Evaluating fitness for for generation 23.
2023-08-03 19:26:30,667 INFO: Will evaluate fitness for 18 individuals.
2023-08-03 19:26:31,260 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.5682706165126581 ,epsilon=0.0002724036404282693 ,centered=True ,beta_1=0.5093849430123105 ,beta_2=0.5514227422076629 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.632769708291594 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3519474375023527 ,beta=0.7299323966596429].
2023-08-03 19:26:31,260 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.5682706165126581 ,epsilon=0.0002724036404282693 ,centered=True ,beta_1=0.5093849430123105 ,beta_2=0.5514227422076629 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.632769708291594 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3519474375023527 ,beta=0.7299323966596429].
2023-08-03 19:26:31,297 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:26:31,297 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:26:31,313 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:26:31,313 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:26:31,320 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:26:31,320 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:26:51,623 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:26:51,623 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:26:51,930 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6407612285873178, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=0.0076826774681622145 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.2666230103016488 ,epsilon=0.0007029637867221585 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8120787391425462 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.792930820321835 ,beta=0.7299323966596429].
2023-08-03 19:26:51,930 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6407612285873178, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=0.0076826774681622145 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.2666230103016488 ,epsilon=0.0007029637867221585 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8120787391425462 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.792930820321835 ,beta=0.7299323966596429].
2023-08-03 19:26:52,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:26:52,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:26:55,084 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.047292066990333836, momentum=0.2934632715145674 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009645269635736476 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3808547741137944 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.07169739408024967 ,beta=0.7299323966596429].
2023-08-03 19:26:55,085 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.047292066990333836, momentum=0.2934632715145674 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009645269635736476 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3808547741137944 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.07169739408024967 ,beta=0.7299323966596429].
2023-08-03 19:27:11,809 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7342106872894985 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8339638688606574 ,learning_rate_power=-0.3508891939856664 ,initial_accumulator_value=0.19996831766630874 ,l1_regularization_strength=0.32688631662355394 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.00761463115900618 ,beta=0.7299323966596429].
2023-08-03 19:27:11,809 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7342106872894985 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8339638688606574 ,learning_rate_power=-0.3508891939856664 ,initial_accumulator_value=0.19996831766630874 ,l1_regularization_strength=0.32688631662355394 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.00761463115900618 ,beta=0.7299323966596429].
2023-08-03 19:27:12,513 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:27:12,514 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:27:19,903 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:27:19,903 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:27:25,071 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:27:25,072 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:27:31,305 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:27:31,306 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:27:32,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:27:32,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:27:40,480 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:27:40,480 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:27:45,278 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=0.004416599717166902 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.009342546636019411 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6430988277496625 ,beta=0.0920235047930702].
2023-08-03 19:27:45,278 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=0.004416599717166902 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.009342546636019411 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6430988277496625 ,beta=0.0920235047930702].
2023-08-03 19:27:52,156 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:27:52,156 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:28:12,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:28:12,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:28:31,591 INFO: Applying selection operators for generation 24.
2023-08-03 19:28:31,592 INFO: Applying genetic operators for generation 24.
2023-08-03 19:28:31,598 INFO: Evaluating fitness for for generation 24.
2023-08-03 19:28:31,598 INFO: Will evaluate fitness for 31 individuals.
2023-08-03 19:28:32,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:28:32,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:28:32,186 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14961390969967392, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9559179464671891 ,rho=0.9817835734127659 ,epsilon=1.3084997549533668e-05 ,centered=False ,beta_1=0.4497650243661875 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7853537563035271 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8988017207456631 ,beta=0.6179977334212381].
2023-08-03 19:28:32,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14961390969967392, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9559179464671891 ,rho=0.9817835734127659 ,epsilon=1.3084997549533668e-05 ,centered=False ,beta_1=0.4497650243661875 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7853537563035271 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8988017207456631 ,beta=0.6179977334212381].
2023-08-03 19:28:32,196 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:28:32,197 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:28:32,197 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5896945137982041, momentum=0.28406322435569786 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.020417281136502874 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.1979014695707041 ,learning_rate_power=-0.9586967774921803 ,initial_accumulator_value=0.6283375509611853 ,l1_regularization_strength=0.043446220026456595 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:28:32,197 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5896945137982041, momentum=0.28406322435569786 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.020417281136502874 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.1979014695707041 ,learning_rate_power=-0.9586967774921803 ,initial_accumulator_value=0.6283375509611853 ,l1_regularization_strength=0.043446220026456595 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:28:52,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:28:52,522 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:28:53,386 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:28:53,386 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:28:55,692 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.06462796230097911, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.02415823293601116 ,epsilon=0.000911074392304526 ,centered=False ,beta_1=0.2128589427217329 ,beta_2=0.417044059808818 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.6196485408748184 ,l1_regularization_strength=0.6170880506507592 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.25679123892918776 ,beta=0.7299323966596429].
2023-08-03 19:28:55,692 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.06462796230097911, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.02415823293601116 ,epsilon=0.000911074392304526 ,centered=False ,beta_1=0.2128589427217329 ,beta_2=0.417044059808818 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.6196485408748184 ,l1_regularization_strength=0.6170880506507592 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.25679123892918776 ,beta=0.7299323966596429].
2023-08-03 19:28:55,720 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:28:55,720 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:12,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:12,877 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:14,012 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2926756424174006, momentum=0.6968205260125977 ,nesterov=False ,amsgrad=True ,weight_decay=0.001533737371233361 ,use_ema=True ,ema_momentum=0.7076918298908451 ,rho=0.20726326123371241 ,epsilon=0.0003275710928484905 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.39735125581664277 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.070025721045056 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.41534743488589776 ,beta=0.20471317227239194].
2023-08-03 19:29:14,012 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2926756424174006, momentum=0.6968205260125977 ,nesterov=False ,amsgrad=True ,weight_decay=0.001533737371233361 ,use_ema=True ,ema_momentum=0.7076918298908451 ,rho=0.20726326123371241 ,epsilon=0.0003275710928484905 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.39735125581664277 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.070025721045056 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.41534743488589776 ,beta=0.20471317227239194].
2023-08-03 19:29:16,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07761899150506524, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.46627784479425005 ,rho=0.8035933554696426 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.04327331237841747 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.900859454311532 ,initial_accumulator_value=0.5981943217991856 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:16,712 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07761899150506524, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.46627784479425005 ,rho=0.8035933554696426 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.04327331237841747 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.900859454311532 ,initial_accumulator_value=0.5981943217991856 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:18,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:18,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:33,218 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7968816941511911 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9701746827585986 ,learning_rate_power=-0.19399257096765832 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.47824141836161993 ,beta=0.7299323966596429].
2023-08-03 19:29:33,218 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7968816941511911 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9701746827585986 ,learning_rate_power=-0.19399257096765832 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.47824141836161993 ,beta=0.7299323966596429].
2023-08-03 19:29:38,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:38,077 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:39,325 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:39,325 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:40,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:40,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:56,883 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:56,883 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:58,520 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7669444709113377 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6877395920189582 ,beta=0.12755378327353217].
2023-08-03 19:29:58,520 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7669444709113377 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6877395920189582 ,beta=0.12755378327353217].
2023-08-03 19:29:59,426 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:29:59,426 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:30:00,776 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:30:00,776 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:30:17,521 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:30:17,521 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:30:19,461 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:30:19,462 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:30:21,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:30:21,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:30:22,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.542586607818982 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.6110390332031594 ,learning_rate_power=-0.12954271444294319 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.21209666696457286 ,beta=0.7299323966596429].
2023-08-03 19:30:22,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.542586607818982 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.6110390332031594 ,learning_rate_power=-0.12954271444294319 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.21209666696457286 ,beta=0.7299323966596429].
2023-08-03 19:30:38,056 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:30:38,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:30:39,584 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007329586512730387 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6038990382289036 ,beta=0.39279770173132567].
2023-08-03 19:30:39,585 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007329586512730387 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6038990382289036 ,beta=0.39279770173132567].
2023-08-03 19:30:42,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:30:42,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:30:47,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.44925664886446715, momentum=0.8695152279743696 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.38922329883487305 ,epsilon=0.0005974255618858112 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.7449523650941976 ,l1_regularization_strength=0.9391638542781697 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6929049982496434 ,beta=0.8997227097274395].
2023-08-03 19:30:47,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.44925664886446715, momentum=0.8695152279743696 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.38922329883487305 ,epsilon=0.0005974255618858112 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.7449523650941976 ,l1_regularization_strength=0.9391638542781697 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6929049982496434 ,beta=0.8997227097274395].
2023-08-03 19:30:59,367 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:30:59,367 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:31:00,747 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:31:00,748 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:31:02,910 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7086441710294779 ,beta_2=0.22506451724515186 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.3620214963570254 ,l1_regularization_strength=0.684419607965871 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.9107134799221064].
2023-08-03 19:31:02,911 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7086441710294779 ,beta_2=0.22506451724515186 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.3620214963570254 ,l1_regularization_strength=0.684419607965871 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.9107134799221064].
2023-08-03 19:31:23,343 INFO: Applying selection operators for generation 25.
2023-08-03 19:31:23,343 INFO: Applying genetic operators for generation 25.
2023-08-03 19:31:23,349 INFO: Evaluating fitness for for generation 25.
2023-08-03 19:31:23,349 INFO: Will evaluate fitness for 27 individuals.
2023-08-03 19:31:23,903 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:31:23,903 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:31:23,917 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6860007796308959, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009934001054599456 ,centered=False ,beta_1=0.6467317331502691 ,beta_2=0.831586434847302 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5379976021822132 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.17912482403376695 ,beta=0.7299323966596429].
2023-08-03 19:31:23,917 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6860007796308959, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009934001054599456 ,centered=False ,beta_1=0.6467317331502691 ,beta_2=0.831586434847302 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5379976021822132 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.17912482403376695 ,beta=0.7299323966596429].
2023-08-03 19:31:24,036 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009940441313975505 ,centered=True ,beta_1=0.5910164066560187 ,beta_2=0.30177769212105654 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.44778579561142295 ,beta=0.7299323966596429].
2023-08-03 19:31:24,036 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009940441313975505 ,centered=True ,beta_1=0.5910164066560187 ,beta_2=0.30177769212105654 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.44778579561142295 ,beta=0.7299323966596429].
2023-08-03 19:31:24,044 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:31:24,044 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:31:44,490 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:31:44,490 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:31:44,987 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:31:44,988 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:31:47,618 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:31:47,618 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:31:57,365 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:31:57,365 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:04,966 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:04,966 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:05,518 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.6860112314774393 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.534518759418542 ,rho=0.014180526947371375 ,epsilon=0.0008946808326303332 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.5464852305237697 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9924497036704395 ,l1_regularization_strength=0.45882408622315773 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5721796868098696 ,beta=0.7630449306455158].
2023-08-03 19:32:05,518 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.6860112314774393 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.534518759418542 ,rho=0.014180526947371375 ,epsilon=0.0008946808326303332 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.5464852305237697 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9924497036704395 ,l1_regularization_strength=0.45882408622315773 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5721796868098696 ,beta=0.7630449306455158].
2023-08-03 19:32:07,613 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:07,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:18,812 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:18,812 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:25,506 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7060540992264382 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.12131150124451306 ,initial_accumulator_value=0.8781277218462535 ,l1_regularization_strength=0.4010605462241006 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6022055085980006 ,beta=0.7299323966596429].
2023-08-03 19:32:25,507 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7060540992264382 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.12131150124451306 ,initial_accumulator_value=0.8781277218462535 ,l1_regularization_strength=0.4010605462241006 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6022055085980006 ,beta=0.7299323966596429].
2023-08-03 19:32:28,272 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:28,272 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:29,572 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:29,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:39,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.2131671990450048 ,nesterov=False ,amsgrad=False ,weight_decay=0.005269588005732671 ,use_ema=False ,ema_momentum=0.9816572497184047 ,rho=0.10077240417784561 ,epsilon=0.0007845405314071158 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9501146731862011 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.044692667840395606 ,beta=0.7299323966596429].
2023-08-03 19:32:39,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.2131671990450048 ,nesterov=False ,amsgrad=False ,weight_decay=0.005269588005732671 ,use_ema=False ,ema_momentum=0.9816572497184047 ,rho=0.10077240417784561 ,epsilon=0.0007845405314071158 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9501146731862011 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.044692667840395606 ,beta=0.7299323966596429].
2023-08-03 19:32:46,584 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:46,585 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:48,397 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:48,397 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:32:50,008 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.2585109602353505, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.11147884854127832 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.26184053765671467 ,l1_regularization_strength=0.8072782891367543 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.697969745422209 ,beta=0.5154327474127632].
2023-08-03 19:32:50,009 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.2585109602353505, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.11147884854127832 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.26184053765671467 ,l1_regularization_strength=0.8072782891367543 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.697969745422209 ,beta=0.5154327474127632].
2023-08-03 19:33:03,232 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:33:03,232 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:33:07,078 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:33:07,078 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:33:08,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.19914390648379499, momentum=0.38417921328876714 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.34504795001897115 ,rho=0.9204539225525298 ,epsilon=0.0005783799892792317 ,centered=False ,beta_1=0.8179274497015252 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.21833645818078673 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.11475166936217684 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5108020972008441 ,beta=0.7299323966596429].
2023-08-03 19:33:08,475 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.19914390648379499, momentum=0.38417921328876714 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.34504795001897115 ,rho=0.9204539225525298 ,epsilon=0.0005783799892792317 ,centered=False ,beta_1=0.8179274497015252 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.21833645818078673 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.11475166936217684 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5108020972008441 ,beta=0.7299323966596429].
2023-08-03 19:33:23,807 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14294633608927243, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.1589911114107927 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.672634362660331 ,learning_rate_power=-0.777430287306603 ,initial_accumulator_value=0.3865337337255058 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.42471790418844946 ,beta=0.08838378175552375].
2023-08-03 19:33:23,808 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14294633608927243, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.1589911114107927 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.672634362660331 ,learning_rate_power=-0.777430287306603 ,initial_accumulator_value=0.3865337337255058 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.42471790418844946 ,beta=0.08838378175552375].
2023-08-03 19:33:24,464 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:33:24,464 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:33:27,516 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:33:27,516 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:33:32,772 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7163642088076563, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05259451950153238 ,rho=0.014180526947371375 ,epsilon=0.00032642857968842473 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5480159628026413 ,learning_rate_power=-0.8149025962335614 ,initial_accumulator_value=0.4603949214346268 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.2347629702321733 ,beta=0.7299323966596429].
2023-08-03 19:33:32,773 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7163642088076563, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05259451950153238 ,rho=0.014180526947371375 ,epsilon=0.00032642857968842473 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5480159628026413 ,learning_rate_power=-0.8149025962335614 ,initial_accumulator_value=0.4603949214346268 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.2347629702321733 ,beta=0.7299323966596429].
2023-08-03 19:33:47,903 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:33:47,904 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:34:07,849 INFO: Applying selection operators for generation 26.
2023-08-03 19:34:07,849 INFO: Applying genetic operators for generation 26.
2023-08-03 19:34:07,855 INFO: Evaluating fitness for for generation 26.
2023-08-03 19:34:07,855 INFO: Will evaluate fitness for 36 individuals.
2023-08-03 19:34:08,384 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:34:08,384 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:34:08,409 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:34:08,409 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:34:08,551 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:34:08,551 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:34:08,557 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:34:08,557 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:34:28,274 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.42214556373574297, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0006537041138561348 ,centered=False ,beta_1=0.7092797996712651 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4614143842298949 ,initial_accumulator_value=0.7682212322266934 ,l1_regularization_strength=0.6222275395017585 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5535618400963573 ,beta=0.7299323966596429].
2023-08-03 19:34:28,275 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.42214556373574297, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0006537041138561348 ,centered=False ,beta_1=0.7092797996712651 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4614143842298949 ,initial_accumulator_value=0.7682212322266934 ,l1_regularization_strength=0.6222275395017585 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5535618400963573 ,beta=0.7299323966596429].
2023-08-03 19:34:28,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:34:28,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:34:28,901 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.002254357885559111 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.49000161251264573 ,epsilon=0.0002526093473336688 ,centered=True ,beta_1=0.25618025205527706 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8431971994584033 ,initial_accumulator_value=0.6848371385959232 ,l1_regularization_strength=0.6380737312633302 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9285831371680696 ,beta=0.8130639329397086].
2023-08-03 19:34:28,901 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.002254357885559111 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.49000161251264573 ,epsilon=0.0002526093473336688 ,centered=True ,beta_1=0.25618025205527706 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8431971994584033 ,initial_accumulator_value=0.6848371385959232 ,l1_regularization_strength=0.6380737312633302 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9285831371680696 ,beta=0.8130639329397086].
2023-08-03 19:34:29,102 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.014067529920225974, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.25736014932300644 ,epsilon=0.0007429201600521833 ,centered=False ,beta_1=0.507609380029936 ,beta_2=0.08617054092916754 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.05101136731691214 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.40025707738197136 ,beta=0.7299323966596429].
2023-08-03 19:34:29,102 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.014067529920225974, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.25736014932300644 ,epsilon=0.0007429201600521833 ,centered=False ,beta_1=0.507609380029936 ,beta_2=0.08617054092916754 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.05101136731691214 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.40025707738197136 ,beta=0.7299323966596429].
2023-08-03 19:34:49,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.9239535063027241 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.2550774710763357 ,epsilon=2.9941730032583935e-05 ,centered=False ,beta_1=0.43785449271648114 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05401260960026533 ,beta=0.023887017631978646].
2023-08-03 19:34:49,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.9239535063027241 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.2550774710763357 ,epsilon=2.9941730032583935e-05 ,centered=False ,beta_1=0.43785449271648114 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05401260960026533 ,beta=0.023887017631978646].
2023-08-03 19:34:52,977 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:34:52,977 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:34:53,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.8237575276049716 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.46165966232441513 ,beta_2=0.3972370717963082 ,learning_rate_power=-0.7019962681049754 ,initial_accumulator_value=0.12522465649227876 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8494027817117676 ,beta=0.3497767615936894].
2023-08-03 19:34:53,410 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.8237575276049716 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.46165966232441513 ,beta_2=0.3972370717963082 ,learning_rate_power=-0.7019962681049754 ,initial_accumulator_value=0.12522465649227876 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8494027817117676 ,beta=0.3497767615936894].
2023-08-03 19:35:01,994 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:01,994 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:13,601 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:13,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:14,154 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0031854673474214575 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6029506494928007 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9728037742878815 ,beta=0.7299323966596429].
2023-08-03 19:35:14,154 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0031854673474214575 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6029506494928007 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9728037742878815 ,beta=0.7299323966596429].
2023-08-03 19:35:18,236 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9625402821725234, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.36956447024456307 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.819324492448016 ,initial_accumulator_value=0.550232645806516 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:18,237 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9625402821725234, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.36956447024456307 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.819324492448016 ,initial_accumulator_value=0.550232645806516 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:22,139 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:22,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:34,729 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:34,729 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:35,127 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:35,127 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:39,044 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:39,044 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:42,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:42,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:55,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009707004417568337 ,centered=False ,beta_1=0.9685698495982938 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.5532088032065826 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.07969403370522965 ,beta=0.37329722103469687].
2023-08-03 19:35:55,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009707004417568337 ,centered=False ,beta_1=0.9685698495982938 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.5532088032065826 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.07969403370522965 ,beta=0.37329722103469687].
2023-08-03 19:35:56,116 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:56,116 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:59,576 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:35:59,577 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:02,575 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:02,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:16,566 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:16,566 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:19,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:19,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:19,845 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:19,846 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:23,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:23,369 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:36,987 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:36,987 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:40,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:40,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:40,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:40,687 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:43,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:43,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:58,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:36:58,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:00,967 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:00,967 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:00,977 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:00,977 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:03,904 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:03,904 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:23,392 INFO: Applying selection operators for generation 27.
2023-08-03 19:37:23,393 INFO: Applying genetic operators for generation 27.
2023-08-03 19:37:23,401 INFO: Evaluating fitness for for generation 27.
2023-08-03 19:37:23,401 INFO: Will evaluate fitness for 28 individuals.
2023-08-03 19:37:24,002 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.8889720426312571 ,nesterov=False ,amsgrad=False ,weight_decay=0.0044246330738319855 ,use_ema=False ,ema_momentum=0.38572347225795767 ,rho=0.014180526947371375 ,epsilon=0.000747485352078959 ,centered=False ,beta_1=0.9296259724418837 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.36368798544314196 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.05423555109313938 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:24,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.8889720426312571 ,nesterov=False ,amsgrad=False ,weight_decay=0.0044246330738319855 ,use_ema=False ,ema_momentum=0.38572347225795767 ,rho=0.014180526947371375 ,epsilon=0.000747485352078959 ,centered=False ,beta_1=0.9296259724418837 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.36368798544314196 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.05423555109313938 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:24,009 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:24,009 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:24,026 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:24,026 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:24,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.40646337390387954 ,epsilon=5.8103959666824146e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.16227846808398128 ,learning_rate_power=-0.08228085895006187 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.06620748873312254 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:24,045 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.40646337390387954 ,epsilon=5.8103959666824146e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.16227846808398128 ,learning_rate_power=-0.08228085895006187 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.06620748873312254 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:44,144 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8148674284650189, momentum=0.09532849886395567 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7688871881702184 ,rho=0.014180526947371375 ,epsilon=0.0009505670027247516 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.6255255020018481 ,learning_rate_power=-0.9455249026421937 ,initial_accumulator_value=0.011879885780817334 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.6935392682207058].
2023-08-03 19:37:44,144 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8148674284650189, momentum=0.09532849886395567 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7688871881702184 ,rho=0.014180526947371375 ,epsilon=0.0009505670027247516 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.6255255020018481 ,learning_rate_power=-0.9455249026421937 ,initial_accumulator_value=0.011879885780817334 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.6935392682207058].
2023-08-03 19:37:45,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:45,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:47,830 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:47,830 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:37:48,541 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5824155111365242, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.767809365024988 ,rho=0.8384686111303329 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.27306420744098536 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6960990861212639 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.35589087901397987 ,beta=0.7299323966596429].
2023-08-03 19:37:48,541 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5824155111365242, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.767809365024988 ,rho=0.8384686111303329 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.27306420744098536 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6960990861212639 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.35589087901397987 ,beta=0.7299323966596429].
2023-08-03 19:38:05,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.13706434179233717, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00016215240645693423 ,centered=False ,beta_1=0.6128982471791449 ,beta_2=0.7943041646136518 ,learning_rate_power=-0.8250637523551847 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9608818892518629 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.14976483317222966 ,beta=0.08265195212072707].
2023-08-03 19:38:05,367 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.13706434179233717, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00016215240645693423 ,centered=False ,beta_1=0.6128982471791449 ,beta_2=0.7943041646136518 ,learning_rate_power=-0.8250637523551847 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9608818892518629 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.14976483317222966 ,beta=0.08265195212072707].
2023-08-03 19:38:08,944 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:38:08,945 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:38:13,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:38:13,796 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:38:17,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.35334677714621243, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.001363342335979539 ,use_ema=False ,ema_momentum=0.2391383379081431 ,rho=0.014180526947371375 ,epsilon=0.0007875265855131257 ,centered=True ,beta_1=0.32121602824557083 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8638253080378703 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.058077074273937934 ,beta=0.9205696367155527].
2023-08-03 19:38:17,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.35334677714621243, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.001363342335979539 ,use_ema=False ,ema_momentum=0.2391383379081431 ,rho=0.014180526947371375 ,epsilon=0.0007875265855131257 ,centered=True ,beta_1=0.32121602824557083 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8638253080378703 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.058077074273937934 ,beta=0.9205696367155527].
2023-08-03 19:38:29,377 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8150918709855177, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.058121849680838666 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.953676943040392 ,l1_regularization_strength=0.3823267886843197 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.035666741370080635].
2023-08-03 19:38:29,377 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8150918709855177, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.058121849680838666 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.953676943040392 ,l1_regularization_strength=0.3823267886843197 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.035666741370080635].
2023-08-03 19:38:29,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:38:29,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:38:35,256 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8028763863710213 ,rho=0.946392724003808 ,epsilon=0.0005268140147601357 ,centered=False ,beta_1=0.1390864827771593 ,beta_2=0.10776173018098734 ,learning_rate_power=-0.4117485769956546 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7580050916855047 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9820343799235757 ,beta=0.16242359002361006].
2023-08-03 19:38:35,256 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8028763863710213 ,rho=0.946392724003808 ,epsilon=0.0005268140147601357 ,centered=False ,beta_1=0.1390864827771593 ,beta_2=0.10776173018098734 ,learning_rate_power=-0.4117485769956546 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7580050916855047 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9820343799235757 ,beta=0.16242359002361006].
2023-08-03 19:38:41,601 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:38:41,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:38:49,889 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5678025888986932, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5798212676358789 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.19296718144105585 ,initial_accumulator_value=0.532112936539658 ,l1_regularization_strength=0.6291582333549685 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:38:49,889 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5678025888986932, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5798212676358789 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.19296718144105585 ,initial_accumulator_value=0.532112936539658 ,l1_regularization_strength=0.6291582333549685 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:38:52,455 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8246850833818409 ,rho=0.6716026541616729 ,epsilon=0.0005941500879955005 ,centered=False ,beta_1=0.6661855732902092 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4015528894836645 ,initial_accumulator_value=0.39369184506108357 ,l1_regularization_strength=0.9569982349508079 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.4037889169171227].
2023-08-03 19:38:52,455 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8246850833818409 ,rho=0.6716026541616729 ,epsilon=0.0005941500879955005 ,centered=False ,beta_1=0.6661855732902092 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4015528894836645 ,initial_accumulator_value=0.39369184506108357 ,l1_regularization_strength=0.9569982349508079 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.4037889169171227].
2023-08-03 19:38:59,005 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.11537527151743565 ,rho=0.014180526947371375 ,epsilon=0.0006485374219750065 ,centered=False ,beta_1=0.07610259644894002 ,beta_2=0.9989196011259208 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.09191134739960938 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1867398791883471 ,beta=0.7299323966596429].
2023-08-03 19:38:59,006 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.11537527151743565 ,rho=0.014180526947371375 ,epsilon=0.0006485374219750065 ,centered=False ,beta_1=0.07610259644894002 ,beta_2=0.9989196011259208 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.09191134739960938 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1867398791883471 ,beta=0.7299323966596429].
2023-08-03 19:39:01,921 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:39:01,921 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:39:10,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:39:10,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:39:15,973 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:39:15,973 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:39:22,864 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:39:22,864 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:39:30,973 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:39:30,973 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:39:33,360 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:39:33,360 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:39:36,252 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.313425058213596, momentum=0.30787789444676006 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0006333946316886722 ,centered=False ,beta_1=0.7568871010433321 ,beta_2=0.8977489158717518 ,learning_rate_power=-0.4618214207523387 ,initial_accumulator_value=0.42381411358847476 ,l1_regularization_strength=0.8475629514353488 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8707983473736665 ,beta=0.5801949610660401].
2023-08-03 19:39:36,252 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.313425058213596, momentum=0.30787789444676006 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0006333946316886722 ,centered=False ,beta_1=0.7568871010433321 ,beta_2=0.8977489158717518 ,learning_rate_power=-0.4618214207523387 ,initial_accumulator_value=0.42381411358847476 ,l1_regularization_strength=0.8475629514353488 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8707983473736665 ,beta=0.5801949610660401].
2023-08-03 19:39:51,266 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:39:51,266 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:39:59,400 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7554781020345062 ,rho=0.014180526947371375 ,epsilon=0.00042879863324373055 ,centered=True ,beta_1=0.0758549187322225 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6941549566090022 ,initial_accumulator_value=0.3567489137616673 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8492843483954917 ,beta=0.7299323966596429].
2023-08-03 19:39:59,400 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7554781020345062 ,rho=0.014180526947371375 ,epsilon=0.00042879863324373055 ,centered=True ,beta_1=0.0758549187322225 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6941549566090022 ,initial_accumulator_value=0.3567489137616673 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8492843483954917 ,beta=0.7299323966596429].
2023-08-03 19:40:22,128 INFO: Applying selection operators for generation 28.
2023-08-03 19:40:22,129 INFO: Applying genetic operators for generation 28.
2023-08-03 19:40:22,137 INFO: Evaluating fitness for for generation 28.
2023-08-03 19:40:22,137 INFO: Will evaluate fitness for 33 individuals.
2023-08-03 19:40:22,704 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2732449587750462 ,rho=0.286345498994215 ,epsilon=0.0008221008371640558 ,centered=True ,beta_1=0.39356070816394984 ,beta_2=0.11962987877768028 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.6731080525319482 ,l1_regularization_strength=0.3507312654363983 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1464470360313579 ,beta=0.42274927145199426].
2023-08-03 19:40:22,704 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2732449587750462 ,rho=0.286345498994215 ,epsilon=0.0008221008371640558 ,centered=True ,beta_1=0.39356070816394984 ,beta_2=0.11962987877768028 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.6731080525319482 ,l1_regularization_strength=0.3507312654363983 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1464470360313579 ,beta=0.42274927145199426].
2023-08-03 19:40:22,739 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.21372731335756712 ,epsilon=0.0007593943227139957 ,centered=False ,beta_1=0.3277788713576073 ,beta_2=0.08906789185628816 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.5302785962470892 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9464887300601529 ,beta=0.7299323966596429].
2023-08-03 19:40:22,740 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.21372731335756712 ,epsilon=0.0007593943227139957 ,centered=False ,beta_1=0.3277788713576073 ,beta_2=0.08906789185628816 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.5302785962470892 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9464887300601529 ,beta=0.7299323966596429].
2023-08-03 19:40:22,740 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:40:22,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:40:22,759 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6432061102923461, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009295733187091941 ,centered=False ,beta_1=0.7748751485825011 ,beta_2=0.14394664939674728 ,learning_rate_power=-0.45934749621751714 ,initial_accumulator_value=0.21955191460285994 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8550320356997826 ,beta=0.7299323966596429].
2023-08-03 19:40:22,759 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6432061102923461, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009295733187091941 ,centered=False ,beta_1=0.7748751485825011 ,beta_2=0.14394664939674728 ,learning_rate_power=-0.45934749621751714 ,initial_accumulator_value=0.21955191460285994 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8550320356997826 ,beta=0.7299323966596429].
2023-08-03 19:40:43,042 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:40:43,043 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:40:45,477 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:40:45,477 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:40:47,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:40:47,363 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:40:47,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=0.008571950406071189 ,use_ema=True ,ema_momentum=0.47653880740212673 ,rho=0.2030882312324278 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4081069387349654 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.07074574122132637 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3905814174315736 ,beta=0.756075233603958].
2023-08-03 19:40:47,431 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=0.008571950406071189 ,use_ema=True ,ema_momentum=0.47653880740212673 ,rho=0.2030882312324278 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4081069387349654 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.07074574122132637 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3905814174315736 ,beta=0.756075233603958].
2023-08-03 19:41:03,259 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:03,259 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:05,934 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:05,935 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:07,783 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.893235141894855, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7676139242069719 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5697341798698895 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.08317126158406973 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1823226063195279 ,beta=0.9280939353398554].
2023-08-03 19:41:07,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.893235141894855, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7676139242069719 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5697341798698895 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.08317126158406973 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1823226063195279 ,beta=0.9280939353398554].
2023-08-03 19:41:12,636 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:12,636 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:23,447 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.24022792388966485, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.33760080409137494 ,learning_rate_power=-0.6640139740484103 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:23,448 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.24022792388966485, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.33760080409137494 ,learning_rate_power=-0.6640139740484103 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:26,534 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:26,534 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:28,294 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7608829147225604 ,epsilon=0.0006950168055864416 ,centered=False ,beta_1=0.3970100473903594 ,beta_2=0.17662012997067844 ,learning_rate_power=-0.536606937506135 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.46661221912787365 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.13213706644443723 ,beta=0.62076054296261].
2023-08-03 19:41:28,294 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7608829147225604 ,epsilon=0.0006950168055864416 ,centered=False ,beta_1=0.3970100473903594 ,beta_2=0.17662012997067844 ,learning_rate_power=-0.536606937506135 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.46661221912787365 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.13213706644443723 ,beta=0.62076054296261].
2023-08-03 19:41:33,151 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:33,152 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:47,835 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:47,835 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:47,887 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00043706903469683796 ,centered=False ,beta_1=0.9451671432020597 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.32637119511679713 ,initial_accumulator_value=0.9087443750586466 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:47,887 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00043706903469683796 ,centered=False ,beta_1=0.9451671432020597 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.32637119511679713 ,initial_accumulator_value=0.9087443750586466 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:53,167 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:53,167 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:53,732 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:41:53,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:42:08,029 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:42:08,030 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:42:10,521 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:42:10,521 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:42:13,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2115225192139777, momentum=0.772996237869398 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43809829218095653 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.3366317292966803 ,beta_2=0.412537668827909 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8832866543562274 ,beta=0.007257634316531036].
2023-08-03 19:42:13,633 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2115225192139777, momentum=0.772996237869398 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43809829218095653 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.3366317292966803 ,beta_2=0.412537668827909 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8832866543562274 ,beta=0.007257634316531036].
2023-08-03 19:42:14,111 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2528236812508261 ,rho=0.014180526947371375 ,epsilon=0.0005823738818444981 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5431353853036023 ,initial_accumulator_value=0.692799294801667 ,l1_regularization_strength=0.7562631085191518 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5986083699484621 ,beta=0.7299323966596429].
2023-08-03 19:42:14,111 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2528236812508261 ,rho=0.014180526947371375 ,epsilon=0.0005823738818444981 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5431353853036023 ,initial_accumulator_value=0.692799294801667 ,l1_regularization_strength=0.7562631085191518 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5986083699484621 ,beta=0.7299323966596429].
2023-08-03 19:42:28,130 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=0.009494984029289251 ,use_ema=False ,ema_momentum=0.7230071204983535 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.1579581389207818 ,learning_rate_power=-0.3349134211308852 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8160844619399633 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7356971739516769 ,beta=0.7299323966596429].
2023-08-03 19:42:28,130 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=0.009494984029289251 ,use_ema=False ,ema_momentum=0.7230071204983535 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.1579581389207818 ,learning_rate_power=-0.3349134211308852 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8160844619399633 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7356971739516769 ,beta=0.7299323966596429].
2023-08-03 19:42:31,009 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:42:31,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:42:34,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:42:34,065 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:42:51,486 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:42:51,486 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:42:53,276 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:42:53,276 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:42:54,267 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5949231782688058, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.849348052226343 ,rho=0.014180526947371375 ,epsilon=0.0008444077735974213 ,centered=False ,beta_1=0.36108486396738804 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8854556472030828 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.434988325103537 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:42:54,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5949231782688058, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.849348052226343 ,rho=0.014180526947371375 ,epsilon=0.0008444077735974213 ,centered=False ,beta_1=0.36108486396738804 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8854556472030828 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.434988325103537 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:43:12,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:43:12,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:43:13,343 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:43:13,343 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:43:18,609 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9600914151879966, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.26941024414980586 ,rho=0.4651419313002835 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.7337879893085661 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.2487805415744655 ,l1_regularization_strength=0.6411702243363552 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:43:18,610 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9600914151879966, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.26941024414980586 ,rho=0.4651419313002835 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.7337879893085661 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.2487805415744655 ,l1_regularization_strength=0.6411702243363552 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:43:41,723 INFO: Applying selection operators for generation 29.
2023-08-03 19:43:41,723 INFO: Applying genetic operators for generation 29.
2023-08-03 19:43:41,733 INFO: Evaluating fitness for for generation 29.
2023-08-03 19:43:41,733 INFO: Will evaluate fitness for 37 individuals.
2023-08-03 19:43:42,314 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:43:42,315 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:43:42,320 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:43:42,320 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:43:42,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:43:42,358 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:43:42,360 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.43049547057754434 ,rho=0.10963044345620299 ,epsilon=0.0008588272910375114 ,centered=True ,beta_1=0.9948000034047522 ,beta_2=0.7310415065421376 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6623001279632676 ,beta=0.8817722740088662].
2023-08-03 19:43:42,360 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.43049547057754434 ,rho=0.10963044345620299 ,epsilon=0.0008588272910375114 ,centered=True ,beta_1=0.9948000034047522 ,beta_2=0.7310415065421376 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6623001279632676 ,beta=0.8817722740088662].
2023-08-03 19:44:02,293 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8191659472489597, momentum=0.8428343405973161 ,nesterov=False ,amsgrad=True ,weight_decay=0.009393920991193884 ,use_ema=False ,ema_momentum=0.2874153080678036 ,rho=0.2797717523341201 ,epsilon=0.0008359901710040264 ,centered=False ,beta_1=0.1851818675278596 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.4757268447694807 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.23109241783230994 ,beta=0.806390358097268].
2023-08-03 19:44:02,293 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8191659472489597, momentum=0.8428343405973161 ,nesterov=False ,amsgrad=True ,weight_decay=0.009393920991193884 ,use_ema=False ,ema_momentum=0.2874153080678036 ,rho=0.2797717523341201 ,epsilon=0.0008359901710040264 ,centered=False ,beta_1=0.1851818675278596 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.4757268447694807 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.23109241783230994 ,beta=0.806390358097268].
2023-08-03 19:44:02,706 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4956530525706684, momentum=0.6746003928215109 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.5853218067792827 ,epsilon=0.0004437697050446628 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5410354012001073 ,learning_rate_power=-0.7413705722812192 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5193112545831065 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.08225714509237148].
2023-08-03 19:44:02,706 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4956530525706684, momentum=0.6746003928215109 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.5853218067792827 ,epsilon=0.0004437697050446628 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5410354012001073 ,learning_rate_power=-0.7413705722812192 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5193112545831065 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.08225714509237148].
2023-08-03 19:44:02,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:44:02,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:44:06,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:44:06,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:44:23,276 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.06487196035848597 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9787932676417981 ,beta=0.3614899469638969].
2023-08-03 19:44:23,277 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.06487196035848597 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9787932676417981 ,beta=0.3614899469638969].
2023-08-03 19:44:26,575 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:44:26,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:44:27,229 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:44:27,229 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:44:37,332 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=0.0035307799489571147 ,use_ema=True ,ema_momentum=0.7842100620634176 ,rho=0.11224149371256342 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.031521737125473015 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.07168740499278037 ,initial_accumulator_value=0.3929675283221832 ,l1_regularization_strength=0.7011766884851205 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7377831909247323 ,beta=0.8730675736031106].
2023-08-03 19:44:37,332 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=0.0035307799489571147 ,use_ema=True ,ema_momentum=0.7842100620634176 ,rho=0.11224149371256342 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.031521737125473015 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.07168740499278037 ,initial_accumulator_value=0.3929675283221832 ,l1_regularization_strength=0.7011766884851205 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7377831909247323 ,beta=0.8730675736031106].
2023-08-03 19:44:43,779 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.4748054850362272, momentum=0.48528839128973933 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.5296429327160185 ,epsilon=0.00031755352344218043 ,centered=False ,beta_1=0.7947789809427023 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5928518424001651 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3216245476859283 ,beta=0.7299323966596429].
2023-08-03 19:44:43,779 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.4748054850362272, momentum=0.48528839128973933 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.5296429327160185 ,epsilon=0.00031755352344218043 ,centered=False ,beta_1=0.7947789809427023 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5928518424001651 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3216245476859283 ,beta=0.7299323966596429].
2023-08-03 19:44:46,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:44:46,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:44:47,693 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:44:47,693 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:45:02,463 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.2790687787684172, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.2120205644807066 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:45:02,463 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.2790687787684172, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.2120205644807066 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:45:06,941 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:45:06,941 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:45:07,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9041197481424252, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0003570150706864235 ,centered=False ,beta_1=0.4232755707131387 ,beta_2=0.5391509200276615 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9373044649942831 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.16343955662724252].
2023-08-03 19:45:07,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9041197481424252, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0003570150706864235 ,centered=False ,beta_1=0.4232755707131387 ,beta_2=0.5391509200276615 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9373044649942831 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.16343955662724252].
2023-08-03 19:45:08,041 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7049614810022403, momentum=0.013725767480687767 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.9738894540617339 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.1384370246663863 ,learning_rate_power=-0.3374453718517254 ,initial_accumulator_value=0.2868768014806944 ,l1_regularization_strength=0.1523465058175496 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9186216056477731 ,beta=0.7299323966596429].
2023-08-03 19:45:08,041 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7049614810022403, momentum=0.013725767480687767 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.9738894540617339 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.1384370246663863 ,learning_rate_power=-0.3374453718517254 ,initial_accumulator_value=0.2868768014806944 ,l1_regularization_strength=0.1523465058175496 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9186216056477731 ,beta=0.7299323966596429].
2023-08-03 19:45:22,990 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:45:22,991 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:45:26,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:45:26,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:45:31,801 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.5051742405938648 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3054097292963298 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.0003246085946861932 ,beta=0.6778245170750776].
2023-08-03 19:45:31,802 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.5051742405938648 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3054097292963298 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.0003246085946861932 ,beta=0.6778245170750776].
2023-08-03 19:45:42,689 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3402754396007007, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4603989337026342 ,rho=0.014881700930028274 ,epsilon=0.00026744988150262085 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.27729423013740784 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.23125043297579895 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.41124894081116503 ,beta=0.7299323966596429].
2023-08-03 19:45:42,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3402754396007007, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4603989337026342 ,rho=0.014881700930028274 ,epsilon=0.00026744988150262085 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.27729423013740784 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.23125043297579895 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.41124894081116503 ,beta=0.7299323966596429].
2023-08-03 19:45:43,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:45:43,428 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:45:47,573 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:45:47,573 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:04,952 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.45308884862268706 ,beta_2=0.6408400420787056 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:04,952 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.45308884862268706 ,beta_2=0.6408400420787056 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:05,531 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:05,531 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:07,499 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6592301856340789, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.2570412970914122 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.4302379685663853 ,beta_2=0.8481223319083994 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7159377918885512 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9041931471954457 ,beta=0.8997696628473763].
2023-08-03 19:46:07,500 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6592301856340789, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.2570412970914122 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.4302379685663853 ,beta_2=0.8481223319083994 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7159377918885512 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9041931471954457 ,beta=0.8997696628473763].
2023-08-03 19:46:07,750 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.766544755032611 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.9573426359737435 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05430970733633678 ,beta=0.7299323966596429].
2023-08-03 19:46:07,750 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.766544755032611 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.9573426359737435 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05430970733633678 ,beta=0.7299323966596429].
2023-08-03 19:46:25,672 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:25,672 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:26,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:26,431 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:27,910 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5378562846554781, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4103384019457519 ,rho=0.014180526947371375 ,epsilon=4.1078819102871476e-05 ,centered=False ,beta_1=0.46196020132740023 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4744760901665679 ,initial_accumulator_value=0.5453707006534222 ,l1_regularization_strength=0.3088779718412594 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5598011112807734 ,beta=0.7299323966596429].
2023-08-03 19:46:27,910 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5378562846554781, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4103384019457519 ,rho=0.014180526947371375 ,epsilon=4.1078819102871476e-05 ,centered=False ,beta_1=0.46196020132740023 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4744760901665679 ,initial_accumulator_value=0.5453707006534222 ,l1_regularization_strength=0.3088779718412594 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5598011112807734 ,beta=0.7299323966596429].
2023-08-03 19:46:31,721 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:31,721 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:46,283 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:46,284 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:46,816 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:46,816 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:52,174 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:52,175 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:46:52,768 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.004479295027240067 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.9264992157921337 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8251664828932395 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8669187196706549 ,beta=0.7299323966596429].
2023-08-03 19:46:52,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.004479295027240067 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.9264992157921337 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8251664828932395 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8669187196706549 ,beta=0.7299323966596429].
2023-08-03 19:47:12,963 INFO: Applying selection operators for generation 30.
2023-08-03 19:47:12,964 INFO: Applying genetic operators for generation 30.
2023-08-03 19:47:12,970 INFO: Evaluating fitness for for generation 30.
2023-08-03 19:47:12,970 INFO: Will evaluate fitness for 31 individuals.
2023-08-03 19:47:13,516 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5951103078184516, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.528599107889714 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5292882860984895 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7770999440652968 ,initial_accumulator_value=0.5131084284938316 ,l1_regularization_strength=0.834623724811917 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9002839732087985 ,beta=0.7299323966596429].
2023-08-03 19:47:13,516 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5951103078184516, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.528599107889714 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5292882860984895 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7770999440652968 ,initial_accumulator_value=0.5131084284938316 ,l1_regularization_strength=0.834623724811917 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9002839732087985 ,beta=0.7299323966596429].
2023-08-03 19:47:13,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:13,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:13,535 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.43608967362725715, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.9381110032292862 ,epsilon=2.991916094373486e-05 ,centered=False ,beta_1=0.5312276933505771 ,beta_2=0.944165471627781 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.10638764883848362 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9690352390253347 ,beta=0.7299323966596429].
2023-08-03 19:47:13,535 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.43608967362725715, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.9381110032292862 ,epsilon=2.991916094373486e-05 ,centered=False ,beta_1=0.5312276933505771 ,beta_2=0.944165471627781 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.10638764883848362 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9690352390253347 ,beta=0.7299323966596429].
2023-08-03 19:47:13,568 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:13,569 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:34,072 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:34,073 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:34,740 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3756602517850606, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8295676507607298 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.28716115326459424 ,beta_2=0.9415425507529139 ,learning_rate_power=-0.07121789057559658 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5683605270144917 ,beta=0.7299323966596429].
2023-08-03 19:47:34,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3756602517850606, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8295676507607298 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.28716115326459424 ,beta_2=0.9415425507529139 ,learning_rate_power=-0.07121789057559658 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5683605270144917 ,beta=0.7299323966596429].
2023-08-03 19:47:35,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:35,421 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:38,170 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:38,170 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:54,315 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:54,316 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:54,698 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:54,698 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:56,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:56,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:58,322 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.1490073240388069, momentum=0.7783878035874422 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8208225211136373 ,rho=0.014180526947371375 ,epsilon=0.0006238562892418767 ,centered=False ,beta_1=0.9251166683879081 ,beta_2=0.8314833447018916 ,learning_rate_power=-0.6925878295026999 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.22106211361223493 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:47:58,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.1490073240388069, momentum=0.7783878035874422 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8208225211136373 ,rho=0.014180526947371375 ,epsilon=0.0006238562892418767 ,centered=False ,beta_1=0.9251166683879081 ,beta_2=0.8314833447018916 ,learning_rate_power=-0.6925878295026999 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.22106211361223493 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:14,599 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:14,600 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:15,134 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.5646295734156102 ,nesterov=False ,amsgrad=False ,weight_decay=9.123435945826799e-05 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7136369941724613 ,epsilon=0.00010960979262569952 ,centered=False ,beta_1=0.10302479004337162 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5823480341387487 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.09577974587083604 ,beta=0.7299323966596429].
2023-08-03 19:48:15,134 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.5646295734156102 ,nesterov=False ,amsgrad=False ,weight_decay=9.123435945826799e-05 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7136369941724613 ,epsilon=0.00010960979262569952 ,centered=False ,beta_1=0.10302479004337162 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5823480341387487 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.09577974587083604 ,beta=0.7299323966596429].
2023-08-03 19:48:16,791 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:16,791 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:23,148 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5586087487662674 ,beta_2=0.8808098566410315 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.11500065798681913 ,l1_regularization_strength=0.021202783752519272 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.07704570331321525].
2023-08-03 19:48:23,148 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5586087487662674 ,beta_2=0.8808098566410315 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.11500065798681913 ,l1_regularization_strength=0.021202783752519272 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.07704570331321525].
2023-08-03 19:48:35,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:35,757 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:37,156 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:37,156 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:41,657 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:41,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:42,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:42,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:56,148 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:56,149 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:57,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:48:57,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:01,865 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:01,866 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:03,111 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:03,111 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:16,428 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:16,428 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:18,278 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:18,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:21,910 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:21,910 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:23,533 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.12203408270480653, momentum=0.5201853275030862 ,nesterov=False ,amsgrad=False ,weight_decay=0.0019742285758223 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5582637341544121 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.057028468825013334 ,initial_accumulator_value=0.5651285131806386 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.44540849351691236 ,beta=0.7299323966596429].
2023-08-03 19:49:23,533 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.12203408270480653, momentum=0.5201853275030862 ,nesterov=False ,amsgrad=False ,weight_decay=0.0019742285758223 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5582637341544121 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.057028468825013334 ,initial_accumulator_value=0.5651285131806386 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.44540849351691236 ,beta=0.7299323966596429].
2023-08-03 19:49:37,138 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:37,138 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:38,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:38,597 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:42,540 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.29040272929082844, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0021505589034556886 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9057092635309678 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:49:42,540 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.29040272929082844, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0021505589034556886 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9057092635309678 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:07,309 INFO: Applying selection operators for generation 31.
2023-08-03 19:50:07,310 INFO: Applying genetic operators for generation 31.
2023-08-03 19:50:07,314 INFO: Evaluating fitness for for generation 31.
2023-08-03 19:50:07,315 INFO: Will evaluate fitness for 32 individuals.
2023-08-03 19:50:07,864 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9289985817048223 ,rho=0.44283327994632815 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.3048839383287738 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.16578004606670338 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8854412675855906 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.9625953328268195].
2023-08-03 19:50:07,865 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9289985817048223 ,rho=0.44283327994632815 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.3048839383287738 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.16578004606670338 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8854412675855906 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.9625953328268195].
2023-08-03 19:50:07,936 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:07,936 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:07,948 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:07,948 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:07,960 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:07,960 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:28,180 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:28,180 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:28,719 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:28,720 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:28,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:28,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:31,931 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:31,931 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:48,287 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:48,287 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:49,072 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:49,072 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:49,325 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:49,325 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:52,572 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:50:52,573 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:09,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:09,225 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:09,400 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:09,400 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:09,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:09,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:12,736 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:12,737 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:29,475 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:29,475 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:29,586 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:29,586 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:30,762 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:30,762 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:32,677 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.5792045451446118 ,nesterov=False ,amsgrad=True ,weight_decay=0.009849333470843219 ,use_ema=True ,ema_momentum=0.1828484150026114 ,rho=0.7918571427177257 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.09398421523269929 ,beta_2=0.12238123301213821 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9069015368175223 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.30495333520999035 ,beta=0.24237962036030003].
2023-08-03 19:51:32,677 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.5792045451446118 ,nesterov=False ,amsgrad=True ,weight_decay=0.009849333470843219 ,use_ema=True ,ema_momentum=0.1828484150026114 ,rho=0.7918571427177257 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.09398421523269929 ,beta_2=0.12238123301213821 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9069015368175223 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.30495333520999035 ,beta=0.24237962036030003].
2023-08-03 19:51:49,735 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:49,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:50,158 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:50,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:51,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:51,426 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:57,520 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:51:57,521 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:52:10,175 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:52:10,175 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:52:10,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:52:10,560 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:52:11,995 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:52:11,995 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:52:18,305 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8209273489122471 ,rho=0.6420475946050446 ,epsilon=0.000723179240570685 ,centered=False ,beta_1=0.08224702984614451 ,beta_2=0.9184102502983799 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6957452201138367 ,beta=0.4312473572023149].
2023-08-03 19:52:18,305 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8209273489122471 ,rho=0.6420475946050446 ,epsilon=0.000723179240570685 ,centered=False ,beta_1=0.08224702984614451 ,beta_2=0.9184102502983799 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6957452201138367 ,beta=0.4312473572023149].
2023-08-03 19:52:30,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:52:30,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:52:31,320 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.5012897903210891 ,nesterov=True ,amsgrad=False ,weight_decay=0.0037099672137279618 ,use_ema=True ,ema_momentum=0.8603860035189221 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.24234390019738927 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.047283358342832926 ,initial_accumulator_value=0.5306406906466034 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1559096776561808 ,beta=0.39669151407615466].
2023-08-03 19:52:31,320 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.5012897903210891 ,nesterov=True ,amsgrad=False ,weight_decay=0.0037099672137279618 ,use_ema=True ,ema_momentum=0.8603860035189221 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.24234390019738927 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.047283358342832926 ,initial_accumulator_value=0.5306406906466034 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1559096776561808 ,beta=0.39669151407615466].
2023-08-03 19:52:32,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.48723635793673536, momentum=0.37721595725788815 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.2063185433975773e-05 ,centered=True ,beta_1=0.8074929311752198 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.2244947663005784 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.33224131086485875 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8009760623771315 ,beta=0.7299323966596429].
2023-08-03 19:52:32,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.48723635793673536, momentum=0.37721595725788815 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.2063185433975773e-05 ,centered=True ,beta_1=0.8074929311752198 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.2244947663005784 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.33224131086485875 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8009760623771315 ,beta=0.7299323966596429].
2023-08-03 19:52:35,995 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.1771556051512212 ,rho=0.31424893277773047 ,epsilon=0.000246455037420823 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5256763836190628 ,initial_accumulator_value=0.7558167157637176 ,l1_regularization_strength=0.489044650998934 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.08074511182292632 ,beta=0.10674558036338533].
2023-08-03 19:52:35,995 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.1771556051512212 ,rho=0.31424893277773047 ,epsilon=0.000246455037420823 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5256763836190628 ,initial_accumulator_value=0.7558167157637176 ,l1_regularization_strength=0.489044650998934 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.08074511182292632 ,beta=0.10674558036338533].
2023-08-03 19:52:58,983 INFO: Applying selection operators for generation 32.
2023-08-03 19:52:58,984 INFO: Applying genetic operators for generation 32.
2023-08-03 19:52:58,990 INFO: Evaluating fitness for for generation 32.
2023-08-03 19:52:58,990 INFO: Will evaluate fitness for 33 individuals.
2023-08-03 19:52:59,528 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:52:59,529 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:52:59,530 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7046529907149511, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8468334829295612 ,rho=0.18771755564710368 ,epsilon=0.0006254256261173932 ,centered=False ,beta_1=0.5820523438677561 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.07216146252834732 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.33648680769776995 ,beta=0.7299323966596429].
2023-08-03 19:52:59,531 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7046529907149511, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8468334829295612 ,rho=0.18771755564710368 ,epsilon=0.0006254256261173932 ,centered=False ,beta_1=0.5820523438677561 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.07216146252834732 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.33648680769776995 ,beta=0.7299323966596429].
2023-08-03 19:52:59,632 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:52:59,633 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:52:59,679 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.8274918478067729 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.05580366030614459 ,rho=0.014180526947371375 ,epsilon=0.0004171513432945187 ,centered=False ,beta_1=0.9081511784788592 ,beta_2=0.25545606442963575 ,learning_rate_power=-0.9965852182622167 ,initial_accumulator_value=0.3625189516925421 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.013072545053856577].
2023-08-03 19:52:59,679 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.8274918478067729 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.05580366030614459 ,rho=0.014180526947371375 ,epsilon=0.0004171513432945187 ,centered=False ,beta_1=0.9081511784788592 ,beta_2=0.25545606442963575 ,learning_rate_power=-0.9965852182622167 ,initial_accumulator_value=0.3625189516925421 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.013072545053856577].
2023-08-03 19:53:19,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:53:19,930 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:53:20,033 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:53:20,034 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:53:24,163 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=0.006321917652043665 ,use_ema=True ,ema_momentum=0.3109040932273608 ,rho=0.014180526947371375 ,epsilon=0.0008355490761131514 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6596281663297147 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:53:24,163 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=0.006321917652043665 ,use_ema=True ,ema_momentum=0.3109040932273608 ,rho=0.014180526947371375 ,epsilon=0.0008355490761131514 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6596281663297147 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:53:34,524 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:53:34,524 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:53:40,345 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:53:40,345 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:53:40,399 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:53:40,399 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:53:49,351 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:53:49,351 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:53:54,643 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010983399333159283 ,rho=0.8367104217595035 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8800281798467434 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.963186379923908 ,l1_regularization_strength=0.8182485450887476 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.4996969067919794].
2023-08-03 19:53:54,643 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010983399333159283 ,rho=0.8367104217595035 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8800281798467434 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.963186379923908 ,l1_regularization_strength=0.8182485450887476 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.4996969067919794].
2023-08-03 19:54:00,667 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.012296783627761432, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.662015877416953 ,rho=0.10823124219657043 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.9234128962401472 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9909661899608199 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6866046099336026 ,beta=0.46244352085060003].
2023-08-03 19:54:00,668 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.012296783627761432, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.662015877416953 ,rho=0.10823124219657043 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.9234128962401472 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9909661899608199 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6866046099336026 ,beta=0.46244352085060003].
2023-08-03 19:54:01,445 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:01,445 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:09,880 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:09,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:18,655 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:18,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:21,008 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.2827114349751434 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.29082230937094455 ,learning_rate_power=-0.016575510720580278 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6530662046374214 ,beta=0.056597507165523586].
2023-08-03 19:54:21,008 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.2827114349751434 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.29082230937094455 ,learning_rate_power=-0.016575510720580278 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6530662046374214 ,beta=0.056597507165523586].
2023-08-03 19:54:21,919 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:21,919 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:31,114 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:31,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:38,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:38,729 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:42,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:42,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:44,640 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:44,641 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:51,699 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.11697847786947979 ,rho=0.014180526947371375 ,epsilon=0.00019477220083199764 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8640167514581365 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06300712501161898 ,beta=0.7031572578563766].
2023-08-03 19:54:51,699 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.11697847786947979 ,rho=0.014180526947371375 ,epsilon=0.00019477220083199764 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8640167514581365 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06300712501161898 ,beta=0.7031572578563766].
2023-08-03 19:54:59,396 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:54:59,397 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:55:03,673 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:55:03,674 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:55:05,044 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.8028137426873212 ,nesterov=False ,amsgrad=False ,weight_decay=0.0034179090870131677 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.0053192051349816305 ,beta_2=0.340899211549764 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.7470747937163699 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.016688147226774253 ,beta=0.4371874804387176].
2023-08-03 19:55:05,044 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.8028137426873212 ,nesterov=False ,amsgrad=False ,weight_decay=0.0034179090870131677 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.0053192051349816305 ,beta_2=0.340899211549764 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.7470747937163699 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.016688147226774253 ,beta=0.4371874804387176].
2023-08-03 19:55:15,236 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:55:15,236 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:55:24,185 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:55:24,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:55:26,091 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:55:26,091 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:55:35,737 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3617422262713904, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.03095227534280065 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.2889161913035668 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3678451398227218 ,beta=0.7669168236010668].
2023-08-03 19:55:35,737 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3617422262713904, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.03095227534280065 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.2889161913035668 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3678451398227218 ,beta=0.7669168236010668].
2023-08-03 19:55:44,547 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:55:44,547 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:55:46,814 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:55:46,814 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:55:56,260 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.943542731279639, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.08776145259533896 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.803455974935822 ,l1_regularization_strength=0.5816731426842947 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:55:56,261 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.943542731279639, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.08776145259533896 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.803455974935822 ,l1_regularization_strength=0.5816731426842947 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:15,395 INFO: Applying selection operators for generation 33.
2023-08-03 19:56:15,395 INFO: Applying genetic operators for generation 33.
2023-08-03 19:56:15,402 INFO: Evaluating fitness for for generation 33.
2023-08-03 19:56:15,402 INFO: Will evaluate fitness for 29 individuals.
2023-08-03 19:56:15,951 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:15,951 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:15,957 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:15,957 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:16,088 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:16,088 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:16,097 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:16,097 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:35,877 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14098529859132902, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6058291741466364 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.0031667104323436224 ,beta_2=0.10345553626935822 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.851928998415639 ,l1_regularization_strength=0.7713908771380799 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:35,877 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14098529859132902, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6058291741466364 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.0031667104323436224 ,beta_2=0.10345553626935822 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.851928998415639 ,l1_regularization_strength=0.7713908771380799 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:36,159 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:36,159 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:36,371 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:36,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:37,028 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8394378307654585 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.30242913754593903 ,initial_accumulator_value=0.35363804870685656 ,l1_regularization_strength=0.27103256745536974 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8447540126098129 ,beta=0.7299323966596429].
2023-08-03 19:56:37,028 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8394378307654585 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.30242913754593903 ,initial_accumulator_value=0.35363804870685656 ,l1_regularization_strength=0.27103256745536974 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8447540126098129 ,beta=0.7299323966596429].
2023-08-03 19:56:55,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6965954709624979, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7219442604644302 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8552400490925325 ,l1_regularization_strength=0.7416299144819803 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:55,202 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6965954709624979, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7219442604644302 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8552400490925325 ,l1_regularization_strength=0.7416299144819803 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:56,663 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:56,664 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:57,188 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9504894463777581 ,rho=0.09922327046130841 ,epsilon=0.0006488743237742134 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9161015789048192 ,learning_rate_power=-0.1137120130034659 ,initial_accumulator_value=0.5709833226807494 ,l1_regularization_strength=0.08948702120090168 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3672597463384851 ,beta=0.7299323966596429].
2023-08-03 19:56:57,189 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9504894463777581 ,rho=0.09922327046130841 ,epsilon=0.0006488743237742134 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9161015789048192 ,learning_rate_power=-0.1137120130034659 ,initial_accumulator_value=0.5709833226807494 ,l1_regularization_strength=0.08948702120090168 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3672597463384851 ,beta=0.7299323966596429].
2023-08-03 19:56:57,405 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.4595129109757812, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7913577142124649 ,rho=0.014180526947371375 ,epsilon=0.0005678053961205922 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4509155402410312 ,initial_accumulator_value=0.7637463939221256 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:56:57,405 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.4595129109757812, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7913577142124649 ,rho=0.014180526947371375 ,epsilon=0.0005678053961205922 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4509155402410312 ,initial_accumulator_value=0.7637463939221256 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:57:15,788 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:57:15,788 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:57:16,022 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:57:16,022 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:57:17,669 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:57:17,669 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:57:19,933 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3505360958803133, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3151951741065543 ,rho=0.014180526947371375 ,epsilon=0.0009025316370673433 ,centered=False ,beta_1=0.6942732086446229 ,beta_2=0.25450440161389476 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.6314072053615377 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1586980207771551 ,beta=0.7299323966596429].
2023-08-03 19:57:19,934 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3505360958803133, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3151951741065543 ,rho=0.014180526947371375 ,epsilon=0.0009025316370673433 ,centered=False ,beta_1=0.6942732086446229 ,beta_2=0.25450440161389476 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.6314072053615377 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1586980207771551 ,beta=0.7299323966596429].
2023-08-03 19:57:35,797 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.38540250140037446, momentum=0.5057453321911312 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3933192121627389 ,rho=0.10806464067090449 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7262915052706402 ,initial_accumulator_value=0.7326080525559356 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6657494642006707 ,beta=0.7733298958468047].
2023-08-03 19:57:35,797 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.38540250140037446, momentum=0.5057453321911312 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3933192121627389 ,rho=0.10806464067090449 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7262915052706402 ,initial_accumulator_value=0.7326080525559356 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6657494642006707 ,beta=0.7733298958468047].
2023-08-03 19:57:36,419 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.008123573599971148 ,use_ema=True ,ema_momentum=0.5112051164109113 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5943409312966482 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9811670916423932 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8830108981528417 ,beta=0.7299323966596429].
2023-08-03 19:57:36,419 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.008123573599971148 ,use_ema=True ,ema_momentum=0.5112051164109113 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5943409312966482 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9811670916423932 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8830108981528417 ,beta=0.7299323966596429].
2023-08-03 19:57:38,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:57:38,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:57:44,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:57:44,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:57:58,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:57:58,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:57:59,345 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:57:59,346 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:58:02,371 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:58:02,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:58:05,524 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4869502124350259 ,rho=0.014180526947371375 ,epsilon=0.0007379811033683528 ,centered=False ,beta_1=0.5926120024885801 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8173892191950995 ,initial_accumulator_value=0.6999805072924655 ,l1_regularization_strength=0.7468282170891221 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.36158627960649947 ,beta=0.15767699061389429].
2023-08-03 19:58:05,524 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4869502124350259 ,rho=0.014180526947371375 ,epsilon=0.0007379811033683528 ,centered=False ,beta_1=0.5926120024885801 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8173892191950995 ,initial_accumulator_value=0.6999805072924655 ,l1_regularization_strength=0.7468282170891221 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.36158627960649947 ,beta=0.15767699061389429].
2023-08-03 19:58:18,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:58:18,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:58:20,162 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3600606718498677, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2507538951431274 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5272298118820237 ,learning_rate_power=-0.7340044473716946 ,initial_accumulator_value=0.0669845636810219 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.8918510029692039].
2023-08-03 19:58:20,162 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3600606718498677, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.2507538951431274 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5272298118820237 ,learning_rate_power=-0.7340044473716946 ,initial_accumulator_value=0.0669845636810219 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.8918510029692039].
2023-08-03 19:58:23,577 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.4979356119157857 ,epsilon=0.0009787923593253 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.1746172085820883 ,learning_rate_power=-0.6066452106043114 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6441914685465538 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06755953044338048 ,beta=0.7299323966596429].
2023-08-03 19:58:23,578 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.4979356119157857 ,epsilon=0.0009787923593253 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.1746172085820883 ,learning_rate_power=-0.6066452106043114 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6441914685465538 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06755953044338048 ,beta=0.7299323966596429].
2023-08-03 19:58:39,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:58:39,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:58:44,380 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:58:44,381 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:03,826 INFO: Applying selection operators for generation 34.
2023-08-03 19:59:03,826 INFO: Applying genetic operators for generation 34.
2023-08-03 19:59:03,830 INFO: Evaluating fitness for for generation 34.
2023-08-03 19:59:03,830 INFO: Will evaluate fitness for 26 individuals.
2023-08-03 19:59:04,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:04,366 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:04,385 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:04,386 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:04,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:04,404 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:04,422 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:04,423 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:24,261 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6092967312939144 ,rho=0.014180526947371375 ,epsilon=0.0008014059631873914 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3330038314105954 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06795278065064825 ,beta=0.7299323966596429].
2023-08-03 19:59:24,261 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6092967312939144 ,rho=0.014180526947371375 ,epsilon=0.0008014059631873914 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3330038314105954 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06795278065064825 ,beta=0.7299323966596429].
2023-08-03 19:59:24,420 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:24,421 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:24,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:24,538 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:24,610 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:24,610 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:43,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.8745411778543292 ,epsilon=0.0009896740260023722 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.14287978548508662 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.7845362270150045 ,l1_regularization_strength=0.6672377161484885 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9056513064241456 ,beta=0.5997133765349145].
2023-08-03 19:59:43,070 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.8745411778543292 ,epsilon=0.0009896740260023722 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.14287978548508662 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.7845362270150045 ,l1_regularization_strength=0.6672377161484885 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9056513064241456 ,beta=0.5997133765349145].
2023-08-03 19:59:45,150 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:45,150 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:45,402 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:45,402 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:45,829 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 19:59:45,829 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:05,381 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:05,381 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:05,808 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.03941137876452072 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6929471909438892 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3406386549455688 ,beta=0.9670089468276156].
2023-08-03 20:00:05,808 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.03941137876452072 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6929471909438892 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3406386549455688 ,beta=0.9670089468276156].
2023-08-03 20:00:06,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:06,248 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:06,635 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.8559300816137938 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8942787291486923 ,rho=0.7916834907890579 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.2857060714148053 ,beta_2=0.8349094374659212 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.5132136358972735].
2023-08-03 20:00:06,635 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.8559300816137938 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8942787291486923 ,rho=0.7916834907890579 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.2857060714148053 ,beta_2=0.8349094374659212 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.5132136358972735].
2023-08-03 20:00:25,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:25,328 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:25,420 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:25,420 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:26,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:26,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:30,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:30,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:45,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:45,410 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:45,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:45,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:47,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:47,015 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:50,406 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:00:50,406 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:01:06,159 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:01:06,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:01:26,138 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:01:26,138 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:01:45,617 INFO: Applying selection operators for generation 35.
2023-08-03 20:01:45,617 INFO: Applying genetic operators for generation 35.
2023-08-03 20:01:45,627 INFO: Evaluating fitness for for generation 35.
2023-08-03 20:01:45,627 INFO: Will evaluate fitness for 31 individuals.
2023-08-03 20:01:46,196 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4810408984560949, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.21540415915102118 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.520059191235396 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7433972710430609].
2023-08-03 20:01:46,196 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4810408984560949, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.21540415915102118 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.520059191235396 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7433972710430609].
2023-08-03 20:01:46,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:01:46,202 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:01:46,218 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:01:46,218 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:01:46,220 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:01:46,220 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:06,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.6015614756367129 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.3754396845943061 ,epsilon=0.00027337416663334677 ,centered=False ,beta_1=0.08632328162324654 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.48061270421169344 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1969629600333893 ,beta=0.33963402850534263].
2023-08-03 20:02:06,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.6015614756367129 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.3754396845943061 ,epsilon=0.00027337416663334677 ,centered=False ,beta_1=0.08632328162324654 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.48061270421169344 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1969629600333893 ,beta=0.33963402850534263].
2023-08-03 20:02:06,637 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:06,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:06,679 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:06,679 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:10,270 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.43408205338027184, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8343683764195076 ,beta_2=0.18816431057487604 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.670111230398515 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.14586487688043703].
2023-08-03 20:02:10,270 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.43408205338027184, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8343683764195076 ,beta_2=0.18816431057487604 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.670111230398515 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.14586487688043703].
2023-08-03 20:02:26,917 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6119616393552751 ,rho=0.8344119005980629 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.22622642837301332 ,learning_rate_power=-0.5748199428484266 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:26,917 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6119616393552751 ,rho=0.8344119005980629 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.22622642837301332 ,learning_rate_power=-0.5748199428484266 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:27,059 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:27,059 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:30,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:30,363 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:31,322 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:31,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:47,544 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8334553736413198, momentum=0.2957252493211464 ,nesterov=False ,amsgrad=False ,weight_decay=0.007957742739796514 ,use_ema=False ,ema_momentum=0.8403202703838917 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3546838982913847 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.39588447846077013 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8164161116950439 ,beta=0.8353292230502725].
2023-08-03 20:02:47,544 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8334553736413198, momentum=0.2957252493211464 ,nesterov=False ,amsgrad=False ,weight_decay=0.007957742739796514 ,use_ema=False ,ema_momentum=0.8403202703838917 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3546838982913847 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.39588447846077013 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8164161116950439 ,beta=0.8353292230502725].
2023-08-03 20:02:50,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.496823880523257, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.6351486209334143 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1971568727223999 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8709541829464963 ,beta=0.7299323966596429].
2023-08-03 20:02:50,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.496823880523257, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.6351486209334143 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1971568727223999 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8709541829464963 ,beta=0.7299323966596429].
2023-08-03 20:02:50,393 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:50,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:51,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:02:51,597 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:03:08,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:03:08,392 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:03:11,315 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.4692677894318119 ,epsilon=0.0009824596874511672 ,centered=False ,beta_1=0.06030557183257279 ,beta_2=0.4292945759019505 ,learning_rate_power=-0.5631347773134239 ,initial_accumulator_value=0.5817518665489582 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5806683250236092 ,beta=0.7299323966596429].
2023-08-03 20:03:11,316 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.4692677894318119 ,epsilon=0.0009824596874511672 ,centered=False ,beta_1=0.06030557183257279 ,beta_2=0.4292945759019505 ,learning_rate_power=-0.5631347773134239 ,initial_accumulator_value=0.5817518665489582 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5806683250236092 ,beta=0.7299323966596429].
2023-08-03 20:03:11,850 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:03:11,850 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:03:15,245 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3627076304514666, momentum=0.2407247768138573 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5124672619055478 ,rho=0.7904728286519973 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.492457598323885 ,beta_2=0.07155181855104387 ,learning_rate_power=-0.2600766975929767 ,initial_accumulator_value=0.7404019381550996 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5564608290497759 ,beta=0.7299323966596429].
2023-08-03 20:03:15,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3627076304514666, momentum=0.2407247768138573 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5124672619055478 ,rho=0.7904728286519973 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.492457598323885 ,beta_2=0.07155181855104387 ,learning_rate_power=-0.2600766975929767 ,initial_accumulator_value=0.7404019381550996 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5564608290497759 ,beta=0.7299323966596429].
2023-08-03 20:03:28,890 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6082597467525196 ,rho=0.16010425841180997 ,epsilon=0.0008496744976569211 ,centered=False ,beta_1=0.534964437844219 ,beta_2=0.8892893105935615 ,learning_rate_power=-0.24523328244708575 ,initial_accumulator_value=0.13547819180988918 ,l1_regularization_strength=0.6822114418589182 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9786549958243107 ,beta=0.7299323966596429].
2023-08-03 20:03:28,890 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6082597467525196 ,rho=0.16010425841180997 ,epsilon=0.0008496744976569211 ,centered=False ,beta_1=0.534964437844219 ,beta_2=0.8892893105935615 ,learning_rate_power=-0.24523328244708575 ,initial_accumulator_value=0.13547819180988918 ,l1_regularization_strength=0.6822114418589182 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9786549958243107 ,beta=0.7299323966596429].
2023-08-03 20:03:32,871 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:03:32,872 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:03:35,774 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.6706417507314878 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0008066427722785775 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.703746542711757 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.24869075594732581 ,beta=0.7299323966596429].
2023-08-03 20:03:35,774 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.6706417507314878 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0008066427722785775 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.703746542711757 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.24869075594732581 ,beta=0.7299323966596429].
2023-08-03 20:03:39,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:03:39,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:03:53,400 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.16855598688536488, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.29578060421641694 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5930656044505475 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9697579652674215 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9538021606545631 ,beta=0.7299323966596429].
2023-08-03 20:03:53,400 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.16855598688536488, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.29578060421641694 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5930656044505475 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9697579652674215 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9538021606545631 ,beta=0.7299323966596429].
2023-08-03 20:03:53,866 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.00482574371808415 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00039856933499310074 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4837146140781845 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.38028797598202146 ,beta=0.8968468540876755].
2023-08-03 20:03:53,866 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.00482574371808415 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00039856933499310074 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4837146140781845 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.38028797598202146 ,beta=0.8968468540876755].
2023-08-03 20:03:59,123 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9533066420025039, momentum=0.23354852433762396 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0007618162543842638 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8229876761469644 ,initial_accumulator_value=0.60453721902789 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3741122115600479 ,beta=0.6775813306832765].
2023-08-03 20:03:59,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9533066420025039, momentum=0.23354852433762396 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0007618162543842638 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8229876761469644 ,initial_accumulator_value=0.60453721902789 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3741122115600479 ,beta=0.6775813306832765].
2023-08-03 20:03:59,835 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8470149729372214, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6729249500264609 ,rho=0.3604393560460548 ,epsilon=0.0007948038313278789 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8335167513156672 ,initial_accumulator_value=0.19228266406184713 ,l1_regularization_strength=0.34411606385383486 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3891870795709128 ,beta=0.7299323966596429].
2023-08-03 20:03:59,835 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8470149729372214, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6729249500264609 ,rho=0.3604393560460548 ,epsilon=0.0007948038313278789 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8335167513156672 ,initial_accumulator_value=0.19228266406184713 ,l1_regularization_strength=0.34411606385383486 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3891870795709128 ,beta=0.7299323966596429].
2023-08-03 20:04:17,786 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:04:17,786 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:04:19,452 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:04:19,452 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:04:23,430 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.10199572096471354, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.7216618165466252 ,epsilon=0.0003734095442377897 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.1854484194257523 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9057685692559352 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6461681771510571 ,beta=0.7299323966596429].
2023-08-03 20:04:23,431 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.10199572096471354, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.7216618165466252 ,epsilon=0.0003734095442377897 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.1854484194257523 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9057685692559352 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6461681771510571 ,beta=0.7299323966596429].
2023-08-03 20:04:47,044 INFO: Applying selection operators for generation 36.
2023-08-03 20:04:47,045 INFO: Applying genetic operators for generation 36.
2023-08-03 20:04:47,050 INFO: Evaluating fitness for for generation 36.
2023-08-03 20:04:47,050 INFO: Will evaluate fitness for 31 individuals.
2023-08-03 20:04:47,604 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6202575272929961 ,rho=0.014180526947371375 ,epsilon=0.00022715960293928555 ,centered=True ,beta_1=0.6880851471553556 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7465239392715641 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.18435065057420386 ,beta=0.7299323966596429].
2023-08-03 20:04:47,604 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6202575272929961 ,rho=0.014180526947371375 ,epsilon=0.00022715960293928555 ,centered=True ,beta_1=0.6880851471553556 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7465239392715641 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.18435065057420386 ,beta=0.7299323966596429].
2023-08-03 20:04:47,665 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:04:47,665 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:04:47,680 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:04:47,680 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:04:47,692 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:04:47,692 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:07,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.493624193816534, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.9165837074542704 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.33940211515721197 ,beta_2=0.8628908085217402 ,learning_rate_power=-0.6897270668910228 ,initial_accumulator_value=0.09917805878110764 ,l1_regularization_strength=0.2535507808569927 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:07,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.493624193816534, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.9165837074542704 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.33940211515721197 ,beta_2=0.8628908085217402 ,learning_rate_power=-0.6897270668910228 ,initial_accumulator_value=0.09917805878110764 ,l1_regularization_strength=0.2535507808569927 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:08,531 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:08,531 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:08,573 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:08,573 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:12,602 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:12,602 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:28,927 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5454036823655923, momentum=0.1297447582640694 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6853252132523768 ,rho=0.49316009528602256 ,epsilon=0.0006482926441516707 ,centered=True ,beta_1=0.6471445716932329 ,beta_2=0.6319399929175796 ,learning_rate_power=-0.9032772543427666 ,initial_accumulator_value=0.2322506887425696 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.19039580537566603 ,beta=0.7299323966596429].
2023-08-03 20:05:28,927 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5454036823655923, momentum=0.1297447582640694 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6853252132523768 ,rho=0.49316009528602256 ,epsilon=0.0006482926441516707 ,centered=True ,beta_1=0.6471445716932329 ,beta_2=0.6319399929175796 ,learning_rate_power=-0.9032772543427666 ,initial_accumulator_value=0.2322506887425696 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.19039580537566603 ,beta=0.7299323966596429].
2023-08-03 20:05:28,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:28,949 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:31,943 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:31,943 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:32,565 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:32,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:49,257 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:49,257 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:52,592 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:52,592 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:52,765 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:52,765 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:52,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:05:52,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:09,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:09,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:13,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:13,070 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:13,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:13,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:13,488 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:13,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:30,820 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:30,820 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:33,152 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:33,152 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:33,877 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:33,877 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:34,185 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0005925734531308798 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.5630796110958648 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9535388751567871 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.12357789414420717 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:34,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0005925734531308798 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.5630796110958648 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9535388751567871 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.12357789414420717 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:51,364 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8576557457335188, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.6236170147356099 ,beta_2=0.7190171922989711 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.2696270372071453 ,l1_regularization_strength=0.1067613697364268 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.48482020204357057 ,beta=0.011620153184410897].
2023-08-03 20:06:51,364 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8576557457335188, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.6236170147356099 ,beta_2=0.7190171922989711 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.2696270372071453 ,l1_regularization_strength=0.1067613697364268 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.48482020204357057 ,beta=0.011620153184410897].
2023-08-03 20:06:53,042 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3519266321058766, momentum=0.8487694518684944 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7823138422113932 ,rho=0.2109838335747185 ,epsilon=0.0001984920511080376 ,centered=False ,beta_1=0.0574654485741013 ,beta_2=0.6820286850100485 ,learning_rate_power=-0.17085097115900416 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7393462064022241 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8367961562821056 ,beta=0.7299323966596429].
2023-08-03 20:06:53,042 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3519266321058766, momentum=0.8487694518684944 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7823138422113932 ,rho=0.2109838335747185 ,epsilon=0.0001984920511080376 ,centered=False ,beta_1=0.0574654485741013 ,beta_2=0.6820286850100485 ,learning_rate_power=-0.17085097115900416 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7393462064022241 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8367961562821056 ,beta=0.7299323966596429].
2023-08-03 20:06:54,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.33936051222651675, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.47615662613969445 ,epsilon=0.0004182518738602842 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6873641134143473 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9312265928883765 ,beta=0.7299323966596429].
2023-08-03 20:06:54,111 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.33936051222651675, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.47615662613969445 ,epsilon=0.0004182518738602842 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6873641134143473 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9312265928883765 ,beta=0.7299323966596429].
2023-08-03 20:06:58,454 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:06:58,455 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:07:16,346 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:07:16,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:07:17,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:07:17,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:07:19,525 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:07:19,526 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:07:39,251 INFO: Applying selection operators for generation 37.
2023-08-03 20:07:39,252 INFO: Applying genetic operators for generation 37.
2023-08-03 20:07:39,261 INFO: Evaluating fitness for for generation 37.
2023-08-03 20:07:39,261 INFO: Will evaluate fitness for 34 individuals.
2023-08-03 20:07:39,818 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6614526435845858, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.9531219520309175 ,beta_2=0.2680981263898776 ,learning_rate_power=-0.18880777767845403 ,initial_accumulator_value=0.39988906897116316 ,l1_regularization_strength=0.6929337213149421 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4621848820555957 ,beta=0.7299323966596429].
2023-08-03 20:07:39,818 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6614526435845858, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.9531219520309175 ,beta_2=0.2680981263898776 ,learning_rate_power=-0.18880777767845403 ,initial_accumulator_value=0.39988906897116316 ,l1_regularization_strength=0.6929337213149421 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4621848820555957 ,beta=0.7299323966596429].
2023-08-03 20:07:39,825 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:07:39,825 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:07:39,865 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.36060244371476646 ,epsilon=0.00020159373342457297 ,centered=False ,beta_1=0.08045079913550257 ,beta_2=0.5930967133550528 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7071908876882228 ,beta=0.7299323966596429].
2023-08-03 20:07:39,865 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.36060244371476646 ,epsilon=0.00020159373342457297 ,centered=False ,beta_1=0.08045079913550257 ,beta_2=0.5930967133550528 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7071908876882228 ,beta=0.7299323966596429].
2023-08-03 20:07:39,915 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:07:39,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:07:59,813 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:07:59,813 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:00,911 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6896520118127867, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.11021320287204095 ,rho=0.014180526947371375 ,epsilon=0.0005049928440554304 ,centered=False ,beta_1=0.5787509580061377 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8931336137411021 ,initial_accumulator_value=0.810000852792198 ,l1_regularization_strength=0.9015603549133996 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5618667088303467 ,beta=0.358143065084104].
2023-08-03 20:08:00,911 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6896520118127867, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.11021320287204095 ,rho=0.014180526947371375 ,epsilon=0.0005049928440554304 ,centered=False ,beta_1=0.5787509580061377 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8931336137411021 ,initial_accumulator_value=0.810000852792198 ,l1_regularization_strength=0.9015603549133996 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5618667088303467 ,beta=0.358143065084104].
2023-08-03 20:08:02,636 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:02,636 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:04,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:04,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:19,845 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:19,845 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:22,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:22,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:24,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:24,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:25,200 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:25,200 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:40,433 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6004357323494164, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3145460540352698 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.17085233344094886 ,initial_accumulator_value=0.2984295555998182 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.2410520608341148].
2023-08-03 20:08:40,434 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6004357323494164, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3145460540352698 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.17085233344094886 ,initial_accumulator_value=0.2984295555998182 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.2410520608341148].
2023-08-03 20:08:43,978 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:43,978 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:44,786 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:44,786 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:45,451 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.3728273451078665, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0006482820731197597 ,centered=False ,beta_1=0.2841105884033458 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.050085811905828614 ,l1_regularization_strength=0.8394731840867781 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:08:45,451 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.3728273451078665, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0006482820731197597 ,centered=False ,beta_1=0.2841105884033458 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.050085811905828614 ,l1_regularization_strength=0.8394731840867781 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:09:00,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:09:00,070 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:09:04,444 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:09:04,444 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:09:05,568 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:09:05,568 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:09:09,360 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9316229833828841, momentum=0.5610796452461564 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.2940704098686886 ,beta_2=0.14860073512935457 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8658194713446324 ,l1_regularization_strength=0.6742988164557532 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8600180793150449 ,beta=0.7299323966596429].
2023-08-03 20:09:09,360 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9316229833828841, momentum=0.5610796452461564 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.2940704098686886 ,beta_2=0.14860073512935457 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8658194713446324 ,l1_regularization_strength=0.6742988164557532 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8600180793150449 ,beta=0.7299323966596429].
2023-08-03 20:09:20,165 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.21741484805727374 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.19696187396777387 ,epsilon=0.00043369476603318565 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.987565415838224 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9819363337691043 ,beta=0.6368153975340453].
2023-08-03 20:09:20,166 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.21741484805727374 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.19696187396777387 ,epsilon=0.00043369476603318565 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.987565415838224 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9819363337691043 ,beta=0.6368153975340453].
2023-08-03 20:09:24,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8516594341844679, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.4759976791156485 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9445126242950027 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9049703173044389 ,l1_regularization_strength=0.7641616633971478 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5769817527475104 ,beta=0.7299323966596429].
2023-08-03 20:09:24,745 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8516594341844679, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.4759976791156485 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9445126242950027 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9049703173044389 ,l1_regularization_strength=0.7641616633971478 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5769817527475104 ,beta=0.7299323966596429].
2023-08-03 20:09:26,263 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:09:26,263 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:09:44,702 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007668251722776931 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8344172414653562 ,initial_accumulator_value=0.9733355646846972 ,l1_regularization_strength=0.07621889652136515 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7732988978608022 ,beta=0.27985774270036046].
2023-08-03 20:09:44,703 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007668251722776931 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8344172414653562 ,initial_accumulator_value=0.9733355646846972 ,l1_regularization_strength=0.07621889652136515 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7732988978608022 ,beta=0.27985774270036046].
2023-08-03 20:09:45,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.820288234581144, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.4120397525277236 ,beta_2=0.4691811370938592 ,learning_rate_power=-0.6701383282044163 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.71258520852577 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3091507774262441 ,beta=0.7299323966596429].
2023-08-03 20:09:45,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.820288234581144, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.4120397525277236 ,beta_2=0.4691811370938592 ,learning_rate_power=-0.6701383282044163 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.71258520852577 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3091507774262441 ,beta=0.7299323966596429].
2023-08-03 20:09:46,657 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:09:46,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:09:49,877 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5165055486054885, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7610483720272105 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3873736349832432 ,beta=0.6065986613127525].
2023-08-03 20:09:49,878 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5165055486054885, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7610483720272105 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3873736349832432 ,beta=0.6065986613127525].
2023-08-03 20:10:05,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:10:05,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:10:05,848 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8122400128406414, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5906121049319911 ,learning_rate_power=-0.5824644428350797 ,initial_accumulator_value=0.5194336343042786 ,l1_regularization_strength=0.6150057839858724 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5339105829824937 ,beta=0.7299323966596429].
2023-08-03 20:10:05,848 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8122400128406414, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5906121049319911 ,learning_rate_power=-0.5824644428350797 ,initial_accumulator_value=0.5194336343042786 ,l1_regularization_strength=0.6150057839858724 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5339105829824937 ,beta=0.7299323966596429].
2023-08-03 20:10:06,927 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:10:06,927 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:10:11,132 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:10:11,132 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:10:25,317 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6258040727498047, momentum=0.6705866423040291 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.48135488698601736 ,rho=0.3790048617203856 ,epsilon=0.00018732795795472327 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.936070687356108 ,initial_accumulator_value=0.0034259875020673514 ,l1_regularization_strength=0.6372905954021034 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.23297791570687132].
2023-08-03 20:10:25,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6258040727498047, momentum=0.6705866423040291 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.48135488698601736 ,rho=0.3790048617203856 ,epsilon=0.00018732795795472327 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.936070687356108 ,initial_accumulator_value=0.0034259875020673514 ,l1_regularization_strength=0.6372905954021034 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.23297791570687132].
2023-08-03 20:10:27,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8076403223138738 ,learning_rate_power=-0.6234969238560861 ,initial_accumulator_value=0.9360290395253812 ,l1_regularization_strength=0.7944732219474221 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.20194055991029392 ,beta=0.2664067169468365].
2023-08-03 20:10:27,998 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8076403223138738 ,learning_rate_power=-0.6234969238560861 ,initial_accumulator_value=0.9360290395253812 ,l1_regularization_strength=0.7944732219474221 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.20194055991029392 ,beta=0.2664067169468365].
2023-08-03 20:10:31,660 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8742792450120687, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3668530900386623 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9551970094384922 ,initial_accumulator_value=0.657107682513998 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6035570073970498 ,beta=0.7299323966596429].
2023-08-03 20:10:31,661 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8742792450120687, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3668530900386623 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9551970094384922 ,initial_accumulator_value=0.657107682513998 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6035570073970498 ,beta=0.7299323966596429].
2023-08-03 20:10:51,436 INFO: Applying selection operators for generation 38.
2023-08-03 20:10:51,436 INFO: Applying genetic operators for generation 38.
2023-08-03 20:10:51,443 INFO: Evaluating fitness for for generation 38.
2023-08-03 20:10:51,444 INFO: Will evaluate fitness for 32 individuals.
2023-08-03 20:10:52,014 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:10:52,014 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:10:52,019 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:10:52,020 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:10:52,023 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.0271546672223677 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7439814770081687 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1889752851076234 ,initial_accumulator_value=0.07006702595899594 ,l1_regularization_strength=0.22562401593932813 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8736881884628629 ,beta=0.543066255161507].
2023-08-03 20:10:52,023 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.0271546672223677 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7439814770081687 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1889752851076234 ,initial_accumulator_value=0.07006702595899594 ,l1_regularization_strength=0.22562401593932813 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8736881884628629 ,beta=0.543066255161507].
2023-08-03 20:10:52,027 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:10:52,028 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:11,839 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:11,839 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:12,249 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:12,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:12,820 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:12,820 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:12,940 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:12,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:32,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.00482352972814635 ,use_ema=True ,ema_momentum=0.023203779851459716 ,rho=0.8519122634082777 ,epsilon=0.00033678136641474764 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.1761308737841566 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.11309589655873176 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.03737330014997731 ,beta=0.7299323966596429].
2023-08-03 20:11:32,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.00482352972814635 ,use_ema=True ,ema_momentum=0.023203779851459716 ,rho=0.8519122634082777 ,epsilon=0.00033678136641474764 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.1761308737841566 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.11309589655873176 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.03737330014997731 ,beta=0.7299323966596429].
2023-08-03 20:11:32,472 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:32,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:32,888 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:32,888 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:33,393 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:33,394 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:52,516 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.000619405153370742 ,centered=False ,beta_1=0.33186615186099144 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8649531212055193 ,beta=0.714729112581715].
2023-08-03 20:11:52,516 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.000619405153370742 ,centered=False ,beta_1=0.33186615186099144 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8649531212055193 ,beta=0.714729112581715].
2023-08-03 20:11:53,007 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.9989816454727662 ,epsilon=0.0007128271229186952 ,centered=False ,beta_1=0.8801168606898186 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7369354499577592 ,initial_accumulator_value=0.6211318999585614 ,l1_regularization_strength=0.36810437230840987 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9770445092439664 ,beta=0.8257547124912105].
2023-08-03 20:11:53,007 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.9989816454727662 ,epsilon=0.0007128271229186952 ,centered=False ,beta_1=0.8801168606898186 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7369354499577592 ,initial_accumulator_value=0.6211318999585614 ,l1_regularization_strength=0.36810437230840987 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9770445092439664 ,beta=0.8257547124912105].
2023-08-03 20:11:53,621 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0.4009868378401703 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.990633248348079 ,rho=0.014180526947371375 ,epsilon=0.00022276568414603248 ,centered=True ,beta_1=0.4011304911314455 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6741763092981239 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.38527295032970754 ,beta=0.6262236103596515].
2023-08-03 20:11:53,621 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0.4009868378401703 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.990633248348079 ,rho=0.014180526947371375 ,epsilon=0.00022276568414603248 ,centered=True ,beta_1=0.4011304911314455 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6741763092981239 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.38527295032970754 ,beta=0.6262236103596515].
2023-08-03 20:11:58,117 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:11:58,118 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:12:10,788 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.36831992655087165 ,rho=0.18286297458453415 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.27000530764374364 ,learning_rate_power=-0.645093462519681 ,initial_accumulator_value=0.854577231377175 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.17457328477752865].
2023-08-03 20:12:10,788 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.36831992655087165 ,rho=0.18286297458453415 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.27000530764374364 ,learning_rate_power=-0.645093462519681 ,initial_accumulator_value=0.854577231377175 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.17457328477752865].
2023-08-03 20:12:16,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5219867510198818, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:12:16,299 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5219867510198818, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:12:17,691 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7840133990513033, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.2728885956750654 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7714887127126535 ,beta_2=0.3691117888022023 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.21767339144025033 ,l1_regularization_strength=0.7800450488464457 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:12:17,692 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7840133990513033, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.2728885956750654 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7714887127126535 ,beta_2=0.3691117888022023 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.21767339144025033 ,l1_regularization_strength=0.7800450488464457 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:12:18,563 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:12:18,563 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:12:34,573 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0008163363314353851 ,centered=False ,beta_1=0.11783765451944561 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.12000147864479371 ,initial_accumulator_value=0.20536965015033581 ,l1_regularization_strength=0.373584358161151 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8719646602632526 ,beta=0.3796672572058857].
2023-08-03 20:12:34,573 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0008163363314353851 ,centered=False ,beta_1=0.11783765451944561 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.12000147864479371 ,initial_accumulator_value=0.20536965015033581 ,l1_regularization_strength=0.373584358161151 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8719646602632526 ,beta=0.3796672572058857].
2023-08-03 20:12:37,484 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:12:37,485 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:12:38,942 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2526753380550336, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.4894228629843639 ,epsilon=0.0009559516292648395 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.30799096693162364 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.6702317264578826].
2023-08-03 20:12:38,942 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2526753380550336, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.4894228629843639 ,epsilon=0.0009559516292648395 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.30799096693162364 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.6702317264578826].
2023-08-03 20:12:53,289 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:12:53,289 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:12:58,092 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6158477582120228, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.009135497458850542 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.14350409194313152 ,beta_2=0.18238187374237358 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.11864938451922535 ,beta=0.7299323966596429].
2023-08-03 20:12:58,092 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6158477582120228, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.009135497458850542 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.14350409194313152 ,beta_2=0.18238187374237358 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.11864938451922535 ,beta=0.7299323966596429].
2023-08-03 20:12:59,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:12:59,752 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:01,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:01,796 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:13,716 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:13,716 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:18,932 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071727036549422 ,use_ema=True ,ema_momentum=0.9571723374374671 ,rho=0.4524263382136683 ,epsilon=0.0005599406948819767 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7092292584447407 ,learning_rate_power=-0.11276809771829566 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6384784753309742 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.47384942955438714 ,beta=0.13314179988641783].
2023-08-03 20:13:18,932 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071727036549422 ,use_ema=True ,ema_momentum=0.9571723374374671 ,rho=0.4524263382136683 ,epsilon=0.0005599406948819767 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7092292584447407 ,learning_rate_power=-0.11276809771829566 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6384784753309742 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.47384942955438714 ,beta=0.13314179988641783].
2023-08-03 20:13:19,870 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:19,870 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:22,916 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:22,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:34,062 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:34,062 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:53,592 INFO: Applying selection operators for generation 39.
2023-08-03 20:13:53,593 INFO: Applying genetic operators for generation 39.
2023-08-03 20:13:53,598 INFO: Evaluating fitness for for generation 39.
2023-08-03 20:13:53,598 INFO: Will evaluate fitness for 39 individuals.
2023-08-03 20:13:54,187 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.917279373746351, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.3427127351345345 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.36720492869209753 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.5590964924158455 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5290655402014267 ,beta=0.37760211347730177].
2023-08-03 20:13:54,188 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.917279373746351, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.3427127351345345 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.36720492869209753 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.5590964924158455 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5290655402014267 ,beta=0.37760211347730177].
2023-08-03 20:13:54,192 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:54,192 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:54,200 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:54,200 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:54,205 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:13:54,205 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:14,429 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:14,429 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:15,013 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:15,014 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:15,335 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:15,335 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:18,559 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:18,559 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:34,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:34,718 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:35,307 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:35,307 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:35,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:35,789 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:39,240 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:39,240 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:55,367 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:55,367 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:55,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:55,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:56,214 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:56,215 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:14:59,394 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6566098004672867 ,rho=0.01420204098372324 ,epsilon=0.0009049653355349494 ,centered=False ,beta_1=0.6969278520698822 ,beta_2=0.41288424498477383 ,learning_rate_power=-0.917058998252924 ,initial_accumulator_value=0.3618321563596597 ,l1_regularization_strength=0.3908468255035863 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.1874314850135239].
2023-08-03 20:14:59,394 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6566098004672867 ,rho=0.01420204098372324 ,epsilon=0.0009049653355349494 ,centered=False ,beta_1=0.6969278520698822 ,beta_2=0.41288424498477383 ,learning_rate_power=-0.917058998252924 ,initial_accumulator_value=0.3618321563596597 ,l1_regularization_strength=0.3908468255035863 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.1874314850135239].
2023-08-03 20:15:15,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:15,411 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:15,799 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7253006197004797, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0038775760760930535 ,use_ema=True ,ema_momentum=0.27500846197238327 ,rho=0.7500315622484063 ,epsilon=0.00030622567267433017 ,centered=False ,beta_1=0.4898535540457807 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.04656022273059146 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4347238878591233 ,beta=0.7299323966596429].
2023-08-03 20:15:15,800 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7253006197004797, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0038775760760930535 ,use_ema=True ,ema_momentum=0.27500846197238327 ,rho=0.7500315622484063 ,epsilon=0.00030622567267433017 ,centered=False ,beta_1=0.4898535540457807 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.04656022273059146 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4347238878591233 ,beta=0.7299323966596429].
2023-08-03 20:15:16,501 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:16,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:24,087 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:24,088 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:34,626 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:34,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:36,151 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:36,151 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:37,713 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:37,713 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:44,100 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:44,100 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:54,854 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8894293407529545 ,rho=0.014180526947371375 ,epsilon=0.0006613010363135772 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.47240716935440363 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9851793704625241 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.02862633140081372 ,beta=0.3940481464731129].
2023-08-03 20:15:54,855 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8894293407529545 ,rho=0.014180526947371375 ,epsilon=0.0006613010363135772 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.47240716935440363 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9851793704625241 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.02862633140081372 ,beta=0.3940481464731129].
2023-08-03 20:15:56,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:56,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:58,227 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:15:58,227 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:04,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.09663789518864718 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.15833903988885678 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.2732710848387886 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.03184415637435578 ,beta=0.7299323966596429].
2023-08-03 20:16:04,707 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.09663789518864718 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.15833903988885678 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.2732710848387886 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.03184415637435578 ,beta=0.7299323966596429].
2023-08-03 20:16:16,478 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:16,478 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:18,640 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:18,640 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:19,761 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:19,761 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:29,378 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:29,379 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:37,470 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:37,470 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:39,720 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:39,720 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:40,274 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:40,274 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:16:49,506 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=8.472738471877435e-06 ,use_ema=False ,ema_momentum=0.37256143708606315 ,rho=0.6807178817482387 ,epsilon=0.00013942906150592218 ,centered=True ,beta_1=0.7741366032019827 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7571186347962033 ,beta=0.1309177446574702].
2023-08-03 20:16:49,507 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=8.472738471877435e-06 ,use_ema=False ,ema_momentum=0.37256143708606315 ,rho=0.6807178817482387 ,epsilon=0.00013942906150592218 ,centered=True ,beta_1=0.7741366032019827 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7571186347962033 ,beta=0.1309177446574702].
2023-08-03 20:16:57,960 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09120348660393796, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.17489984046672513 ,rho=0.9036919647522793 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5260109596329675 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8766168515453991 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5385214070217857 ,beta=0.7299323966596429].
2023-08-03 20:16:57,961 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09120348660393796, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.17489984046672513 ,rho=0.9036919647522793 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5260109596329675 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8766168515453991 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5385214070217857 ,beta=0.7299323966596429].
2023-08-03 20:17:21,629 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.914319263857581, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5520528430204908 ,rho=0.08656557323719227 ,epsilon=0.00030992452816184265 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8869255572790953 ,learning_rate_power=-0.1084364096358148 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8791450379523259 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.26620637109479983 ,beta=0.7299323966596429].
2023-08-03 20:17:21,629 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.914319263857581, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5520528430204908 ,rho=0.08656557323719227 ,epsilon=0.00030992452816184265 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8869255572790953 ,learning_rate_power=-0.1084364096358148 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8791450379523259 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.26620637109479983 ,beta=0.7299323966596429].
2023-08-03 20:17:44,998 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:17:44,998 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:18:05,085 INFO: Applying selection operators for generation 40.
2023-08-03 20:18:05,086 INFO: Applying genetic operators for generation 40.
2023-08-03 20:18:05,094 INFO: Evaluating fitness for for generation 40.
2023-08-03 20:18:05,094 INFO: Will evaluate fitness for 27 individuals.
2023-08-03 20:18:05,657 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6564563763359698 ,rho=0.4148695685511872 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5358639246676801 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8598507324732964 ,l1_regularization_strength=0.288495827847162 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4857441550713204 ,beta=0.7299323966596429].
2023-08-03 20:18:05,657 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6564563763359698 ,rho=0.4148695685511872 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5358639246676801 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8598507324732964 ,l1_regularization_strength=0.288495827847162 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4857441550713204 ,beta=0.7299323966596429].
2023-08-03 20:18:05,660 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8023207571908529 ,beta_2=0.9439345668000015 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9435889607703859 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3738138341754844 ,beta=0.6393498054233687].
2023-08-03 20:18:05,660 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8023207571908529 ,beta_2=0.9439345668000015 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9435889607703859 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3738138341754844 ,beta=0.6393498054233687].
2023-08-03 20:18:05,739 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:18:05,740 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:18:05,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:18:05,778 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:18:25,914 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4977721421279425, momentum=0.022829555730992435 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.38677004850044117 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.7150169343732838 ,l1_regularization_strength=0.29371328437423205 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.25759219275029155].
2023-08-03 20:18:25,914 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4977721421279425, momentum=0.022829555730992435 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.38677004850044117 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.7150169343732838 ,l1_regularization_strength=0.29371328437423205 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.25759219275029155].
2023-08-03 20:18:26,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5184681567900945, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7113685227131819 ,epsilon=0.0005687745994188822 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4508402117867093 ,initial_accumulator_value=0.5752075088765283 ,l1_regularization_strength=0.07623326111140427 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.40551161659970136 ,beta=0.7299323966596429].
2023-08-03 20:18:26,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5184681567900945, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7113685227131819 ,epsilon=0.0005687745994188822 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4508402117867093 ,initial_accumulator_value=0.5752075088765283 ,l1_regularization_strength=0.07623326111140427 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.40551161659970136 ,beta=0.7299323966596429].
2023-08-03 20:18:30,118 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:18:30,118 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:18:31,561 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.4132992581168575, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.003146381106952653 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009019652261684466 ,centered=False ,beta_1=0.16297541496066736 ,beta_2=0.5629442422039815 ,learning_rate_power=-0.11550326874706784 ,initial_accumulator_value=0.4617237727203275 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.21964683008198582 ,beta=0.7299323966596429].
2023-08-03 20:18:31,561 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.4132992581168575, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.003146381106952653 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009019652261684466 ,centered=False ,beta_1=0.16297541496066736 ,beta_2=0.5629442422039815 ,learning_rate_power=-0.11550326874706784 ,initial_accumulator_value=0.4617237727203275 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.21964683008198582 ,beta=0.7299323966596429].
2023-08-03 20:18:47,020 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:18:47,021 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:18:50,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.42739576811803737, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8137362933738949 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8710197361941476 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6885177863981536 ,beta=0.7299323966596429].
2023-08-03 20:18:50,568 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.42739576811803737, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8137362933738949 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8710197361941476 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6885177863981536 ,beta=0.7299323966596429].
2023-08-03 20:18:50,572 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:18:50,573 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:18:56,480 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.2204614057168206 ,rho=0.014180526947371375 ,epsilon=0.0006231640796623314 ,centered=False ,beta_1=0.1814828437058249 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.752285591867101 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3659608884210436 ,beta=0.4198483034798125].
2023-08-03 20:18:56,481 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.2204614057168206 ,rho=0.014180526947371375 ,epsilon=0.0006231640796623314 ,centered=False ,beta_1=0.1814828437058249 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.752285591867101 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3659608884210436 ,beta=0.4198483034798125].
2023-08-03 20:19:07,564 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.006317553419300444 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.6685104530192477 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.746565508552413 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.6883723426988407 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9368643983972107 ,beta=0.6549904297677777].
2023-08-03 20:19:07,564 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.006317553419300444 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.6685104530192477 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.746565508552413 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.6883723426988407 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9368643983972107 ,beta=0.6549904297677777].
2023-08-03 20:19:10,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.921571857855106, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.004474864038000891 ,use_ema=True ,ema_momentum=0.981768614797643 ,rho=0.638192621155263 ,epsilon=0.00046234694189802126 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.06428796932168734 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8508411550371778 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06674373885449125 ,beta=0.7966661937675155].
2023-08-03 20:19:10,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.921571857855106, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.004474864038000891 ,use_ema=True ,ema_momentum=0.981768614797643 ,rho=0.638192621155263 ,epsilon=0.00046234694189802126 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.06428796932168734 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8508411550371778 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06674373885449125 ,beta=0.7966661937675155].
2023-08-03 20:19:11,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:19:11,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:19:20,580 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.08582590210017449, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.33630500432647914 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9649468294659498 ,learning_rate_power=-0.24583672142958668 ,initial_accumulator_value=0.7374205130199833 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.5208202509031735].
2023-08-03 20:19:20,580 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.08582590210017449, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.33630500432647914 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9649468294659498 ,learning_rate_power=-0.24583672142958668 ,initial_accumulator_value=0.7374205130199833 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.5208202509031735].
2023-08-03 20:19:32,201 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:19:32,202 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:19:32,768 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.18203847665672745 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.1279698843511784 ,rho=0.32484220578114953 ,epsilon=6.819357724887204e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9697678101500814 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7287654799621696 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:19:32,769 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.18203847665672745 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.1279698843511784 ,rho=0.32484220578114953 ,epsilon=6.819357724887204e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9697678101500814 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7287654799621696 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:19:36,505 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.45864944796266605, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5220741789680398 ,rho=0.3752288222307627 ,epsilon=0.0004020416066783898 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.23210199732101056 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.49431188565172246 ,l1_regularization_strength=0.7870755580477702 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6661347085038295 ,beta=0.7299323966596429].
2023-08-03 20:19:36,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.45864944796266605, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5220741789680398 ,rho=0.3752288222307627 ,epsilon=0.0004020416066783898 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.23210199732101056 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.49431188565172246 ,l1_regularization_strength=0.7870755580477702 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6661347085038295 ,beta=0.7299323966596429].
2023-08-03 20:19:45,185 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:19:45,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:19:52,631 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:19:52,632 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:19:57,210 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.713814167483517 ,rho=0.014180526947371375 ,epsilon=0.00020464024100522787 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.24784953036617585 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.034991601269332984 ,beta=0.7299323966596429].
2023-08-03 20:19:57,211 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.713814167483517 ,rho=0.014180526947371375 ,epsilon=0.00020464024100522787 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.24784953036617585 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.034991601269332984 ,beta=0.7299323966596429].
2023-08-03 20:20:01,470 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:20:01,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:20:05,852 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:20:05,852 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:20:13,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.545711876402709, momentum=0.7357284949187942 ,nesterov=False ,amsgrad=True ,weight_decay=0.00478065390466841 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7953680892162962 ,epsilon=0.0009582006475262626 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.15157422861862557 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.43737738505808943 ,beta=0.7299323966596429].
2023-08-03 20:20:13,082 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.545711876402709, momentum=0.7357284949187942 ,nesterov=False ,amsgrad=True ,weight_decay=0.00478065390466841 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7953680892162962 ,epsilon=0.0009582006475262626 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.15157422861862557 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.43737738505808943 ,beta=0.7299323966596429].
2023-08-03 20:20:21,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.3077437476692836 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.6602436580011748 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3219323308053875 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.07383021020033387 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6480371803208547 ,beta=0.2350067354662344].
2023-08-03 20:20:21,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.3077437476692836 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.6602436580011748 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3219323308053875 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.07383021020033387 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6480371803208547 ,beta=0.2350067354662344].
2023-08-03 20:20:39,279 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:20:39,280 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:20:58,780 INFO: Applying selection operators for generation 41.
2023-08-03 20:20:58,781 INFO: Applying genetic operators for generation 41.
2023-08-03 20:20:58,789 INFO: Evaluating fitness for for generation 41.
2023-08-03 20:20:58,789 INFO: Will evaluate fitness for 23 individuals.
2023-08-03 20:20:59,346 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6243051957707881, momentum=0.9141318261130241 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.11763615874693067 ,epsilon=0.0004472714130373841 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9044784214510281 ,learning_rate_power=-0.020110488529915038 ,initial_accumulator_value=0.4627749667392025 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5532891122905326 ,beta=0.7299323966596429].
2023-08-03 20:20:59,346 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6243051957707881, momentum=0.9141318261130241 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.11763615874693067 ,epsilon=0.0004472714130373841 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.9044784214510281 ,learning_rate_power=-0.020110488529915038 ,initial_accumulator_value=0.4627749667392025 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5532891122905326 ,beta=0.7299323966596429].
2023-08-03 20:20:59,467 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.8450168634854018, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04013886444137982 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.065832945926252 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.031514802725132296 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.32508017509626086 ,beta=0.7299323966596429].
2023-08-03 20:20:59,468 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.8450168634854018, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04013886444137982 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.065832945926252 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.031514802725132296 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.32508017509626086 ,beta=0.7299323966596429].
2023-08-03 20:20:59,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:20:59,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:20:59,523 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9201518650618759, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.14279182012137115 ,rho=0.014180526947371375 ,epsilon=0.00028294611926915186 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3547239678997629 ,learning_rate_power=-0.7257094055503677 ,initial_accumulator_value=0.32304401103483926 ,l1_regularization_strength=0.8881428903649676 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.567744573243185].
2023-08-03 20:20:59,523 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9201518650618759, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.14279182012137115 ,rho=0.014180526947371375 ,epsilon=0.00028294611926915186 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3547239678997629 ,learning_rate_power=-0.7257094055503677 ,initial_accumulator_value=0.32304401103483926 ,l1_regularization_strength=0.8881428903649676 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.567744573243185].
2023-08-03 20:21:19,987 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:21:19,988 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:21:24,363 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6074733494068908, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8760843262636058 ,rho=0.2755532666238971 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7905350009067417 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.25606615969563395 ,beta=0.8418586162585326].
2023-08-03 20:21:24,363 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6074733494068908, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8760843262636058 ,rho=0.2755532666238971 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7905350009067417 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.25606615969563395 ,beta=0.8418586162585326].
2023-08-03 20:21:24,813 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7632195935558094, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.20558883238272319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.5419077919449512 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1807840002771539 ,beta=0.7299323966596429].
2023-08-03 20:21:24,814 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7632195935558094, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.20558883238272319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.5419077919449512 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.1807840002771539 ,beta=0.7299323966596429].
2023-08-03 20:21:24,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:21:24,861 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:21:40,351 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7318322172094316, momentum=0.9403001148038813 ,nesterov=False ,amsgrad=True ,weight_decay=0.002166536908737105 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.39709323545454833 ,epsilon=0.0007667723322830716 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4033114784941423 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7801101332205482 ,beta=0.7299323966596429].
2023-08-03 20:21:40,351 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7318322172094316, momentum=0.9403001148038813 ,nesterov=False ,amsgrad=True ,weight_decay=0.002166536908737105 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.39709323545454833 ,epsilon=0.0007667723322830716 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4033114784941423 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7801101332205482 ,beta=0.7299323966596429].
2023-08-03 20:21:43,204 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7686035133876986 ,epsilon=0.0009743768729622397 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.20025815445940132 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8102872995232392 ,l1_regularization_strength=0.6848287111825996 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.0016089848640535864 ,beta=0.7299323966596429].
2023-08-03 20:21:43,205 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7686035133876986 ,epsilon=0.0009743768729622397 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.20025815445940132 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8102872995232392 ,l1_regularization_strength=0.6848287111825996 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.0016089848640535864 ,beta=0.7299323966596429].
2023-08-03 20:21:44,648 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:21:44,648 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:01,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0029675304906109433 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.14322987637151818 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.07500278814604444 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.39858478228496763 ,beta=0.7299323966596429].
2023-08-03 20:22:01,412 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0029675304906109433 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.14322987637151818 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.07500278814604444 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.39858478228496763 ,beta=0.7299323966596429].
2023-08-03 20:22:05,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:05,358 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:06,681 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:06,681 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:08,672 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:08,673 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:22,636 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:22,636 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:25,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:25,453 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:27,278 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8228246968783235, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8679931553503498 ,rho=0.6384039671499278 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.0555220197964551 ,beta_2=0.16028052107134094 ,learning_rate_power=-0.7031869244452955 ,initial_accumulator_value=0.05421600550424488 ,l1_regularization_strength=0.7949683733625463 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7608463916538067 ,beta=0.575022104816043].
2023-08-03 20:22:27,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8228246968783235, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8679931553503498 ,rho=0.6384039671499278 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.0555220197964551 ,beta_2=0.16028052107134094 ,learning_rate_power=-0.7031869244452955 ,initial_accumulator_value=0.05421600550424488 ,l1_regularization_strength=0.7949683733625463 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7608463916538067 ,beta=0.575022104816043].
2023-08-03 20:22:29,187 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.41202038877630287 ,rho=0.023278234132673825 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.5377649604160154 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.0327991190507263 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:29,187 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.41202038877630287 ,rho=0.023278234132673825 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.5377649604160154 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.0327991190507263 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:43,012 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.007299732153539799 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.6709521831017141 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5619790948753178 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.7055882994039013 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.13657702182593778 ,beta=0.7299323966596429].
2023-08-03 20:22:43,012 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.007299732153539799 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.6709521831017141 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5619790948753178 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.7055882994039013 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.13657702182593778 ,beta=0.7299323966596429].
2023-08-03 20:22:45,430 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.22540582800361553, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9265518535910612 ,rho=0.6234500161757843 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.557542143821479 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9231196711387454 ,initial_accumulator_value=0.955048994338982 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5833275837857246 ,beta=0.3488505622413237].
2023-08-03 20:22:45,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.22540582800361553, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9265518535910612 ,rho=0.6234500161757843 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.557542143821479 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9231196711387454 ,initial_accumulator_value=0.955048994338982 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5833275837857246 ,beta=0.3488505622413237].
2023-08-03 20:22:51,739 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:51,739 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:22:53,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009175740701857512 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.11787142143669027 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.24817097953476297 ,beta=0.7299323966596429].
2023-08-03 20:22:53,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009175740701857512 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.11787142143669027 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.24817097953476297 ,beta=0.7299323966596429].
2023-08-03 20:23:17,523 INFO: Applying selection operators for generation 42.
2023-08-03 20:23:17,523 INFO: Applying genetic operators for generation 42.
2023-08-03 20:23:17,529 INFO: Evaluating fitness for for generation 42.
2023-08-03 20:23:17,530 INFO: Will evaluate fitness for 36 individuals.
2023-08-03 20:23:18,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:18,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:18,173 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:18,173 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:18,175 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.24443837503030352 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.48220919308159393 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.011595276796070975 ,beta_2=0.9696465972957267 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.3202636647241771 ,l1_regularization_strength=0.4398071908562159 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:18,175 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.24443837503030352 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.48220919308159393 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.011595276796070975 ,beta_2=0.9696465972957267 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.3202636647241771 ,l1_regularization_strength=0.4398071908562159 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:18,200 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:18,200 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:38,289 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:38,289 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:38,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:38,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:39,162 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:39,162 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:43,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:43,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:58,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:58,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:58,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:58,561 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:59,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:23:59,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:03,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:03,954 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:18,398 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:18,398 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:18,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:18,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:19,889 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.11379252149316188, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.05980982160407322 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5910194940958319 ,initial_accumulator_value=0.8869358271400235 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9245919061751544 ,beta=0.41708192359257057].
2023-08-03 20:24:19,889 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.11379252149316188, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.05980982160407322 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5910194940958319 ,initial_accumulator_value=0.8869358271400235 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9245919061751544 ,beta=0.41708192359257057].
2023-08-03 20:24:24,222 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:24,222 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:39,178 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:39,178 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:39,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:39,818 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:44,374 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:44,374 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:56,566 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.18312698345785383, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6621308180369768 ,rho=0.014180526947371375 ,epsilon=0.0001089686569780104 ,centered=True ,beta_1=0.874435904490073 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9980507049505899 ,beta=0.7299323966596429].
2023-08-03 20:24:56,567 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.18312698345785383, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6621308180369768 ,rho=0.014180526947371375 ,epsilon=0.0001089686569780104 ,centered=True ,beta_1=0.874435904490073 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9980507049505899 ,beta=0.7299323966596429].
2023-08-03 20:24:59,405 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:24:59,406 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:25:00,213 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.28541401641719644 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.38239144571716077 ,beta_2=0.5701700134539305 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.19381631088126527 ,l1_regularization_strength=0.2558392642044579 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06917309034273245 ,beta=0.7299323966596429].
2023-08-03 20:25:00,213 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.28541401641719644 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.38239144571716077 ,beta_2=0.5701700134539305 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.19381631088126527 ,l1_regularization_strength=0.2558392642044579 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06917309034273245 ,beta=0.7299323966596429].
2023-08-03 20:25:05,229 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:25:05,229 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:25:19,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20099515100304122 ,rho=0.5802207495222756 ,epsilon=0.0006442177603885231 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.08558611672751881 ,learning_rate_power=-0.6685524901762689 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.26002372517199845].
2023-08-03 20:25:19,659 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.20099515100304122 ,rho=0.5802207495222756 ,epsilon=0.0006442177603885231 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.08558611672751881 ,learning_rate_power=-0.6685524901762689 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.26002372517199845].
2023-08-03 20:25:20,508 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:25:20,508 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:25:22,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:25:22,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:25:25,582 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8808791730656357, momentum=0.13588156224510428 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.024136452009892784 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3567704678622635 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.2511549270522463 ,beta=0.3191449347910309].
2023-08-03 20:25:25,583 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8808791730656357, momentum=0.13588156224510428 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.024136452009892784 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3567704678622635 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.2511549270522463 ,beta=0.3191449347910309].
2023-08-03 20:25:41,516 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.514313738045562, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003393967802688929 ,use_ema=True ,ema_momentum=0.9713621625273322 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.43740000596586526 ,beta_2=0.3213010767278981 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.3734958763588955 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3417591881135761 ,beta=0.7299323966596429].
2023-08-03 20:25:41,517 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.514313738045562, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003393967802688929 ,use_ema=True ,ema_momentum=0.9713621625273322 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.43740000596586526 ,beta_2=0.3213010767278981 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.3734958763588955 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3417591881135761 ,beta=0.7299323966596429].
2023-08-03 20:25:43,048 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.8006912273582105, momentum=0.35695693967575126 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9316716085078888 ,rho=0.4466626543317078 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.2600608497699163 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9335631766289962 ,l1_regularization_strength=0.3462033761175515 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.19950424355438434 ,beta=0.7299323966596429].
2023-08-03 20:25:43,048 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.8006912273582105, momentum=0.35695693967575126 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9316716085078888 ,rho=0.4466626543317078 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.2600608497699163 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.9335631766289962 ,l1_regularization_strength=0.3462033761175515 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.19950424355438434 ,beta=0.7299323966596429].
2023-08-03 20:25:44,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:25:44,412 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:25:50,652 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7169290680689357 ,beta=0.7299323966596429].
2023-08-03 20:25:50,652 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7169290680689357 ,beta=0.7299323966596429].
2023-08-03 20:26:02,233 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3041921703223571 ,rho=0.014180526947371375 ,epsilon=0.000699109737939228 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8065594719269842 ,learning_rate_power=-0.06003167582525104 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.488277408484999 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:26:02,233 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3041921703223571 ,rho=0.014180526947371375 ,epsilon=0.000699109737939228 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8065594719269842 ,learning_rate_power=-0.06003167582525104 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.488277408484999 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:26:04,978 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:26:04,978 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:26:08,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:26:08,998 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:26:16,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:26:16,080 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:26:30,066 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:26:30,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:26:49,518 INFO: Applying selection operators for generation 43.
2023-08-03 20:26:49,518 INFO: Applying genetic operators for generation 43.
2023-08-03 20:26:49,527 INFO: Evaluating fitness for for generation 43.
2023-08-03 20:26:49,527 INFO: Will evaluate fitness for 34 individuals.
2023-08-03 20:26:50,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.16972840285064794, momentum=0.6857643967704433 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.9296714006069404 ,learning_rate_power=-0.6029682454163985 ,initial_accumulator_value=0.6947579271506991 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7756464079613946 ,beta=0.9343550997683358].
2023-08-03 20:26:50,078 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.16972840285064794, momentum=0.6857643967704433 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.9296714006069404 ,learning_rate_power=-0.6029682454163985 ,initial_accumulator_value=0.6947579271506991 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7756464079613946 ,beta=0.9343550997683358].
2023-08-03 20:26:50,118 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.21448069031059658, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11113647741411825 ,rho=0.99701260570304 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.6391524273082255 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9197429509007315 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5122148427315175 ,beta=0.7299323966596429].
2023-08-03 20:26:50,119 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.21448069031059658, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11113647741411825 ,rho=0.99701260570304 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.6391524273082255 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9197429509007315 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5122148427315175 ,beta=0.7299323966596429].
2023-08-03 20:26:50,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:26:50,126 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:26:50,146 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:26:50,146 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:27:10,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.5141369116199939 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3328746405776615 ,rho=0.9292841258941458 ,epsilon=0.0005940093545517929 ,centered=True ,beta_1=0.5446784801656693 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5721411409450219 ,initial_accumulator_value=0.6393154693662713 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7570454744478567 ,beta=0.5586929797450502].
2023-08-03 20:27:10,154 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.5141369116199939 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3328746405776615 ,rho=0.9292841258941458 ,epsilon=0.0005940093545517929 ,centered=True ,beta_1=0.5446784801656693 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5721411409450219 ,initial_accumulator_value=0.6393154693662713 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7570454744478567 ,beta=0.5586929797450502].
2023-08-03 20:27:10,221 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:27:10,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:27:10,271 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:27:10,272 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:27:14,029 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:27:14,029 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:27:30,341 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:27:30,341 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:27:30,653 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.29240145028529707, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.47329482861816785 ,rho=0.149096515700613 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.6164069945765833 ,learning_rate_power=-0.19872015740939142 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.4349697994780821 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.6665627702850139].
2023-08-03 20:27:30,653 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.29240145028529707, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.47329482861816785 ,rho=0.149096515700613 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.6164069945765833 ,learning_rate_power=-0.19872015740939142 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.4349697994780821 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.6665627702850139].
2023-08-03 20:27:34,073 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.3072182348031842 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6417390182425473 ,rho=0.5120905115576694 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9602941945430585 ,initial_accumulator_value=0.12213873124208208 ,l1_regularization_strength=0.6034739022983455 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.08818454850343305 ,beta=0.026702400814022198].
2023-08-03 20:27:34,073 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.3072182348031842 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6417390182425473 ,rho=0.5120905115576694 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9602941945430585 ,initial_accumulator_value=0.12213873124208208 ,l1_regularization_strength=0.6034739022983455 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.08818454850343305 ,beta=0.026702400814022198].
2023-08-03 20:27:35,227 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.24593637446301275 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.11959005004311163 ,beta_2=0.6725858757755954 ,learning_rate_power=-0.6450814619813952 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5396177552982296 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06794811989292959 ,beta=0.6326071105062067].
2023-08-03 20:27:35,228 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.24593637446301275 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.11959005004311163 ,beta_2=0.6725858757755954 ,learning_rate_power=-0.6450814619813952 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5396177552982296 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.06794811989292959 ,beta=0.6326071105062067].
2023-08-03 20:27:49,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:27:49,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:27:51,393 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:27:51,394 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:27:58,819 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.12248586877795231, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.5135692014757642 ,epsilon=0.00040544339355072495 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.3755741203521209 ,l1_regularization_strength=0.5865012446761225 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4526138694878702 ,beta=0.9665100221562782].
2023-08-03 20:27:58,819 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.12248586877795231, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.5135692014757642 ,epsilon=0.00040544339355072495 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.3755741203521209 ,l1_regularization_strength=0.5865012446761225 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4526138694878702 ,beta=0.9665100221562782].
2023-08-03 20:28:00,727 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:28:00,727 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:28:10,275 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:28:10,276 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:28:11,709 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5454811715312868, momentum=0.9981983103752532 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8800571702572163 ,rho=0.8484632880949076 ,epsilon=0.0001961963783244822 ,centered=False ,beta_1=0.3409949131314012 ,beta_2=0.7192620740659689 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.3333684347721386 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.5825230452644382].
2023-08-03 20:28:11,709 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5454811715312868, momentum=0.9981983103752532 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8800571702572163 ,rho=0.8484632880949076 ,epsilon=0.0001961963783244822 ,centered=False ,beta_1=0.3409949131314012 ,beta_2=0.7192620740659689 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.3333684347721386 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.5825230452644382].
2023-08-03 20:28:20,911 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:28:20,911 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:28:22,981 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.000854401636991594 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8802766331282837 ,l1_regularization_strength=0.19561657984052006 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.20073420713239454].
2023-08-03 20:28:22,981 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.000854401636991594 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.8802766331282837 ,l1_regularization_strength=0.19561657984052006 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.20073420713239454].
2023-08-03 20:28:30,633 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2431408562899927, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.9261140825973178 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5695028564721928 ,learning_rate_power=-0.720909453856439 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4360934861075294 ,beta=0.7299323966596429].
2023-08-03 20:28:30,633 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2431408562899927, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.9261140825973178 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5695028564721928 ,learning_rate_power=-0.720909453856439 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4360934861075294 ,beta=0.7299323966596429].
2023-08-03 20:28:36,003 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:28:36,003 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:28:41,028 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:28:41,029 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:28:47,135 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:28:47,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:28:56,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:28:56,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:28:56,716 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.5914279584035678 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.9455060960212244 ,beta_2=0.1526743028191978 ,learning_rate_power=-0.1164657835879902 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6794503055489931 ,beta=0.7299323966596429].
2023-08-03 20:28:56,717 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.5914279584035678 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.9455060960212244 ,beta_2=0.1526743028191978 ,learning_rate_power=-0.1164657835879902 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6794503055489931 ,beta=0.7299323966596429].
2023-08-03 20:29:02,154 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.36529658213562044, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.909839485834172 ,epsilon=0.0005537835765191467 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8259639917562551 ,initial_accumulator_value=0.4474345893737003 ,l1_regularization_strength=0.3164065442231634 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5215110308545499 ,beta=0.8357598150333858].
2023-08-03 20:29:02,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.36529658213562044, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.909839485834172 ,epsilon=0.0005537835765191467 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8259639917562551 ,initial_accumulator_value=0.4474345893737003 ,l1_regularization_strength=0.3164065442231634 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5215110308545499 ,beta=0.8357598150333858].
2023-08-03 20:29:07,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11766224670169889, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0077424001992137705 ,use_ema=False ,ema_momentum=0.699518055973291 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6066309508370524 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.034486157158217234 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.06972623916180243].
2023-08-03 20:29:07,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11766224670169889, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0077424001992137705 ,use_ema=False ,ema_momentum=0.699518055973291 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6066309508370524 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.034486157158217234 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.06972623916180243].
2023-08-03 20:29:17,100 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:29:17,100 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:29:21,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.987755254478395, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5782910302265659 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:29:21,874 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.987755254478395, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.5782910302265659 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:29:27,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:29:27,358 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:29:37,365 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:29:37,365 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:29:42,267 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:29:42,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:29:47,561 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:29:47,561 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:07,091 INFO: Applying selection operators for generation 44.
2023-08-03 20:30:07,092 INFO: Applying genetic operators for generation 44.
2023-08-03 20:30:07,099 INFO: Evaluating fitness for for generation 44.
2023-08-03 20:30:07,099 INFO: Will evaluate fitness for 37 individuals.
2023-08-03 20:30:07,688 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.1272839421118599, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.5071557375082429 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.47931718813524093 ,beta_2=0.6989983656654776 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.3861813366398861 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:07,689 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.1272839421118599, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.5071557375082429 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.47931718813524093 ,beta_2=0.6989983656654776 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.3861813366398861 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:07,696 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:07,696 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:07,698 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:07,699 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:07,713 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7173088471438891 ,learning_rate_power=-0.2299142872979455 ,initial_accumulator_value=0.872316632599482 ,l1_regularization_strength=0.4973124127945979 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.6444158042119621].
2023-08-03 20:30:07,713 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7173088471438891 ,learning_rate_power=-0.2299142872979455 ,initial_accumulator_value=0.872316632599482 ,l1_regularization_strength=0.4973124127945979 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.6444158042119621].
2023-08-03 20:30:27,831 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:27,831 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:28,516 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:28,517 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:32,845 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:32,848 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:34,781 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:34,781 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:48,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:48,882 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:49,823 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:49,823 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:30:53,818 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.2808656670879396 ,epsilon=0.0006804440697961659 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.31709976745596513 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.38536517867648257 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5494906694955806 ,beta=0.7042772258516637].
2023-08-03 20:30:53,818 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.2808656670879396 ,epsilon=0.0006804440697961659 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.31709976745596513 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.38536517867648257 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5494906694955806 ,beta=0.7042772258516637].
2023-08-03 20:30:55,063 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9362885269115002, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009036248793653286 ,use_ema=True ,ema_momentum=0.5416335036353097 ,rho=0.5967036733935217 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.4351624713417953 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5484854842151783 ,initial_accumulator_value=0.7336889236173143 ,l1_regularization_strength=0.45441567339743216 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.4365394104088792].
2023-08-03 20:30:55,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9362885269115002, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009036248793653286 ,use_ema=True ,ema_momentum=0.5416335036353097 ,rho=0.5967036733935217 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.4351624713417953 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5484854842151783 ,initial_accumulator_value=0.7336889236173143 ,l1_regularization_strength=0.45441567339743216 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.4365394104088792].
2023-08-03 20:31:09,121 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:09,122 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:09,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:09,895 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:18,748 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:18,749 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:21,111 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:21,111 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:29,314 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:29,314 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:29,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:29,873 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:39,206 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.32358260480079215, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.16375966891771632 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:39,206 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.32358260480079215, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.16375966891771632 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:41,524 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.28703349549689106 ,rho=0.6154808954610512 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5600627924465619 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.08191467368196537 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7574120440716583 ,beta=0.7299323966596429].
2023-08-03 20:31:41,525 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.28703349549689106 ,rho=0.6154808954610512 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5600627924465619 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.08191467368196537 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7574120440716583 ,beta=0.7299323966596429].
2023-08-03 20:31:49,568 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:49,568 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:50,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:50,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:31:57,137 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.41329934781155564 ,rho=0.014180526947371375 ,epsilon=0.0009591068692624666 ,centered=False ,beta_1=0.40722703360941925 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6541110174946959 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.957764291636741 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.43931410281086714 ,beta=0.2242778188661888].
2023-08-03 20:31:57,137 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.41329934781155564 ,rho=0.014180526947371375 ,epsilon=0.0009591068692624666 ,centered=False ,beta_1=0.40722703360941925 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6541110174946959 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.957764291636741 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.43931410281086714 ,beta=0.2242778188661888].
2023-08-03 20:32:07,618 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:32:07,618 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:32:10,378 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:32:10,378 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:32:10,960 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:32:10,960 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:32:22,655 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.11091717668810508 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9795008049580919 ,beta=0.28326045360732965].
2023-08-03 20:32:22,655 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.11091717668810508 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9795008049580919 ,beta=0.28326045360732965].
2023-08-03 20:32:27,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4354200134886006, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.44201585387616016 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7830952348864788 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.012542373901756387 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8520378833646874 ,beta=0.7299323966596429].
2023-08-03 20:32:27,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4354200134886006, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.44201585387616016 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7830952348864788 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.012542373901756387 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8520378833646874 ,beta=0.7299323966596429].
2023-08-03 20:32:30,488 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:32:30,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:32:31,071 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.09540385900272708, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=0.007194299371149999 ,use_ema=False ,ema_momentum=0.489360786255008 ,rho=0.014180526947371375 ,epsilon=0.00032690519527175607 ,centered=False ,beta_1=0.5508643569928495 ,beta_2=0.8541770017486848 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.557116107444277 ,beta=0.7299323966596429].
2023-08-03 20:32:31,071 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.09540385900272708, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=0.007194299371149999 ,use_ema=False ,ema_momentum=0.489360786255008 ,rho=0.014180526947371375 ,epsilon=0.00032690519527175607 ,centered=False ,beta_1=0.5508643569928495 ,beta_2=0.8541770017486848 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.557116107444277 ,beta=0.7299323966596429].
2023-08-03 20:32:47,815 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:32:47,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:32:48,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:32:48,348 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:32:50,592 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:32:50,592 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:32:55,384 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.4479684853524589 ,epsilon=0.0007617939701787772 ,centered=False ,beta_1=0.2442390583464158 ,beta_2=0.748899064102367 ,learning_rate_power=-0.5490585153223687 ,initial_accumulator_value=0.04006643217004324 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.0348462512569212 ,beta=0.11972276809111049].
2023-08-03 20:32:55,384 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.4479684853524589 ,epsilon=0.0007617939701787772 ,centered=False ,beta_1=0.2442390583464158 ,beta_2=0.748899064102367 ,learning_rate_power=-0.5490585153223687 ,initial_accumulator_value=0.04006643217004324 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.0348462512569212 ,beta=0.11972276809111049].
2023-08-03 20:33:08,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:33:08,080 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:33:08,508 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.916024728278701 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5881031228223329 ,rho=0.5185618940134799 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7231502231937859 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.818693206283668 ,beta=0.43612061928909474].
2023-08-03 20:33:08,508 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.916024728278701 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5881031228223329 ,rho=0.5185618940134799 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.7231502231937859 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.818693206283668 ,beta=0.43612061928909474].
2023-08-03 20:33:10,507 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:33:10,507 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:33:33,760 INFO: Applying selection operators for generation 45.
2023-08-03 20:33:33,761 INFO: Applying genetic operators for generation 45.
2023-08-03 20:33:33,769 INFO: Evaluating fitness for for generation 45.
2023-08-03 20:33:33,769 INFO: Will evaluate fitness for 30 individuals.
2023-08-03 20:33:34,362 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.9832448430594781 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9593987605332743 ,rho=0.36285180673376916 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.011558255995676281 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.00222275708234021 ,initial_accumulator_value=0.001657631092416234 ,l1_regularization_strength=0.22704700738981465 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.12339945251407869 ,beta=0.7299323966596429].
2023-08-03 20:33:34,363 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.9832448430594781 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9593987605332743 ,rho=0.36285180673376916 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.011558255995676281 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.00222275708234021 ,initial_accumulator_value=0.001657631092416234 ,l1_regularization_strength=0.22704700738981465 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.12339945251407869 ,beta=0.7299323966596429].
2023-08-03 20:33:34,377 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9511317392480663, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4821710970252342 ,rho=0.2143210232683661 ,epsilon=0.0008925692806619922 ,centered=False ,beta_1=0.22240514764965302 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3997858712581338 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6278674882825367 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.887846225572776 ,beta=0.9091647660812886].
2023-08-03 20:33:34,377 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9511317392480663, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4821710970252342 ,rho=0.2143210232683661 ,epsilon=0.0008925692806619922 ,centered=False ,beta_1=0.22240514764965302 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3997858712581338 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6278674882825367 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.887846225572776 ,beta=0.9091647660812886].
2023-08-03 20:33:34,386 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:33:34,386 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:33:34,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8906976456268055, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14469201585178815 ,rho=0.3416606264603429 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.27419561337115506 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.2492759126410402 ,l1_regularization_strength=0.7322666724663868 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.701993003080336 ,beta=0.8447745640812564].
2023-08-03 20:33:34,408 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8906976456268055, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14469201585178815 ,rho=0.3416606264603429 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.27419561337115506 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.2492759126410402 ,l1_regularization_strength=0.7322666724663868 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.701993003080336 ,beta=0.8447745640812564].
2023-08-03 20:33:52,724 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:33:52,724 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:33:55,694 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:33:55,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:33:59,498 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.6490342423827693, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.002387570679181928 ,use_ema=False ,ema_momentum=0.7229623027171429 ,rho=0.1216443563232612 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7837819156087825 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4061339431619092 ,initial_accumulator_value=0.7886627578333246 ,l1_regularization_strength=0.6038454052283774 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4583560712333504 ,beta=0.3889197831179624].
2023-08-03 20:33:59,498 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.6490342423827693, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.002387570679181928 ,use_ema=False ,ema_momentum=0.7229623027171429 ,rho=0.1216443563232612 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7837819156087825 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4061339431619092 ,initial_accumulator_value=0.7886627578333246 ,l1_regularization_strength=0.6038454052283774 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4583560712333504 ,beta=0.3889197831179624].
2023-08-03 20:33:59,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:33:59,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:34:12,984 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:34:12,984 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:34:16,187 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7334220261295956, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4223585920315117 ,rho=0.8179607641399727 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.5222214742879047 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.08943984169188912 ,beta=0.7299323966596429].
2023-08-03 20:34:16,188 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7334220261295956, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4223585920315117 ,rho=0.8179607641399727 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.5222214742879047 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.08943984169188912 ,beta=0.7299323966596429].
2023-08-03 20:34:19,864 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:34:19,865 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:34:25,133 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:34:25,133 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:34:33,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:34:33,080 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:34:40,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:34:40,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:34:41,491 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:34:41,492 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:34:45,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5632014373319735, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=0.00020210479677490527 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00014185256157407702 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.1729377364714274 ,learning_rate_power=-0.517027482210748 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3326509426754718 ,beta=0.7299323966596429].
2023-08-03 20:34:45,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5632014373319735, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=0.00020210479677490527 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00014185256157407702 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.1729377364714274 ,learning_rate_power=-0.517027482210748 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3326509426754718 ,beta=0.7299323966596429].
2023-08-03 20:34:53,920 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.051636870843941196 ,rho=0.014180526947371375 ,epsilon=0.0009022862284013265 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.2399907912310999 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6735642936657656 ,beta=0.7299323966596429].
2023-08-03 20:34:53,920 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.051636870843941196 ,rho=0.014180526947371375 ,epsilon=0.0009022862284013265 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.2399907912310999 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6735642936657656 ,beta=0.7299323966596429].
2023-08-03 20:35:01,062 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.10496360597282806 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.18854236087940235 ,rho=0.5441696884312485 ,epsilon=0.0007416507115575442 ,centered=True ,beta_1=0.044754061056409 ,beta_2=0.565648178178562 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.12629406050291547 ,beta=0.7299323966596429].
2023-08-03 20:35:01,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.10496360597282806 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.18854236087940235 ,rho=0.5441696884312485 ,epsilon=0.0007416507115575442 ,centered=True ,beta_1=0.044754061056409 ,beta_2=0.565648178178562 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.12629406050291547 ,beta=0.7299323966596429].
2023-08-03 20:35:01,827 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:35:01,827 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:35:11,715 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.828596874552466, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.13930535807381372 ,rho=0.014180526947371375 ,epsilon=0.0008298692534306417 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.4167699378254299 ,learning_rate_power=-0.5433751324921363 ,initial_accumulator_value=0.7093824036687998 ,l1_regularization_strength=0.8847779758555803 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.525616001024176 ,beta=0.7299323966596429].
2023-08-03 20:35:11,715 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.828596874552466, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.13930535807381372 ,rho=0.014180526947371375 ,epsilon=0.0008298692534306417 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.4167699378254299 ,learning_rate_power=-0.5433751324921363 ,initial_accumulator_value=0.7093824036687998 ,l1_regularization_strength=0.8847779758555803 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.525616001024176 ,beta=0.7299323966596429].
2023-08-03 20:35:23,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:35:23,036 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:35:25,410 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7874544708096718, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.008891585694057303 ,use_ema=False ,ema_momentum=0.5695028990102291 ,rho=0.014180526947371375 ,epsilon=0.0008612014650434204 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.11431501579827152 ,l1_regularization_strength=0.617369078095028 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4942234053277734 ,beta=0.7299323966596429].
2023-08-03 20:35:25,410 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7874544708096718, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.008891585694057303 ,use_ema=False ,ema_momentum=0.5695028990102291 ,rho=0.014180526947371375 ,epsilon=0.0008612014650434204 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.11431501579827152 ,l1_regularization_strength=0.617369078095028 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4942234053277734 ,beta=0.7299323966596429].
2023-08-03 20:35:30,469 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6724276698714193, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6014607369594451 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7815773509948113 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5308323574091648 ,initial_accumulator_value=0.7613999109468693 ,l1_regularization_strength=0.49683328221969925 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:35:30,470 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6724276698714193, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6014607369594451 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7815773509948113 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5308323574091648 ,initial_accumulator_value=0.7613999109468693 ,l1_regularization_strength=0.49683328221969925 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:35:36,042 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:35:36,042 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:35:43,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.5016376700293415 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.4541752468800687 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.43074050754685844 ,beta=0.7299323966596429].
2023-08-03 20:35:43,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.5016376700293415 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.4541752468800687 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.43074050754685844 ,beta=0.7299323966596429].
2023-08-03 20:35:49,808 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.006984076964124332 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.4675907143054824 ,epsilon=8.437515657927342e-05 ,centered=False ,beta_1=0.760472832113621 ,beta_2=0.6165330967689416 ,learning_rate_power=-0.1893818820091815 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9178909826926779 ,beta=0.7299323966596429].
2023-08-03 20:35:49,808 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.006984076964124332 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.4675907143054824 ,epsilon=8.437515657927342e-05 ,centered=False ,beta_1=0.760472832113621 ,beta_2=0.6165330967689416 ,learning_rate_power=-0.1893818820091815 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9178909826926779 ,beta=0.7299323966596429].
2023-08-03 20:35:51,016 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:35:51,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:36:08,094 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10010353912141035 ,rho=0.26494606520685915 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.16197948911964632 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6079054917440637 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7061633962078349].
2023-08-03 20:36:08,094 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10010353912141035 ,rho=0.26494606520685915 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.16197948911964632 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.6079054917440637 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7061633962078349].
2023-08-03 20:36:12,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:36:12,126 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:36:16,436 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:36:16,436 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:36:36,172 INFO: Applying selection operators for generation 46.
2023-08-03 20:36:36,173 INFO: Applying genetic operators for generation 46.
2023-08-03 20:36:36,180 INFO: Evaluating fitness for for generation 46.
2023-08-03 20:36:36,180 INFO: Will evaluate fitness for 26 individuals.
2023-08-03 20:36:36,814 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:36:36,814 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:36:36,818 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:36:36,818 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:36:36,818 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6979152913333403, momentum=0.22771528458515555 ,nesterov=False ,amsgrad=False ,weight_decay=0.009389792674253408 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7635901975568247 ,epsilon=0.0006081764804092698 ,centered=False ,beta_1=0.7253515631447686 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5168350388177485 ,initial_accumulator_value=0.7233340256841839 ,l1_regularization_strength=0.21097142508435696 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8451972910028582 ,beta=0.7299323966596429].
2023-08-03 20:36:36,818 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6979152913333403, momentum=0.22771528458515555 ,nesterov=False ,amsgrad=False ,weight_decay=0.009389792674253408 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7635901975568247 ,epsilon=0.0006081764804092698 ,centered=False ,beta_1=0.7253515631447686 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5168350388177485 ,initial_accumulator_value=0.7233340256841839 ,l1_regularization_strength=0.21097142508435696 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8451972910028582 ,beta=0.7299323966596429].
2023-08-03 20:36:36,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.33793585001589055, momentum=0.23061134130905836 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3617396507340398 ,rho=0.022385240628615355 ,epsilon=0.0002427528548159858 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.4839371816128001 ,learning_rate_power=-0.3548527552778614 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.3777784930499952 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8246969279438532 ,beta=0.7802856828422766].
2023-08-03 20:36:36,834 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.33793585001589055, momentum=0.23061134130905836 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3617396507340398 ,rho=0.022385240628615355 ,epsilon=0.0002427528548159858 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.4839371816128001 ,learning_rate_power=-0.3548527552778614 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.3777784930499952 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8246969279438532 ,beta=0.7802856828422766].
2023-08-03 20:36:56,820 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:36:56,820 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:36:56,900 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:36:56,901 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:02,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:02,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:03,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.3689829512910191 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19432698546723481 ,rho=0.9160766288821829 ,epsilon=0.0002874156145291223 ,centered=False ,beta_1=0.9575142913984497 ,beta_2=0.9938297632760232 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.10743981063403629 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7918032468629911 ,beta=0.7299323966596429].
2023-08-03 20:37:03,859 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.3689829512910191 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19432698546723481 ,rho=0.9160766288821829 ,epsilon=0.0002874156145291223 ,centered=False ,beta_1=0.9575142913984497 ,beta_2=0.9938297632760232 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.10743981063403629 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7918032468629911 ,beta=0.7299323966596429].
2023-08-03 20:37:16,709 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7385158044715573, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3429513301164685 ,rho=0.5403304800452563 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8925720262840539 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.17002699872064708].
2023-08-03 20:37:16,709 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7385158044715573, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3429513301164685 ,rho=0.5403304800452563 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8925720262840539 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.17002699872064708].
2023-08-03 20:37:17,007 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0.7483479927788595 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.30968004049571174 ,rho=0.4630184691319934 ,epsilon=0.0008611133621363076 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7800977423430181 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.7543486606454646 ,l1_regularization_strength=0.8481755123776628 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:17,007 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0.7483479927788595 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.30968004049571174 ,rho=0.4630184691319934 ,epsilon=0.0008611133621363076 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7800977423430181 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.7543486606454646 ,l1_regularization_strength=0.8481755123776628 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:22,354 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:22,354 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:28,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:28,789 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:40,989 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:40,989 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:42,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:42,408 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:42,462 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:42,462 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:49,264 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:37:49,265 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:38:01,198 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:38:01,198 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:38:02,506 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.11166681990326355 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3348902690542592 ,learning_rate_power=-0.6818325162773087 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7471582259620878 ,beta=0.7693159169237673].
2023-08-03 20:38:02,506 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.11166681990326355 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3348902690542592 ,learning_rate_power=-0.6818325162773087 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7471582259620878 ,beta=0.7693159169237673].
2023-08-03 20:38:03,276 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:38:03,276 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:38:09,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.9626430954289504 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8623956427108475 ,rho=0.9769556022974999 ,epsilon=0.0009347973207835917 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8600753650850212 ,initial_accumulator_value=0.24295128018810308 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.501628043187117 ,beta=0.6436089523344389].
2023-08-03 20:38:09,631 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.9626430954289504 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8623956427108475 ,rho=0.9769556022974999 ,epsilon=0.0009347973207835917 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8600753650850212 ,initial_accumulator_value=0.24295128018810308 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.501628043187117 ,beta=0.6436089523344389].
2023-08-03 20:38:21,228 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.22887177878971832, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008773624407938385 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00012744049010573503 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6631786468363339 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9295160042163226 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.96907343991334 ,beta=0.8633168957532625].
2023-08-03 20:38:21,229 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.22887177878971832, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008773624407938385 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00012744049010573503 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6631786468363339 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9295160042163226 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.96907343991334 ,beta=0.8633168957532625].
2023-08-03 20:38:21,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:38:21,895 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:38:23,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:38:23,502 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:38:35,180 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.000858649522381138 ,centered=False ,beta_1=0.11030525457234153 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6382728509134483 ,initial_accumulator_value=0.6685348746096667 ,l1_regularization_strength=0.3311600183531884 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.32274566205498234 ,beta=0.1412447023047425].
2023-08-03 20:38:35,180 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.000858649522381138 ,centered=False ,beta_1=0.11030525457234153 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6382728509134483 ,initial_accumulator_value=0.6685348746096667 ,l1_regularization_strength=0.3311600183531884 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.32274566205498234 ,beta=0.1412447023047425].
2023-08-03 20:38:41,935 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.07848023427517292 ,epsilon=0.0005060256839988846 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.49706140035558044 ,learning_rate_power=-0.808518803405535 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:38:41,935 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.07848023427517292 ,epsilon=0.0005060256839988846 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.49706140035558044 ,learning_rate_power=-0.808518803405535 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:39:07,278 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:39:07,279 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:39:26,312 INFO: Applying selection operators for generation 47.
2023-08-03 20:39:26,312 INFO: Applying genetic operators for generation 47.
2023-08-03 20:39:26,318 INFO: Evaluating fitness for for generation 47.
2023-08-03 20:39:26,318 INFO: Will evaluate fitness for 29 individuals.
2023-08-03 20:39:26,906 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.5366055953473934 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.9958596051704101 ,epsilon=0.0008048433425205558 ,centered=True ,beta_1=0.9067043413061939 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8923255382414218 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.294859221759902 ,beta=0.5731320746121434].
2023-08-03 20:39:26,907 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.5366055953473934 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.9958596051704101 ,epsilon=0.0008048433425205558 ,centered=True ,beta_1=0.9067043413061939 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8923255382414218 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.294859221759902 ,beta=0.5731320746121434].
2023-08-03 20:39:26,908 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.07289944329910869, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.654816244844512 ,rho=0.2421382159973242 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.73291865296841 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.018805522959960297 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:39:26,908 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.07289944329910869, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.654816244844512 ,rho=0.2421382159973242 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.73291865296841 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.018805522959960297 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:39:26,913 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:39:26,914 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:39:26,916 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:39:26,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:39:46,336 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:39:46,336 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:39:46,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0007224961981882814 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.47483095546264675 ,learning_rate_power=-0.3213256867959652 ,initial_accumulator_value=0.9912650299661004 ,l1_regularization_strength=0.02466931065310507 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.13766380531626476 ,beta=0.8772105740412991].
2023-08-03 20:39:46,835 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0007224961981882814 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.47483095546264675 ,learning_rate_power=-0.3213256867959652 ,initial_accumulator_value=0.9912650299661004 ,l1_regularization_strength=0.02466931065310507 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.13766380531626476 ,beta=0.8772105740412991].
2023-08-03 20:39:46,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:39:46,930 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:39:51,825 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9996458327093884 ,rho=0.7915178532706814 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.03817758388787418 ,beta_2=0.4767473089584373 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.658269679975324 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.2757667854018947].
2023-08-03 20:39:51,825 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9996458327093884 ,rho=0.7915178532706814 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.03817758388787418 ,beta_2=0.4767473089584373 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.658269679975324 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.2757667854018947].
2023-08-03 20:40:06,491 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:06,491 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:07,733 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2554633503243563, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.3510153022100382 ,epsilon=0.00011800147867248343 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6389570744661558 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.610225893935234 ,beta=0.681206795529396].
2023-08-03 20:40:07,733 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2554633503243563, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.3510153022100382 ,epsilon=0.00011800147867248343 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6389570744661558 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.610225893935234 ,beta=0.681206795529396].
2023-08-03 20:40:11,616 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:11,616 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:17,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37323949277063995, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.37640606995051396 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6193725740489199 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.5308981531791076].
2023-08-03 20:40:17,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37323949277063995, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.37640606995051396 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6193725740489199 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.5308981531791076].
2023-08-03 20:40:27,570 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:27,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:32,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.24366340654260632 ,rho=0.6614873906385724 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.024286082430646228 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.08583140558203362 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.13854740175192404 ,beta=0.7528103135270238].
2023-08-03 20:40:32,327 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.24366340654260632 ,rho=0.6614873906385724 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.024286082430646228 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.08583140558203362 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.13854740175192404 ,beta=0.7528103135270238].
2023-08-03 20:40:33,769 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:33,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:37,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:37,244 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:48,064 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.536763413511194, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.04994148477176019 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.6113902855515984 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6379101832244468 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5155497387032331 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5014664165774191 ,beta=0.7299323966596429].
2023-08-03 20:40:48,064 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.536763413511194, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.04994148477176019 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.6113902855515984 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6379101832244468 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5155497387032331 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5014664165774191 ,beta=0.7299323966596429].
2023-08-03 20:40:53,940 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:53,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:57,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:57,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:57,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:40:57,373 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:06,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:06,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:14,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:14,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:17,258 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8549044110428665, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.22384447153201115 ,epsilon=0.0007771171164113063 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4538199460913468 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.16385493320610112 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.18833547059176148 ,beta=0.5243796254081691].
2023-08-03 20:41:17,258 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8549044110428665, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.22384447153201115 ,epsilon=0.0007771171164113063 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.4538199460913468 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.16385493320610112 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.18833547059176148 ,beta=0.5243796254081691].
2023-08-03 20:41:18,170 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:18,170 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:27,048 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:27,049 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:35,174 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:35,174 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:38,602 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:38,602 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:47,870 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:47,870 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:55,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:41:55,239 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:14,557 INFO: Applying selection operators for generation 48.
2023-08-03 20:42:14,557 INFO: Applying genetic operators for generation 48.
2023-08-03 20:42:14,564 INFO: Evaluating fitness for for generation 48.
2023-08-03 20:42:14,564 INFO: Will evaluate fitness for 34 individuals.
2023-08-03 20:42:15,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:15,145 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:15,145 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:15,145 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:15,156 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:15,156 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:15,174 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:15,174 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:35,055 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014815438374330711 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.2768800523450744 ,epsilon=0.0005475791738827638 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.2343320280102481 ,initial_accumulator_value=0.2855302265287064 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.16688182645686644].
2023-08-03 20:42:35,055 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014815438374330711 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.2768800523450744 ,epsilon=0.0005475791738827638 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.2343320280102481 ,initial_accumulator_value=0.2855302265287064 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.16688182645686644].
2023-08-03 20:42:35,237 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:35,237 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:35,736 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:35,736 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:35,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:35,801 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:55,433 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.31504951009088844 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7432086007850855 ,rho=0.014180526947371375 ,epsilon=0.0008845367059701566 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5050740102850074 ,learning_rate_power=-0.9190867060012963 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.11068945580427869 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.17173740003226812 ,beta=0.7299323966596429].
2023-08-03 20:42:55,433 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.31504951009088844 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7432086007850855 ,rho=0.014180526947371375 ,epsilon=0.0008845367059701566 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5050740102850074 ,learning_rate_power=-0.9190867060012963 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.11068945580427869 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.17173740003226812 ,beta=0.7299323966596429].
2023-08-03 20:42:55,626 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:55,626 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:56,019 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:42:56,019 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:01,319 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9611258361682095, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.09997445532730775 ,rho=0.014180526947371375 ,epsilon=0.0008730086693876109 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.22699226902551994 ,learning_rate_power=-0.3723687008196006 ,initial_accumulator_value=0.5286042553006411 ,l1_regularization_strength=0.8056327255924064 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:01,319 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9611258361682095, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.09997445532730775 ,rho=0.014180526947371375 ,epsilon=0.0008730086693876109 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.22699226902551994 ,learning_rate_power=-0.3723687008196006 ,initial_accumulator_value=0.5286042553006411 ,l1_regularization_strength=0.8056327255924064 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:15,569 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9370582123682987, momentum=0.6741014419823878 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.46648812591032573 ,epsilon=0.00041476739969800963 ,centered=True ,beta_1=0.48880682442511325 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.46355354488845046 ,initial_accumulator_value=0.6290279670421731 ,l1_regularization_strength=0.42045542433789684 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.17174984717079933 ,beta=0.5575409735089348].
2023-08-03 20:43:15,569 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9370582123682987, momentum=0.6741014419823878 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.46648812591032573 ,epsilon=0.00041476739969800963 ,centered=True ,beta_1=0.48880682442511325 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.46355354488845046 ,initial_accumulator_value=0.6290279670421731 ,l1_regularization_strength=0.42045542433789684 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.17174984717079933 ,beta=0.5575409735089348].
2023-08-03 20:43:16,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7042184994770614 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8808558627514684 ,beta_2=0.21178738041238332 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.15371626990811305 ,l1_regularization_strength=0.46036669407358455 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:16,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7042184994770614 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8808558627514684 ,beta_2=0.21178738041238332 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.15371626990811305 ,l1_regularization_strength=0.46036669407358455 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:21,798 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9908504213600605, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6409052190378293 ,rho=0.014180526947371375 ,epsilon=0.0004556109748803352 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5308084467893746 ,initial_accumulator_value=0.014920510494111028 ,l1_regularization_strength=0.7260318598044551 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:21,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9908504213600605, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6409052190378293 ,rho=0.014180526947371375 ,epsilon=0.0004556109748803352 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.5308084467893746 ,initial_accumulator_value=0.014920510494111028 ,l1_regularization_strength=0.7260318598044551 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:25,273 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.05330578055689772 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.02459775914860951 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.560698429528585 ,beta=0.7299323966596429].
2023-08-03 20:43:25,273 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.05330578055689772 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.02459775914860951 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.560698429528585 ,beta=0.7299323966596429].
2023-08-03 20:43:36,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:36,032 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:45,623 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:45,623 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:47,452 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7222048502276115 ,epsilon=0.0005266501978253257 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8854058358393906 ,learning_rate_power=-0.06046358094167359 ,initial_accumulator_value=0.48454437753314017 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:47,453 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7222048502276115 ,epsilon=0.0005266501978253257 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.8854058358393906 ,learning_rate_power=-0.06046358094167359 ,initial_accumulator_value=0.48454437753314017 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:53,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:53,712 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:56,378 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:43:56,378 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:05,943 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9632483703496747, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0004666678272865897 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.6013508047709187 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.3365625386201845 ,l1_regularization_strength=0.9443613127132973 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7914500390449868 ,beta=0.7299323966596429].
2023-08-03 20:44:05,944 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9632483703496747, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0004666678272865897 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.6013508047709187 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.3365625386201845 ,l1_regularization_strength=0.9443613127132973 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.7914500390449868 ,beta=0.7299323966596429].
2023-08-03 20:44:13,807 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:13,807 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:13,878 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:13,878 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:17,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:17,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:32,118 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:32,118 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:33,734 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:33,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:33,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:33,937 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:37,872 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0007012961958865805 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6631472673023875 ,beta_2=0.662440391305791 ,learning_rate_power=-0.3997609895142664 ,initial_accumulator_value=0.22181768245865063 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8881924353496299 ,beta=0.7299323966596429].
2023-08-03 20:44:37,872 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0007012961958865805 ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6631472673023875 ,beta_2=0.662440391305791 ,learning_rate_power=-0.3997609895142664 ,initial_accumulator_value=0.22181768245865063 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8881924353496299 ,beta=0.7299323966596429].
2023-08-03 20:44:53,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:53,036 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:53,527 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:53,527 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:57,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:44:57,918 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:13,249 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:13,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:13,831 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:13,831 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:32,821 INFO: Applying selection operators for generation 49.
2023-08-03 20:45:32,821 INFO: Applying genetic operators for generation 49.
2023-08-03 20:45:32,827 INFO: Evaluating fitness for for generation 49.
2023-08-03 20:45:32,827 INFO: Will evaluate fitness for 34 individuals.
2023-08-03 20:45:33,385 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:33,385 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:33,390 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9452356016944148, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.033184820630406286 ,rho=0.4189990187745244 ,epsilon=0.0004174266985118532 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6670185941776293 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.19776198682036228 ,beta=0.7299323966596429].
2023-08-03 20:45:33,390 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9452356016944148, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.033184820630406286 ,rho=0.4189990187745244 ,epsilon=0.0004174266985118532 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6670185941776293 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.19776198682036228 ,beta=0.7299323966596429].
2023-08-03 20:45:33,475 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:33,476 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:33,516 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:33,516 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:53,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.06882602736386323, momentum=0.7754888675919922 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.48774384451719166 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:53,103 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.06882602736386323, momentum=0.7754888675919922 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.48774384451719166 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:53,590 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:53,591 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:54,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:54,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:58,998 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8106642201744205 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7199412510509021 ,learning_rate_power=-0.5108941247275568 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:45:58,998 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8106642201744205 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.7199412510509021 ,learning_rate_power=-0.5108941247275568 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:14,525 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:14,525 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:14,602 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:14,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:18,091 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:18,092 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:19,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:19,363 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:34,722 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:34,722 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:34,847 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3843733446003855, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0017932371572780402 ,use_ema=True ,ema_momentum=0.5895707188832796 ,rho=0.32217434614075846 ,epsilon=0.0009375392472478364 ,centered=False ,beta_1=0.6077573646480682 ,beta_2=0.714517313098603 ,learning_rate_power=-0.23246714636195298 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7012500739539748 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6316267465110674 ,beta=0.20685543627237202].
2023-08-03 20:46:34,847 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3843733446003855, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.0017932371572780402 ,use_ema=True ,ema_momentum=0.5895707188832796 ,rho=0.32217434614075846 ,epsilon=0.0009375392472478364 ,centered=False ,beta_1=0.6077573646480682 ,beta_2=0.714517313098603 ,learning_rate_power=-0.23246714636195298 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.7012500739539748 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.6316267465110674 ,beta=0.20685543627237202].
2023-08-03 20:46:38,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:38,579 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:39,570 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:39,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:54,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:54,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:46:58,555 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.624639246853034, momentum=0.21147779356010987 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7964075229075464 ,epsilon=0.0006068060068060995 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.1414624356292713 ,learning_rate_power=-0.5486504335049288 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8908475105465348 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.9488622900536676].
2023-08-03 20:46:58,555 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.624639246853034, momentum=0.21147779356010987 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.7964075229075464 ,epsilon=0.0006068060068060995 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.1414624356292713 ,learning_rate_power=-0.5486504335049288 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8908475105465348 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.9488622900536676].
2023-08-03 20:47:00,553 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:00,554 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:00,650 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:00,651 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:15,831 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:15,831 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:21,306 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6055049946443275 ,rho=0.014180526947371375 ,epsilon=0.0006076498332992492 ,centered=True ,beta_1=0.17458428488713706 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1508843589933867 ,initial_accumulator_value=0.19182721433962235 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.30178542088196825 ,beta=0.7299323966596429].
2023-08-03 20:47:21,307 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6055049946443275 ,rho=0.014180526947371375 ,epsilon=0.0006076498332992492 ,centered=True ,beta_1=0.17458428488713706 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1508843589933867 ,initial_accumulator_value=0.19182721433962235 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.30178542088196825 ,beta=0.7299323966596429].
2023-08-03 20:47:21,344 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.7999132506963159 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.23831831150980098 ,rho=0.2960953511389566 ,epsilon=0.0004622865640742284 ,centered=False ,beta_1=0.31875921218762715 ,beta_2=0.042617481771351495 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.740586889886514 ,beta=0.7299323966596429].
2023-08-03 20:47:21,345 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7932334858939903, momentum=0.7999132506963159 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.23831831150980098 ,rho=0.2960953511389566 ,epsilon=0.0004622865640742284 ,centered=False ,beta_1=0.31875921218762715 ,beta_2=0.042617481771351495 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.740586889886514 ,beta=0.7299323966596429].
2023-08-03 20:47:23,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:23,834 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:36,060 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6492886905051305, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.004860996394857899 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8579283825227212 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5844193225369142 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:36,060 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6492886905051305, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=0.004860996394857899 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.8579283825227212 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5844193225369142 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:39,696 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:39,696 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:43,836 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:43,836 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:46,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:46,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:56,068 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:56,068 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:59,931 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:47:59,931 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:48:04,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.030923102332626073, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05305867726201163 ,rho=0.014180526947371375 ,epsilon=0.0004343301911479099 ,centered=False ,beta_1=0.2057040334755953 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9662733250145633 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8844026577910372 ,beta=0.686931772738456].
2023-08-03 20:48:04,475 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.030923102332626073, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.05305867726201163 ,rho=0.014180526947371375 ,epsilon=0.0004343301911479099 ,centered=False ,beta_1=0.2057040334755953 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9662733250145633 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8844026577910372 ,beta=0.686931772738456].
2023-08-03 20:48:16,847 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:48:16,847 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:48:20,111 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:48:20,111 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:48:29,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:48:29,630 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:48:48,751 INFO: Applying selection operators for generation 50.
2023-08-03 20:48:48,751 INFO: Applying genetic operators for generation 50.
2023-08-03 20:48:48,760 INFO: Evaluating fitness for for generation 50.
2023-08-03 20:48:48,760 INFO: Will evaluate fitness for 35 individuals.
2023-08-03 20:48:49,315 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:48:49,315 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:48:49,316 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8724743547963589, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5898489210064428 ,rho=0.6426479983342869 ,epsilon=0.0004872878824801118 ,centered=False ,beta_1=0.1024859013805014 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.10962895742441592 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9087981379788678 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:48:49,316 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8724743547963589, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5898489210064428 ,rho=0.6426479983342869 ,epsilon=0.0004872878824801118 ,centered=False ,beta_1=0.1024859013805014 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.10962895742441592 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9087981379788678 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:48:49,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.11425943442414532 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9790965745614615 ,initial_accumulator_value=0.28600927692362677 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.09687670320006025 ,beta=0.20491943211496555].
2023-08-03 20:48:49,431 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.11425943442414532 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.9790965745614615 ,initial_accumulator_value=0.28600927692362677 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.09687670320006025 ,beta=0.20491943211496555].
2023-08-03 20:48:49,461 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:48:49,461 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:49:08,842 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3265500070488323, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=0.0054595429202283965 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00016746441266793946 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.997235068934792 ,initial_accumulator_value=0.9208335291222697 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9174224504783907 ,beta=0.7299323966596429].
2023-08-03 20:49:08,843 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3265500070488323, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=0.0054595429202283965 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00016746441266793946 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.997235068934792 ,initial_accumulator_value=0.9208335291222697 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9174224504783907 ,beta=0.7299323966596429].
2023-08-03 20:49:09,512 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6226494875673998 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.49614170112239697 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3563257027076495 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.2855728840632814 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4969757729038342 ,beta=0.7299323966596429].
2023-08-03 20:49:09,512 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6226494875673998 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.49614170112239697 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.3563257027076495 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.2855728840632814 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.4969757729038342 ,beta=0.7299323966596429].
2023-08-03 20:49:09,675 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:49:09,676 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:49:14,266 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.42881171287973163 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8701782733841569 ,initial_accumulator_value=0.6434038779234795 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:49:14,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.42881171287973163 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.8701782733841569 ,initial_accumulator_value=0.6434038779234795 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:49:30,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.0785685307495062 ,epsilon=0.00013280181915554823 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.152427686958735 ,learning_rate_power=-0.28799201776490235 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.4963027452963351 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9217599709070234 ,beta=0.9138382864059108].
2023-08-03 20:49:30,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.0785685307495062 ,epsilon=0.00013280181915554823 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.152427686958735 ,learning_rate_power=-0.28799201776490235 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.4963027452963351 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.9217599709070234 ,beta=0.9138382864059108].
2023-08-03 20:49:33,698 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.4221573127596975 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.38094436432571865 ,rho=0.5793723029092165 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.6126599571930443 ,beta_2=0.3252433322790711 ,learning_rate_power=-0.5082545445459454 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.1609383530752152 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:49:33,698 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0.4221573127596975 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.38094436432571865 ,rho=0.5793723029092165 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.6126599571930443 ,beta_2=0.3252433322790711 ,learning_rate_power=-0.5082545445459454 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.1609383530752152 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:49:34,475 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:49:34,475 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:49:40,017 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:49:40,017 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:49:54,845 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0.43091669858497916 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.21986670412126907 ,rho=0.006330770386702045 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7498515812451091 ,beta_2=0.465331012603466 ,learning_rate_power=-0.43305624024513856 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8029078956061979 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5638030930964354 ,beta=0.7299323966596429].
2023-08-03 20:49:54,845 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7932334858939903, momentum=0.43091669858497916 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.21986670412126907 ,rho=0.006330770386702045 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.7498515812451091 ,beta_2=0.465331012603466 ,learning_rate_power=-0.43305624024513856 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.8029078956061979 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.5638030930964354 ,beta=0.7299323966596429].
2023-08-03 20:49:55,990 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4332621504491043, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.4089071592794673 ,epsilon=0.00032410883742831965 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.1541313615932942 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9141532227775521 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.795863764956594 ,beta=0.7299323966596429].
2023-08-03 20:49:55,990 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4332621504491043, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.4089071592794673 ,epsilon=0.00032410883742831965 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.1541313615932942 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.9141532227775521 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.795863764956594 ,beta=0.7299323966596429].
2023-08-03 20:49:57,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:49:57,712 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:50:00,114 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5715857517243618, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.613528440345322 ,rho=0.7611549135043515 ,epsilon=0.000937732611613907 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5190024596161326 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8357058615260138 ,beta=0.002620332258514657].
2023-08-03 20:50:00,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5715857517243618, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.613528440345322 ,rho=0.7611549135043515 ,epsilon=0.000937732611613907 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.5190024596161326 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.8357058615260138 ,beta=0.002620332258514657].
2023-08-03 20:50:18,697 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:50:18,697 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:50:19,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:50:19,691 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:50:21,562 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:50:21,562 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:50:24,852 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:50:24,852 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:50:38,829 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.43869904545019955, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00015295058006808846 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6653068756519309 ,initial_accumulator_value=0.06011568130376288 ,l1_regularization_strength=0.16479799407596285 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:50:38,829 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.43869904545019955, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.00015295058006808846 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.6653068756519309 ,initial_accumulator_value=0.06011568130376288 ,l1_regularization_strength=0.16479799407596285 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:50:40,120 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:50:40,121 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:50:41,716 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05448501137326023, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=0.00026593865377461215 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009034817573074467 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.15111700554434104 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3209040606443504 ,beta=0.1833258461001176].
2023-08-03 20:50:41,716 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05448501137326023, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=True ,weight_decay=0.00026593865377461215 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=0.0009034817573074467 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.15111700554434104 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.3209040606443504 ,beta=0.1833258461001176].
2023-08-03 20:50:44,743 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:50:44,743 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:00,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:00,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:03,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:03,538 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:05,658 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:05,658 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:07,398 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:07,399 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:20,567 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0016730758397915481 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6228503299937993 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.46512893386950593 ,beta=0.7299323966596429].
2023-08-03 20:51:20,567 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7932334858939903, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0016730758397915481 ,use_ema=False ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.6228503299937993 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.46512893386950593 ,beta=0.7299323966596429].
2023-08-03 20:51:23,653 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:23,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:25,776 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.6148143445431001 ,nesterov=False ,amsgrad=False ,weight_decay=0.004597057023584646 ,use_ema=True ,ema_momentum=0.6211093229565141 ,rho=0.9484849726500528 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.604721324654289 ,initial_accumulator_value=0.8038489583977014 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.3425016606195934].
2023-08-03 20:51:25,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.6148143445431001 ,nesterov=False ,amsgrad=False ,weight_decay=0.004597057023584646 ,use_ema=True ,ema_momentum=0.6211093229565141 ,rho=0.9484849726500528 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.604721324654289 ,initial_accumulator_value=0.8038489583977014 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.3425016606195934].
2023-08-03 20:51:27,748 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:27,749 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:44,677 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:44,678 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:46,200 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006361034064079987 ,use_ema=False ,ema_momentum=0.30875665169391975 ,rho=0.5165482542912765 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.647216273894848 ,initial_accumulator_value=0.044785457902084436 ,l1_regularization_strength=0.30041509188558535 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.667888088575438].
2023-08-03 20:51:46,200 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7932334858939903, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006361034064079987 ,use_ema=False ,ema_momentum=0.30875665169391975 ,rho=0.5165482542912765 ,epsilon=1.817571739508673e-05 ,centered=True ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.647216273894848 ,initial_accumulator_value=0.044785457902084436 ,l1_regularization_strength=0.30041509188558535 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.667888088575438].
2023-08-03 20:51:51,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:51:51,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7932334858939903, momentum=0.13359583106135686 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8317926166505266 ,rho=0.014180526947371375 ,epsilon=1.817571739508673e-05 ,centered=False ,beta_1=0.1882327891335287 ,beta_2=0.3956791408365319 ,learning_rate_power=-0.1903346109634917 ,initial_accumulator_value=0.22788136074770093 ,l1_regularization_strength=0.5803689825140037 ,l2_regularization_strength=0.8347159245099168 ,l2_shrinkage_regularization_strength=0.05703350946633623 ,beta=0.7299323966596429].
2023-08-03 20:52:12,050 INFO: Saving the results to the folder specified in the arguments.
2023-08-03 20:52:12,053 INFO: Closing the multiprocessing pool.
2023-08-03 20:52:12,053 INFO: Experiment finished.

2023-08-22 02:31:39,311 INFO: Starting experiment with the arguments logged below.
2023-08-22 02:31:39,311 INFO: Namespace(results_path='/mnt/lustre/users/mbornman1/evoopt-cnn/experiments/fashionmnist_pop100_gen50_alexnet_tou20_cxp70_mut30_gmp50_alexnet_epo10_bat1024_sed1', cpu_count=4, seed=1, dataset='fashion_mnist', pop_size=100, ngen=50, model='alexnet', epochs=10, batch_size=1024, tournsize=20, cxpb=0.5, mutpb=0.2, gene_mut_prob=0.5)
2023-08-22 02:31:39,311 INFO: Setting the random number generator seed for this experiment.
2023-08-22 02:31:39,311 INFO: Initializing the multiprocessing pool.
2023-08-22 02:31:39,324 INFO: Running the evolutionary algorithm with the given hyper-parameters. This may take a while. Statistics for every generation will be printed below.
2023-08-22 02:31:39,325 INFO: Setting up DEAP toolbox.
2023-08-22 02:31:39,325 INFO: Registering individual initialization method.
2023-08-22 02:31:39,325 INFO: Registering population initialization method.
2023-08-22 02:31:39,325 INFO: Registering the selection method.
2023-08-22 02:31:39,325 INFO: Registering the evaluation method.
2023-08-22 02:31:39,325 INFO: Registering the genetic operators.
2023-08-22 02:31:39,325 INFO: Setting up the hall of fame and stats we want to keep track of.
2023-08-22 02:31:39,325 INFO: Initializing the initial population.
2023-08-22 02:31:39,352 INFO: Running the evolutionary algorithm.
2023-08-22 02:31:39,352 INFO: Evaluating fitness for the initial generation of individuals.
2023-08-22 02:31:39,352 INFO: Will evaluate fitness for 100 individuals.
2023-08-22 02:31:41,073 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 02:31:41,073 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 02:31:41,073 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 02:31:41,073 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 02:31:41,361 DEBUG: Creating converter from 7 to 5
2023-08-22 02:31:41,361 DEBUG: Creating converter from 7 to 5
2023-08-22 02:31:41,361 DEBUG: Creating converter from 5 to 7
2023-08-22 02:31:41,361 DEBUG: Creating converter from 7 to 5
2023-08-22 02:31:41,361 DEBUG: Creating converter from 7 to 5
2023-08-22 02:31:41,361 DEBUG: Creating converter from 5 to 7
2023-08-22 02:31:41,361 DEBUG: Creating converter from 7 to 5
2023-08-22 02:31:41,361 DEBUG: Creating converter from 5 to 7
2023-08-22 02:31:41,361 DEBUG: Creating converter from 5 to 7
2023-08-22 02:31:41,362 DEBUG: Creating converter from 7 to 5
2023-08-22 02:31:41,362 DEBUG: Creating converter from 5 to 7
2023-08-22 02:31:41,362 DEBUG: Creating converter from 7 to 5
2023-08-22 02:31:41,362 DEBUG: Creating converter from 5 to 7
2023-08-22 02:31:41,362 DEBUG: Creating converter from 7 to 5
2023-08-22 02:31:41,362 DEBUG: Creating converter from 5 to 7
2023-08-22 02:31:41,362 DEBUG: Creating converter from 5 to 7
2023-08-22 02:31:47,529 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-22 02:31:47,529 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8686868686868687 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-22 02:31:47,531 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 02:31:47,531 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 02:31:47,580 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-22 02:31:47,581 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-22 02:31:47,596 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 02:31:47,596 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 02:32:13,294 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-22 02:32:13,295 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-22 02:32:13,401 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 02:32:13,401 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 02:32:13,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5858585858585859 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7373737373737375].
2023-08-22 02:32:13,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5858585858585859 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.7373737373737375].
2023-08-22 02:32:14,169 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-22 02:32:14,169 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-22 02:32:33,973 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:32:33,973 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:32:34,617 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-22 02:32:34,617 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-22 02:32:34,711 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 02:32:34,711 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 02:32:35,771 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 02:32:35,771 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 02:32:54,282 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.5252525252525253 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.4747474747474748].
2023-08-22 02:32:54,282 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.5252525252525253 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.4747474747474748].
2023-08-22 02:32:55,031 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-22 02:32:55,031 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-22 02:32:55,380 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-22 02:32:55,381 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-22 02:32:55,499 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-22 02:32:55,499 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-22 02:33:15,303 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 02:33:15,303 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 02:33:16,275 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-22 02:33:16,275 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-22 02:33:16,406 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.8989898989898991 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7373737373737375 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-22 02:33:16,406 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.8989898989898991 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.7373737373737375 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-22 02:33:21,250 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-22 02:33:21,250 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-22 02:33:35,592 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-22 02:33:35,592 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-22 02:33:36,932 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008788 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.6565656565656566 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.10101010101010102].
2023-08-22 02:33:36,932 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008788 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.6565656565656566 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.10101010101010102].
2023-08-22 02:33:37,728 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-22 02:33:37,729 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-22 02:33:43,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 02:33:43,239 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 02:33:57,744 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.4141414141414142 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5252525252525253].
2023-08-22 02:33:57,744 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.4141414141414142 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5252525252525253].
2023-08-22 02:34:02,217 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-22 02:34:02,217 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-22 02:34:04,044 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-22 02:34:04,044 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-22 02:34:04,960 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.19191919191919193 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=1.0 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.18181818181818182].
2023-08-22 02:34:04,960 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.19191919191919193 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=1.0 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.18181818181818182].
2023-08-22 02:34:18,468 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5656565656565657 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.36363636363636365].
2023-08-22 02:34:18,469 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.5656565656565657 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.36363636363636365].
2023-08-22 02:34:25,600 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0.11111111111111112 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.3434343434343435 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.9494949494949496].
2023-08-22 02:34:25,600 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.888888888888889, momentum=0.11111111111111112 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.3434343434343435 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.9494949494949496].
2023-08-22 02:34:29,154 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 02:34:29,154 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6363636363636365 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.42424242424242425].
2023-08-22 02:34:30,120 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.8989898989898991 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.43434343434343436].
2023-08-22 02:34:30,120 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.10101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.8989898989898991 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.43434343434343436].
2023-08-22 02:34:41,071 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.696969696969697, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.4545454545454546 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.13131313131313133].
2023-08-22 02:34:41,071 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.696969696969697, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=False ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.4545454545454546 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.13131313131313133].
2023-08-22 02:34:46,299 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.030303030303030304].
2023-08-22 02:34:46,299 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.030303030303030304].
2023-08-22 02:34:49,250 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.7777777777777778 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5454545454545455].
2023-08-22 02:34:49,250 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.7777777777777778 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5454545454545455].
2023-08-22 02:34:56,710 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.030303030303030304, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.08080808080808081].
2023-08-22 02:34:56,710 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.030303030303030304, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.797979797979798 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.08080808080808081].
2023-08-22 02:35:02,981 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 02:35:02,981 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.15151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5757575757575758].
2023-08-22 02:35:06,876 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.9393939393939394 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.17171717171717174 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5656565656565657].
2023-08-22 02:35:06,876 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.9393939393939394 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.17171717171717174 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.5656565656565657].
2023-08-22 02:35:11,224 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9191919191919192, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5454545454545455 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.4747474747474748 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4040404040404041].
2023-08-22 02:35:11,224 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9191919191919192, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.5454545454545455 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.4747474747474748 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4040404040404041].
2023-08-22 02:35:16,886 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.09090909090909091, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.36363636363636365 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.8686868686868687 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.696969696969697].
2023-08-22 02:35:16,887 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.09090909090909091, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.36363636363636365 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.8686868686868687 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.696969696969697].
2023-08-22 02:35:22,564 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.696969696969697 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.7171717171717172 ,epsilon=1e-10 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.595959595959596].
2023-08-22 02:35:22,564 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.696969696969697 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.7171717171717172 ,epsilon=1e-10 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.595959595959596].
2023-08-22 02:35:32,866 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.13131313131313133 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.07070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.020202020202020204].
2023-08-22 02:35:32,866 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.13131313131313133 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.07070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.020202020202020204].
2023-08-22 02:35:33,080 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.9393939393939394].
2023-08-22 02:35:33,081 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.9393939393939394].
2023-08-22 02:35:37,942 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.6262626262626263 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-22 02:35:37,943 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.6262626262626263 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-22 02:35:44,139 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9595959595959597, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7474747474747475 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8989898989898991].
2023-08-22 02:35:44,140 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9595959595959597, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.0 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.7474747474747475 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8989898989898991].
2023-08-22 02:35:52,784 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.31313131313131315 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 02:35:52,785 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.31313131313131315 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.43434343434343436 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.16161616161616163].
2023-08-22 02:35:53,827 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.04040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.008485000000000001 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.888888888888889 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.48484848484848486 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.21212121212121213].
2023-08-22 02:35:53,827 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.04040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.008485000000000001 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.888888888888889 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.48484848484848486 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.21212121212121213].
2023-08-22 02:35:59,138 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.5252525252525253 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.6464646464646465].
2023-08-22 02:35:59,138 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0065660000000000015 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.5252525252525253 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.7777777777777778 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.6464646464646465].
2023-08-22 02:36:10,629 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.22222222222222224 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=1.0 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.9090909090909092 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8787878787878789].
2023-08-22 02:36:10,629 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.22222222222222224 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=1.0 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.9090909090909092 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8787878787878789].
2023-08-22 02:36:15,924 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 02:36:15,924 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.7575757575757577 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.7474747474747475].
2023-08-22 02:36:16,322 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.4141414141414142 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.686868686868687].
2023-08-22 02:36:16,323 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.4141414141414142 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.686868686868687].
2023-08-22 02:36:18,814 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7575757575757577, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5353535353535354 ,rho=0.5151515151515152 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.11111111111111112 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.4747474747474748].
2023-08-22 02:36:18,814 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7575757575757577, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5353535353535354 ,rho=0.5151515151515152 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.11111111111111112 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.4747474747474748].
2023-08-22 02:36:31,663 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-22 02:36:31,663 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0.595959595959596 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=0.12121212121212122 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.6464646464646465].
2023-08-22 02:36:37,387 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.04040404040404041].
2023-08-22 02:36:37,387 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.696969696969697 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.38383838383838387 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.04040404040404041].
2023-08-22 02:36:38,184 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5353535353535354, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.4040404040404041 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.4646464646464647].
2023-08-22 02:36:38,184 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5353535353535354, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.4040404040404041 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.6161616161616162 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.4646464646464647].
2023-08-22 02:36:38,770 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.98989898989899, momentum=0.43434343434343436 ,nesterov=False ,amsgrad=True ,weight_decay=0.006162000000000001 ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.18181818181818182 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.6565656565656566].
2023-08-22 02:36:38,770 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.98989898989899, momentum=0.43434343434343436 ,nesterov=False ,amsgrad=True ,weight_decay=0.006162000000000001 ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.18181818181818182 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.6565656565656566].
2023-08-22 02:36:53,705 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9494949494949496, momentum=0.5353535353535354 ,nesterov=False ,amsgrad=False ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.29292929292929293 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.030303030303030304].
2023-08-22 02:36:53,705 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9494949494949496, momentum=0.5353535353535354 ,nesterov=False ,amsgrad=False ,weight_decay=0.01 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.29292929292929293 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.030303030303030304].
2023-08-22 02:37:00,355 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.4141414141414142 ,epsilon=1e-10 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.2828282828282829 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.8787878787878789].
2023-08-22 02:37:00,355 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5454545454545455 ,rho=0.4141414141414142 ,epsilon=1e-10 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.787878787878788 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.2828282828282829 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.8787878787878789].
2023-08-22 02:37:00,626 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7070707070707072 ,rho=0.3434343434343435 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.13131313131313133 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4545454545454546].
2023-08-22 02:37:00,626 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7070707070707072 ,rho=0.3434343434343435 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.13131313131313133 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4545454545454546].
2023-08-22 02:37:01,461 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.6666666666666667 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.393939393939394 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.7676767676767677].
2023-08-22 02:37:01,462 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.6666666666666667 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.393939393939394 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.7676767676767677].
2023-08-22 02:37:17,475 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.32323232323232326, momentum=0.19191919191919193 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.5454545454545455 ,epsilon=0.0007878788090909091 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.13131313131313133].
2023-08-22 02:37:17,475 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.32323232323232326, momentum=0.19191919191919193 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.5454545454545455 ,epsilon=0.0007878788090909091 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.06060606060606061 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.13131313131313133].
2023-08-22 02:37:21,547 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009394000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8080808080808082 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.37373737373737376 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.43434343434343436].
2023-08-22 02:37:21,547 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009394000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8080808080808082 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.37373737373737376 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.43434343434343436].
2023-08-22 02:37:22,408 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.3434343434343435, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.32323232323232326 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.11111111111111112 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.13131313131313133].
2023-08-22 02:37:22,408 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.3434343434343435, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.32323232323232326 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.11111111111111112 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.13131313131313133].
2023-08-22 02:37:27,636 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7171717171717172, momentum=0.9090909090909092 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.494949494949495 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.3535353535353536 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=1.0].
2023-08-22 02:37:27,636 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7171717171717172, momentum=0.9090909090909092 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.494949494949495 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.3535353535353536 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=1.0].
2023-08-22 02:37:39,766 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8585858585858587, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0022230000000000006 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.8686868686868687 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.494949494949495 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.6363636363636365].
2023-08-22 02:37:39,766 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8585858585858587, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0022230000000000006 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.8686868686868687 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.494949494949495 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.6363636363636365].
2023-08-22 02:37:42,261 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8989898989898991, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.8282828282828284 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.26262626262626265].
2023-08-22 02:37:42,261 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8989898989898991, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.8282828282828284 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.020202020202020204 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.26262626262626265].
2023-08-22 02:37:44,690 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.4747474747474748 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.14141414141414144].
2023-08-22 02:37:44,690 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.4040404040404041, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.4747474747474748 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.6565656565656566 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.14141414141414144].
2023-08-22 02:37:48,016 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.3535353535353536 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.25252525252525254 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.7474747474747475].
2023-08-22 02:37:48,017 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9393939393939394, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.3535353535353536 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.25252525252525254 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.7474747474747475].
2023-08-22 02:38:04,377 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8080808080808082, momentum=0.22222222222222224 ,nesterov=True ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.31313131313131315 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.9292929292929294].
2023-08-22 02:38:04,377 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8080808080808082, momentum=0.22222222222222224 ,nesterov=True ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.31313131313131315 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.9292929292929294].
2023-08-22 02:38:07,874 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0011120000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5050505050505051 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.8080808080808082 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.14141414141414144].
2023-08-22 02:38:07,874 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0011120000000000001 ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.5050505050505051 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.8080808080808082 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.14141414141414144].
2023-08-22 02:38:08,233 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.14141414141414144, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.32323232323232326 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.797979797979798 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.6262626262626263].
2023-08-22 02:38:08,233 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.14141414141414144, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.32323232323232326 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.797979797979798 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.6262626262626263].
2023-08-22 02:38:09,666 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.09090909090909091 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 02:38:09,667 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.09090909090909091 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.8787878787878789 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.7575757575757577].
2023-08-22 02:38:29,577 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.27272727272727276 ,nesterov=False ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.16161616161616163 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.7171717171717172].
2023-08-22 02:38:29,578 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.27272727272727276 ,nesterov=False ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.16161616161616163 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.7171717171717172].
2023-08-22 02:38:31,130 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:38:31,130 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:38:31,252 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9292929292929294 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.18181818181818182 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6262626262626263].
2023-08-22 02:38:31,252 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.9292929292929294 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.18181818181818182 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.6262626262626263].
2023-08-22 02:38:35,774 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0.9696969696969697 ,nesterov=False ,amsgrad=True ,weight_decay=0.006970000000000001 ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.12121212121212122 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.24242424242424243].
2023-08-22 02:38:35,775 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0.9696969696969697 ,nesterov=False ,amsgrad=True ,weight_decay=0.006970000000000001 ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.12121212121212122 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.24242424242424243].
2023-08-22 02:38:50,674 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.797979797979798, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.98989898989899 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5151515151515152 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.7676767676767677].
2023-08-22 02:38:50,675 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.797979797979798, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.98989898989899 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5151515151515152 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.7676767676767677].
2023-08-22 02:38:52,681 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.8989898989898991 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.8484848484848485].
2023-08-22 02:38:52,681 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.19191919191919193, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.8989898989898991 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.8484848484848485].
2023-08-22 02:38:52,804 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.11111111111111112, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.00020300000000000003 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.4747474747474748 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.20202020202020204 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8080808080808082].
2023-08-22 02:38:52,804 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.11111111111111112, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=0.00020300000000000003 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.4747474747474748 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.20202020202020204 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8080808080808082].
2023-08-22 02:38:57,355 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.393939393939394 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.30303030303030304 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.22222222222222224].
2023-08-22 02:38:57,355 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7171717171717172, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.393939393939394 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.30303030303030304 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.22222222222222224].
2023-08-22 02:39:11,201 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:39:11,201 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:39:15,976 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 02:39:15,976 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 02:39:16,206 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6666666666666667 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.0 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.48484848484848486].
2023-08-22 02:39:16,208 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6666666666666667 ,epsilon=0.00017171725454545453 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.0 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.48484848484848486].
2023-08-22 02:39:24,941 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9494949494949496, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.9797979797979799 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.8989898989898991].
2023-08-22 02:39:24,941 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9494949494949496, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.9797979797979799 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.8989898989898991].
2023-08-22 02:39:31,910 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.696969696969697, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.3535353535353536 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7171717171717172].
2023-08-22 02:39:31,911 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.696969696969697, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.3535353535353536 ,epsilon=0.0009898989909090908 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7171717171717172].
2023-08-22 02:39:36,779 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=0.001213 ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.9494949494949496 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.43434343434343436 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.6666666666666667].
2023-08-22 02:39:36,780 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=0.001213 ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.9494949494949496 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.43434343434343436 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.6666666666666667].
2023-08-22 02:39:37,598 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.010101010101010102, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.15151515151515152 ,rho=0.8585858585858587 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=1.0 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7777777777777778 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-22 02:39:37,598 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.010101010101010102, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.15151515151515152 ,rho=0.8585858585858587 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=1.0 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.7777777777777778 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-22 02:39:54,063 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5858585858585859, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.09090909090909091 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.6464646464646465 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.6565656565656566].
2023-08-22 02:39:54,063 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5858585858585859, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.09090909090909091 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.6464646464646465 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.6565656565656566].
2023-08-22 02:39:58,087 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:39:58,088 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:40:03,856 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.595959595959596 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.30303030303030304 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.2828282828282829].
2023-08-22 02:40:03,856 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.595959595959596 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.30303030303030304 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.2828282828282829].
2023-08-22 02:40:12,978 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.5858585858585859 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.6464646464646465 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.7272727272727273].
2023-08-22 02:40:12,978 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.5858585858585859 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.6464646464646465 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.7272727272727273].
2023-08-22 02:40:19,415 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=False ,ema_momentum=0.787878787878788 ,rho=0.9292929292929294 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7070707070707072].
2023-08-22 02:40:19,416 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=False ,ema_momentum=0.787878787878788 ,rho=0.9292929292929294 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7070707070707072].
2023-08-22 02:40:40,002 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.11111111111111112, momentum=0.5151515151515152 ,nesterov=False ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6161616161616162 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.7171717171717172].
2023-08-22 02:40:40,002 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.11111111111111112, momentum=0.5151515151515152 ,nesterov=False ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6161616161616162 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.7676767676767677 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.7171717171717172].
2023-08-22 02:40:41,231 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.36363636363636365 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.7676767676767677].
2023-08-22 02:40:41,231 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.36363636363636365 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.7676767676767677].
2023-08-22 02:40:59,565 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 02:40:59,565 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 02:41:08,046 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.08080808080808081, momentum=0.7777777777777778 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.7373737373737375 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8181818181818182].
2023-08-22 02:41:08,047 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.08080808080808081, momentum=0.7777777777777778 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.7373737373737375 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8181818181818182].
2023-08-22 02:41:19,801 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7777777777777778, momentum=0.7272727272727273 ,nesterov=False ,amsgrad=False ,weight_decay=0.0021220000000000006 ,use_ema=False ,ema_momentum=0.7272727272727273 ,rho=0.9797979797979799 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.393939393939394 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.5858585858585859].
2023-08-22 02:41:19,801 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7777777777777778, momentum=0.7272727272727273 ,nesterov=False ,amsgrad=False ,weight_decay=0.0021220000000000006 ,use_ema=False ,ema_momentum=0.7272727272727273 ,rho=0.9797979797979799 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.393939393939394 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.5858585858585859].
2023-08-22 02:41:31,054 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7474747474747475, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.4646464646464647 ,epsilon=0.0002727273454545454 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.5353535353535354].
2023-08-22 02:41:31,054 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7474747474747475, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.4646464646464647 ,epsilon=0.0002727273454545454 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.4040404040404041 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.5353535353535354].
2023-08-22 02:41:41,125 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.29292929292929293, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.06060606060606061 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.9494949494949496 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.393939393939394].
2023-08-22 02:41:41,126 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.29292929292929293, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.06060606060606061 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.9494949494949496 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.393939393939394].
2023-08-22 02:41:52,551 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.43434343434343436, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.5050505050505051 ,epsilon=0.0007070707363636364 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.797979797979798 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.5252525252525253].
2023-08-22 02:41:52,551 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.43434343434343436, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.5050505050505051 ,epsilon=0.0007070707363636364 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.797979797979798 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.5252525252525253].
2023-08-22 02:42:12,954 INFO: Applying selection operators for generation 1.
2023-08-22 02:42:12,955 INFO: Applying genetic operators for generation 1.
2023-08-22 02:42:12,961 INFO: Evaluating fitness for for generation 1.
2023-08-22 02:42:12,961 INFO: Will evaluate fitness for 58 individuals.
2023-08-22 02:42:13,486 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 02:42:13,486 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 02:42:13,571 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.7676767676767677].
2023-08-22 02:42:13,572 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.7676767676767677].
2023-08-22 02:42:13,592 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.32323232323232326, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.888888888888889 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.42424242424242425].
2023-08-22 02:42:13,593 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.32323232323232326, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.888888888888889 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.42424242424242425].
2023-08-22 02:42:13,595 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6767676767676768].
2023-08-22 02:42:13,596 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6767676767676768].
2023-08-22 02:42:33,107 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 02:42:33,108 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 02:42:33,333 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.8585858585858587].
2023-08-22 02:42:33,333 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.8585858585858587].
2023-08-22 02:42:35,102 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:42:35,102 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:42:35,165 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.05050505050505051 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6666666666666667].
2023-08-22 02:42:35,165 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.05050505050505051 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6666666666666667].
2023-08-22 02:42:54,154 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 02:42:54,154 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 02:42:55,485 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.797979797979798, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.7272727272727273 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.4040404040404041].
2023-08-22 02:42:55,485 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.797979797979798, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.7272727272727273 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.4040404040404041].
2023-08-22 02:42:56,902 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.020202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6464646464646465].
2023-08-22 02:42:56,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.020202020202020204 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6464646464646465].
2023-08-22 02:42:57,489 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:42:57,489 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:43:15,696 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:43:15,696 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:43:17,058 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.36363636363636365 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:43:17,058 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.36363636363636365 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:43:18,628 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 02:43:18,628 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 02:43:19,743 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 02:43:19,743 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 02:43:35,632 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:43:35,632 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:43:38,808 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:43:38,809 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:43:41,627 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.6262626262626263 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:43:41,627 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.6262626262626263 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:43:42,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:43:42,373 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:43:56,241 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 02:43:56,241 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 02:43:59,542 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8383838383838385, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6464646464646465 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.5757575757575758].
2023-08-22 02:43:59,542 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8383838383838385, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6464646464646465 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5656565656565657 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.5757575757575758].
2023-08-22 02:44:03,230 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.494949494949495].
2023-08-22 02:44:03,230 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.494949494949495].
2023-08-22 02:44:04,195 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.07070707070707072, momentum=0.09090909090909091 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.5555555555555556 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.9393939393939394].
2023-08-22 02:44:04,195 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.07070707070707072, momentum=0.09090909090909091 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.5555555555555556 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.9393939393939394].
2023-08-22 02:44:16,191 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 02:44:16,191 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.13131313131313133 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.24242424242424243].
2023-08-22 02:44:20,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 02:44:20,051 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 02:44:25,793 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.3434343434343435, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=1.0 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4747474747474748].
2023-08-22 02:44:25,793 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.3434343434343435, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=1.0 ,epsilon=0.0005656566090909091 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4747474747474748].
2023-08-22 02:44:31,355 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.98989898989899 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.12121212121212122].
2023-08-22 02:44:31,355 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9292929292929294, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.98989898989899 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.12121212121212122].
2023-08-22 02:44:36,877 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:44:36,877 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:44:42,968 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-22 02:44:42,969 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6565656565656566 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-22 02:44:48,767 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9191919191919192, momentum=0.5353535353535354 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8585858585858587].
2023-08-22 02:44:48,768 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9191919191919192, momentum=0.5353535353535354 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8585858585858587].
2023-08-22 02:44:50,702 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 02:44:50,703 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 02:44:57,482 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 02:44:57,482 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.22222222222222224 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 02:45:04,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:45:04,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.38383838383838387 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:45:10,277 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 02:45:10,277 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 02:45:13,697 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:45:13,698 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:45:17,196 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.9393939393939394].
2023-08-22 02:45:17,196 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005051000000000001 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.494949494949495 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.9393939393939394].
2023-08-22 02:45:27,905 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.33333333333333337 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.5454545454545455].
2023-08-22 02:45:27,905 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.33333333333333337 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.31313131313131315 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.5454545454545455].
2023-08-22 02:45:30,515 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 02:45:30,516 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 02:45:36,265 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:45:36,265 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:45:36,483 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.48484848484848486 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.6767676767676768].
2023-08-22 02:45:36,483 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.48484848484848486 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.6767676767676768].
2023-08-22 02:45:51,086 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=1.0 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 02:45:51,086 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=1.0 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.686868686868687 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 02:45:51,459 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:45:51,460 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:45:58,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6161616161616162].
2023-08-22 02:45:58,757 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6161616161616162].
2023-08-22 02:45:58,936 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.14141414141414144].
2023-08-22 02:45:58,936 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.14141414141414144].
2023-08-22 02:46:13,095 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:46:13,095 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:46:13,814 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:46:13,814 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:46:20,816 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.36363636363636365 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.7676767676767677].
2023-08-22 02:46:20,816 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.36363636363636365 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.7676767676767677].
2023-08-22 02:46:20,972 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 02:46:20,972 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 02:46:33,102 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.4545454545454546 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.5050505050505051].
2023-08-22 02:46:33,102 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.4545454545454546 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.5050505050505051].
2023-08-22 02:46:34,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:46:34,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:46:41,379 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.787878787878788 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6767676767676768].
2023-08-22 02:46:41,379 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.787878787878788 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.6767676767676768].
2023-08-22 02:46:54,685 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.30303030303030304 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.4040404040404041].
2023-08-22 02:46:54,685 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.30303030303030304 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.4040404040404041].
2023-08-22 02:46:56,563 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:46:56,564 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:47:03,654 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.29292929292929293 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.595959595959596 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.7676767676767677].
2023-08-22 02:47:03,654 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.29292929292929293 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.595959595959596 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.7676767676767677].
2023-08-22 02:47:16,786 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8181818181818182 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.8585858585858587].
2023-08-22 02:47:16,787 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.8181818181818182 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.8585858585858587].
2023-08-22 02:47:23,759 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:47:23,760 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:47:38,214 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 02:47:38,214 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 02:47:57,695 INFO: Applying selection operators for generation 2.
2023-08-22 02:47:57,697 INFO: Applying genetic operators for generation 2.
2023-08-22 02:47:57,701 INFO: Evaluating fitness for for generation 2.
2023-08-22 02:47:57,702 INFO: Will evaluate fitness for 66 individuals.
2023-08-22 02:47:58,275 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:47:58,275 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:47:58,286 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:47:58,286 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:47:58,390 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.29292929292929293 ,rho=0.30303030303030304 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8989898989898991].
2023-08-22 02:47:58,390 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.29292929292929293 ,rho=0.30303030303030304 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8989898989898991].
2023-08-22 02:47:58,405 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.6363636363636365 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.6464646464646465].
2023-08-22 02:47:58,405 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.6363636363636365 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.8080808080808082 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.6464646464646465].
2023-08-22 02:48:16,529 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:48:16,529 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:48:18,600 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6464646464646465 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:48:18,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6464646464646465 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:48:18,719 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:48:18,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:48:19,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:48:19,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=1.0 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:48:39,021 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:48:39,021 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:48:39,582 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:48:39,583 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:48:41,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:48:41,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:48:41,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:48:41,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:48:59,909 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:48:59,909 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:49:01,721 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:49:01,721 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:49:02,333 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:49:02,333 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:49:04,118 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:49:04,118 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:49:22,114 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.6767676767676768 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.04040404040404041].
2023-08-22 02:49:22,115 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.6767676767676768 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.04040404040404041].
2023-08-22 02:49:22,588 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.36363636363636365 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:49:22,588 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.36363636363636365 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:49:24,291 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:49:24,292 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:49:26,929 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:49:26,929 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:49:42,438 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:49:42,438 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:49:44,332 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 02:49:44,333 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 02:49:45,056 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:49:45,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:49:47,456 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:49:47,456 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:50:05,277 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:50:05,277 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:50:05,433 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:50:05,433 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:50:08,248 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 02:50:08,248 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 02:50:10,079 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.888888888888889 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-22 02:50:10,080 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.888888888888889 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.5858585858585859].
2023-08-22 02:50:23,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.4747474747474748].
2023-08-22 02:50:23,373 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.4747474747474748].
2023-08-22 02:50:26,758 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:50:26,758 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:50:26,858 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.36363636363636365 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 02:50:26,859 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.36363636363636365 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 02:50:28,702 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.08080808080808081 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.08080808080808081].
2023-08-22 02:50:28,702 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.08080808080808081 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.08080808080808081].
2023-08-22 02:50:45,694 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:50:45,694 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:50:45,848 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:50:45,848 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:50:48,761 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:50:48,761 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:50:51,341 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:50:51,342 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:51:06,287 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5555555555555556, momentum=0.0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.18181818181818182 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.25252525252525254].
2023-08-22 02:51:06,287 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5555555555555556, momentum=0.0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.18181818181818182 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.25252525252525254].
2023-08-22 02:51:08,634 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.25252525252525254].
2023-08-22 02:51:08,634 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.25252525252525254].
2023-08-22 02:51:11,157 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:51:11,157 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:51:11,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.14141414141414144].
2023-08-22 02:51:11,773 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.14141414141414144].
2023-08-22 02:51:28,662 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:51:28,662 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:51:30,992 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.8585858585858587].
2023-08-22 02:51:30,992 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.8585858585858587].
2023-08-22 02:51:31,670 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.6060606060606061 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.696969696969697].
2023-08-22 02:51:31,670 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9797979797979799 ,rho=0.6060606060606061 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.05050505050505051 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.696969696969697].
2023-08-22 02:51:33,929 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:51:33,929 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:51:49,186 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.14141414141414144].
2023-08-22 02:51:49,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.14141414141414144].
2023-08-22 02:51:51,314 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.14141414141414144].
2023-08-22 02:51:51,315 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.14141414141414144].
2023-08-22 02:51:53,715 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 02:51:53,715 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 02:51:53,807 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-22 02:51:53,808 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-22 02:52:11,107 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 02:52:11,107 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 02:52:13,509 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:52:13,509 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:52:13,953 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:52:13,953 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:52:23,321 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.25252525252525254].
2023-08-22 02:52:23,321 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.25252525252525254].
2023-08-22 02:52:31,626 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:52:31,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.05050505050505051 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:52:33,770 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.04040404040404041].
2023-08-22 02:52:33,770 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.04040404040404041].
2023-08-22 02:52:34,037 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:52:34,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:52:45,786 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:52:45,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.30303030303030304 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:52:52,715 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:52:52,716 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.16161616161616163 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6464646464646465].
2023-08-22 02:52:54,305 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8585858585858587].
2023-08-22 02:52:54,306 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8585858585858587].
2023-08-22 02:52:56,157 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.25252525252525254 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6363636363636365].
2023-08-22 02:52:56,157 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.25252525252525254 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.20202020202020204 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6363636363636365].
2023-08-22 02:53:08,642 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:53:08,643 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.595959595959596 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.12121212121212122].
2023-08-22 02:53:14,458 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 02:53:14,458 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 02:53:14,650 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:53:14,650 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:53:36,193 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7373737373737375, momentum=0.5656565656565657 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.494949494949495 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.8585858585858587].
2023-08-22 02:53:36,193 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7373737373737375, momentum=0.5656565656565657 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.494949494949495 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.8585858585858587].
2023-08-22 02:53:58,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:53:58,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:54:17,905 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:54:17,905 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:54:37,824 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:54:37,824 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.48484848484848486 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:54:57,515 INFO: Applying selection operators for generation 3.
2023-08-22 02:54:57,516 INFO: Applying genetic operators for generation 3.
2023-08-22 02:54:57,522 INFO: Evaluating fitness for for generation 3.
2023-08-22 02:54:57,522 INFO: Will evaluate fitness for 48 individuals.
2023-08-22 02:54:58,088 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.001213 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.9595959595959597 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8787878787878789].
2023-08-22 02:54:58,088 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.001213 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.9595959595959597 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8787878787878789].
2023-08-22 02:54:58,094 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:54:58,094 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:54:58,110 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8989898989898991, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.4040404040404041].
2023-08-22 02:54:58,110 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8989898989898991, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.4040404040404041].
2023-08-22 02:54:58,112 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:54:58,112 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:55:18,583 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8787878787878789].
2023-08-22 02:55:18,583 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8787878787878789].
2023-08-22 02:55:19,297 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 02:55:19,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 02:55:20,376 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:55:20,377 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:55:28,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:55:28,502 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:55:39,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:55:39,715 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:55:39,905 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=0.008182 ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8585858585858587].
2023-08-22 02:55:39,905 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=0.008182 ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8585858585858587].
2023-08-22 02:55:40,744 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:55:40,744 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:55:51,076 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:55:51,077 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.25252525252525254].
2023-08-22 02:56:00,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:56:00,207 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:56:00,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:56:00,481 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:56:03,619 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.13131313131313133 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.696969696969697 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:56:03,619 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.13131313131313133 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.696969696969697 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:56:11,882 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4747474747474748].
2023-08-22 02:56:11,882 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4747474747474748].
2023-08-22 02:56:20,629 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 02:56:20,630 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.595959595959596].
2023-08-22 02:56:20,740 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:56:20,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:56:25,724 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:56:25,724 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:56:35,261 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:56:35,261 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:56:41,018 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:56:41,018 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:56:43,623 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.030303030303030304 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8585858585858587].
2023-08-22 02:56:43,623 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.030303030303030304 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8585858585858587].
2023-08-22 02:56:46,169 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6262626262626263, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.19191919191919193 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 02:56:46,169 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6262626262626263, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.19191919191919193 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 02:56:55,561 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.25252525252525254 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.3535353535353536].
2023-08-22 02:56:55,561 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.25252525252525254 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.3535353535353536].
2023-08-22 02:57:01,845 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:57:01,845 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:57:02,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 02:57:02,408 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 02:57:06,371 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.6161616161616162 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.26262626262626265].
2023-08-22 02:57:06,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.6161616161616162 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.26262626262626265].
2023-08-22 02:57:17,863 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.4040404040404041].
2023-08-22 02:57:17,863 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.4040404040404041].
2023-08-22 02:57:22,928 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.27272727272727276, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.595959595959596 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.5858585858585859].
2023-08-22 02:57:22,928 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.27272727272727276, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.595959595959596 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.5858585858585859].
2023-08-22 02:57:24,290 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:57:24,290 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:57:29,250 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008081 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.4444444444444445 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.48484848484848486].
2023-08-22 02:57:29,250 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008081 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.4444444444444445 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.48484848484848486].
2023-08-22 02:57:41,072 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.22222222222222224, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.25252525252525254].
2023-08-22 02:57:41,072 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.22222222222222224, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.25252525252525254].
2023-08-22 02:57:44,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:57:44,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:57:45,262 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:57:45,262 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:57:52,593 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:57:52,593 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:05,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 02:58:05,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 02:58:06,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:06,451 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:10,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:10,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:13,462 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.494949494949495].
2023-08-22 02:58:13,463 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.494949494949495].
2023-08-22 02:58:26,179 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.4444444444444445 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.6565656565656566].
2023-08-22 02:58:26,179 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.4444444444444445 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.6565656565656566].
2023-08-22 02:58:26,952 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:26,952 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:31,458 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:31,458 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:36,190 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:36,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:47,555 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:47,555 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:50,087 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 02:58:50,088 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 02:58:52,043 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:52,044 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:56,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:58:56,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 02:59:12,322 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.4545454545454546 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.8585858585858587].
2023-08-22 02:59:12,322 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.4545454545454546 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.8585858585858587].
2023-08-22 02:59:34,733 INFO: Applying selection operators for generation 4.
2023-08-22 02:59:34,734 INFO: Applying genetic operators for generation 4.
2023-08-22 02:59:34,740 INFO: Evaluating fitness for for generation 4.
2023-08-22 02:59:34,740 INFO: Will evaluate fitness for 64 individuals.
2023-08-22 02:59:35,301 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:59:35,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:59:35,317 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:59:35,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:59:35,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:59:35,404 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:59:35,439 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6767676767676768 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.4646464646464647].
2023-08-22 02:59:35,439 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6767676767676768 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.4646464646464647].
2023-08-22 02:59:55,604 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.7676767676767677 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.8585858585858587].
2023-08-22 02:59:55,604 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.7676767676767677 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.8585858585858587].
2023-08-22 02:59:56,005 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:59:56,005 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:59:56,029 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:59:56,029 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:59:59,150 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 02:59:59,150 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:00:15,981 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:00:15,981 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:00:16,309 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=1e-10 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8585858585858587].
2023-08-22 03:00:16,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=1e-10 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8585858585858587].
2023-08-22 03:00:16,549 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.8585858585858587].
2023-08-22 03:00:16,549 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.8585858585858587].
2023-08-22 03:00:19,846 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:00:19,847 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:00:36,959 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.12121212121212122 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.8585858585858587].
2023-08-22 03:00:36,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.12121212121212122 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.8585858585858587].
2023-08-22 03:00:38,685 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:00:38,685 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:00:38,971 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:00:38,971 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:00:40,384 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.8585858585858587].
2023-08-22 03:00:40,384 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.8585858585858587].
2023-08-22 03:00:59,503 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:00:59,503 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:00:59,704 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:00:59,704 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:00:59,759 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8282828282828284, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.6767676767676768 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:00:59,760 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8282828282828284, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.6767676767676768 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:01:02,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:01:02,090 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:01:19,870 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:01:19,870 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:01:20,019 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 03:01:20,020 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 03:01:22,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:01:22,626 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:01:28,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:01:28,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:01:40,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.32323232323232326 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.8585858585858587].
2023-08-22 03:01:40,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.32323232323232326 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.8585858585858587].
2023-08-22 03:01:41,047 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.24242424242424243, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.08080808080808081 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.5151515151515152].
2023-08-22 03:01:41,047 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.24242424242424243, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.08080808080808081 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.5151515151515152].
2023-08-22 03:01:43,329 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.09090909090909091, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.25252525252525254 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.5353535353535354].
2023-08-22 03:01:43,330 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.09090909090909091, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.25252525252525254 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.5353535353535354].
2023-08-22 03:01:49,461 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 03:01:49,462 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 03:02:03,050 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:02:03,050 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:02:03,869 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.01 ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.5252525252525253 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 03:02:03,870 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.01 ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.5252525252525253 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 03:02:07,371 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7474747474747475 ,epsilon=0.0009696969727272727 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.5858585858585859].
2023-08-22 03:02:07,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7474747474747475 ,epsilon=0.0009696969727272727 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.5858585858585859].
2023-08-22 03:02:10,791 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 03:02:10,792 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 03:02:24,151 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.42424242424242425].
2023-08-22 03:02:24,152 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.42424242424242425].
2023-08-22 03:02:30,617 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:02:30,617 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:02:31,465 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.888888888888889 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:02:31,465 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.888888888888889 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:02:33,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:02:33,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:02:47,783 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 03:02:47,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 03:02:51,130 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:02:51,130 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:02:54,359 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:02:54,360 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:02:54,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:02:54,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:08,192 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:08,192 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:11,585 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:11,586 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:14,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:14,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:15,541 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.98989898989899, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.25252525252525254 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.11111111111111112].
2023-08-22 03:03:15,541 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.98989898989899, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.25252525252525254 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.11111111111111112].
2023-08-22 03:03:29,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:29,070 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:32,406 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:32,406 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:35,642 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:35,643 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:37,577 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.008081 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=1.0 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:37,577 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.008081 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=1.0 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:49,566 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:49,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:52,770 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 03:03:52,770 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 03:03:55,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:55,962 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:03:58,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.12121212121212122 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.8585858585858587].
2023-08-22 03:03:58,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.12121212121212122 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.8585858585858587].
2023-08-22 03:04:09,963 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:04:09,963 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:04:13,113 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:04:13,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:04:16,350 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8585858585858587].
2023-08-22 03:04:16,350 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8585858585858587].
2023-08-22 03:04:22,120 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.08080808080808081, momentum=0.6363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.6666666666666667 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.21212121212121213 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5050505050505051].
2023-08-22 03:04:22,120 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.08080808080808081, momentum=0.6363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.6666666666666667 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.21212121212121213 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5050505050505051].
2023-08-22 03:04:30,854 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:04:30,854 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:04:33,889 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.6161616161616162 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.4040404040404041].
2023-08-22 03:04:33,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.6161616161616162 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.4040404040404041].
2023-08-22 03:04:39,602 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6767676767676768 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.8585858585858587].
2023-08-22 03:04:39,602 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6767676767676768 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.8585858585858587].
2023-08-22 03:04:51,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.17171717171717174, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.10101010101010102 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8585858585858587].
2023-08-22 03:04:51,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.17171717171717174, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.10101010101010102 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8585858585858587].
2023-08-22 03:04:52,000 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:04:52,000 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:04:56,735 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 03:04:56,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 03:05:03,434 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:05:03,434 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:05:12,948 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.6767676767676768 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.4444444444444445].
2023-08-22 03:05:12,948 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.6767676767676768 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.4444444444444445].
2023-08-22 03:05:35,227 INFO: Applying selection operators for generation 5.
2023-08-22 03:05:35,228 INFO: Applying genetic operators for generation 5.
2023-08-22 03:05:35,233 INFO: Evaluating fitness for for generation 5.
2023-08-22 03:05:35,233 INFO: Will evaluate fitness for 57 individuals.
2023-08-22 03:05:35,792 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.8585858585858587].
2023-08-22 03:05:35,792 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.8585858585858587].
2023-08-22 03:05:35,797 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:05:35,797 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:05:35,916 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:05:35,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:05:35,926 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8282828282828284].
2023-08-22 03:05:35,926 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8282828282828284].
2023-08-22 03:05:55,966 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:05:55,966 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:05:56,326 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.29292929292929293].
2023-08-22 03:05:56,326 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.29292929292929293].
2023-08-22 03:05:57,037 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:05:57,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:06:06,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:06:06,801 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:06:16,328 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.0 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.31313131313131315].
2023-08-22 03:06:16,328 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.0 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.31313131313131315].
2023-08-22 03:06:17,314 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:06:17,314 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:06:17,495 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:06:17,495 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:06:27,159 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.04040404040404041].
2023-08-22 03:06:27,159 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.04040404040404041].
2023-08-22 03:06:37,906 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.8585858585858587].
2023-08-22 03:06:37,906 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.8585858585858587].
2023-08-22 03:06:37,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:06:37,923 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:06:38,571 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:06:38,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:06:50,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:06:50,102 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:06:58,865 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7676767676767677 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=1.0].
2023-08-22 03:06:58,865 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7676767676767677 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=1.0].
2023-08-22 03:06:59,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:06:59,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:01,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:01,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:10,967 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.6767676767676768 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.494949494949495].
2023-08-22 03:07:10,967 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.6767676767676768 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.494949494949495].
2023-08-22 03:07:19,468 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:19,469 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:21,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:21,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:22,612 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:22,612 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:33,452 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.888888888888889 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8585858585858587].
2023-08-22 03:07:33,452 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.888888888888889 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8585858585858587].
2023-08-22 03:07:40,307 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:40,307 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:42,258 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:42,258 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:43,198 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:43,198 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:07:56,495 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.8585858585858587].
2023-08-22 03:07:56,495 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.8585858585858587].
2023-08-22 03:08:00,819 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:08:00,819 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:08:03,281 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:08:03,282 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:08:03,770 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9595959595959597 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:08:03,770 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9595959595959597 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:08:17,365 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.8585858585858587].
2023-08-22 03:08:17,366 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.8585858585858587].
2023-08-22 03:08:21,162 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:08:21,162 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:08:24,292 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6767676767676768 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.98989898989899 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.16161616161616163].
2023-08-22 03:08:24,292 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6767676767676768 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.98989898989899 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.16161616161616163].
2023-08-22 03:08:28,125 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:08:28,125 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:08:37,582 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.888888888888889 ,rho=0.6767676767676768 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5353535353535354].
2023-08-22 03:08:37,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.888888888888889 ,rho=0.6767676767676768 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5353535353535354].
2023-08-22 03:08:42,096 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8585858585858587].
2023-08-22 03:08:42,096 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8585858585858587].
2023-08-22 03:08:46,131 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:08:46,131 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:08:48,720 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6767676767676768 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.06060606060606061].
2023-08-22 03:08:48,720 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6767676767676768 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.06060606060606061].
2023-08-22 03:09:00,518 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:00,518 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:05,099 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:05,099 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:06,509 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:06,509 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:11,843 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:11,843 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:20,805 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:20,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:25,422 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:25,423 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:27,400 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:27,400 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:32,791 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:32,791 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:41,665 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:41,665 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:46,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:46,390 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:47,816 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 03:09:47,816 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 03:09:53,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:09:53,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:10:06,738 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=0.008586 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.020202020202020204 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:10:06,739 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=0.008586 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.020202020202020204 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:10:10,436 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:10:10,437 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:10:29,703 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:10:29,704 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:10:30,879 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:10:30,879 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:10:49,644 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.08080808080808081].
2023-08-22 03:10:49,644 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.08080808080808081].
2023-08-22 03:10:50,896 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:10:50,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:10,256 INFO: Applying selection operators for generation 6.
2023-08-22 03:11:10,258 INFO: Applying genetic operators for generation 6.
2023-08-22 03:11:10,264 INFO: Evaluating fitness for for generation 6.
2023-08-22 03:11:10,264 INFO: Will evaluate fitness for 59 individuals.
2023-08-22 03:11:10,832 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001314 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.787878787878788].
2023-08-22 03:11:10,832 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001314 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.787878787878788].
2023-08-22 03:11:10,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:10,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:10,846 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:10,846 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:10,846 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:10,847 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:30,945 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:30,945 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:31,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:31,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:31,536 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:31,537 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:33,662 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:33,662 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:51,204 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.36363636363636365 ,rho=0.6767676767676768 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.17171717171717174].
2023-08-22 03:11:51,204 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.36363636363636365 ,rho=0.6767676767676768 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.17171717171717174].
2023-08-22 03:11:51,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.23232323232323235 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.8585858585858587].
2023-08-22 03:11:51,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.23232323232323235 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.8585858585858587].
2023-08-22 03:11:51,941 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8585858585858587].
2023-08-22 03:11:51,941 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8585858585858587].
2023-08-22 03:11:54,124 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:11:54,124 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:12:14,122 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.33333333333333337 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:12:14,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.33333333333333337 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:12:14,131 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.36363636363636365, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.5454545454545455].
2023-08-22 03:12:14,132 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.36363636363636365, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.5454545454545455].
2023-08-22 03:12:14,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:12:14,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:12:15,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.26262626262626265 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7171717171717172].
2023-08-22 03:12:15,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.26262626262626265 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.7171717171717172].
2023-08-22 03:12:35,034 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8787878787878789 ,epsilon=0.001 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 03:12:35,034 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8787878787878789 ,epsilon=0.001 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 03:12:36,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:12:36,431 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:12:37,494 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:12:37,494 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:12:37,849 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8585858585858587].
2023-08-22 03:12:37,849 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.33333333333333337 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8585858585858587].
2023-08-22 03:12:57,268 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:12:57,269 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:12:57,904 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.98989898989899 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5151515151515152].
2023-08-22 03:12:57,905 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.98989898989899 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5151515151515152].
2023-08-22 03:12:58,393 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:12:58,394 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:12:59,896 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:12:59,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:13:17,566 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.8585858585858587].
2023-08-22 03:13:17,566 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.42424242424242425 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.8585858585858587].
2023-08-22 03:13:18,416 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.10101010101010102 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.5555555555555556].
2023-08-22 03:13:18,416 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.10101010101010102 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.5555555555555556].
2023-08-22 03:13:18,575 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:13:18,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:13:20,275 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:13:20,275 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:13:38,946 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:13:38,947 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:13:40,464 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:13:40,464 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:13:41,225 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:13:41,225 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:13:41,360 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:13:41,360 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:13:59,146 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.30303030303030304 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.8585858585858587].
2023-08-22 03:13:59,146 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.30303030303030304 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.8585858585858587].
2023-08-22 03:14:00,719 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6060606060606061, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-22 03:14:00,720 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6060606060606061, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-22 03:14:01,465 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:14:01,465 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:14:01,562 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8585858585858587].
2023-08-22 03:14:01,562 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8585858585858587].
2023-08-22 03:14:21,843 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006667000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.696969696969697 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.8585858585858587].
2023-08-22 03:14:21,843 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006667000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.696969696969697 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.8585858585858587].
2023-08-22 03:14:22,328 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:14:22,329 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:14:22,676 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.33333333333333337 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8585858585858587].
2023-08-22 03:14:22,676 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.33333333333333337 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8585858585858587].
2023-08-22 03:14:24,053 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.5151515151515152 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8585858585858587].
2023-08-22 03:14:24,054 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.5151515151515152 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8585858585858587].
2023-08-22 03:14:42,673 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:14:42,674 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:14:45,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.8585858585858587].
2023-08-22 03:14:45,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.8585858585858587].
2023-08-22 03:14:47,222 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:14:47,222 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:14:52,994 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-22 03:14:52,994 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-22 03:15:03,064 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.6767676767676768 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.29292929292929293].
2023-08-22 03:15:03,064 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.6767676767676768 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.7676767676767677 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.29292929292929293].
2023-08-22 03:15:06,400 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:06,401 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:08,514 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:08,514 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:16,011 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:16,011 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:27,507 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:27,507 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:29,143 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:29,143 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:34,211 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:34,212 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:47,869 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:47,869 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:49,661 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:49,661 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:54,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:15:54,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:16:07,948 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:16:07,948 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:16:10,742 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:16:10,742 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:16:14,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.686868686868687 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.595959595959596 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8585858585858587].
2023-08-22 03:16:14,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.686868686868687 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.595959595959596 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8585858585858587].
2023-08-22 03:16:28,579 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.8585858585858587].
2023-08-22 03:16:28,579 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.8585858585858587].
2023-08-22 03:16:31,254 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:16:31,255 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:16:50,912 INFO: Applying selection operators for generation 7.
2023-08-22 03:16:50,914 INFO: Applying genetic operators for generation 7.
2023-08-22 03:16:50,919 INFO: Evaluating fitness for for generation 7.
2023-08-22 03:16:50,919 INFO: Will evaluate fitness for 64 individuals.
2023-08-22 03:16:51,457 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:16:51,457 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:16:51,468 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:16:51,468 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:16:51,552 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8585858585858587 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8080808080808082].
2023-08-22 03:16:51,553 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8585858585858587 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8080808080808082].
2023-08-22 03:16:51,554 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6464646464646465, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.5151515151515152 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.25252525252525254 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4545454545454546].
2023-08-22 03:16:51,554 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6464646464646465, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.5151515151515152 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.25252525252525254 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4545454545454546].
2023-08-22 03:17:11,221 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.8585858585858587].
2023-08-22 03:17:11,221 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5555555555555556, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.8585858585858587].
2023-08-22 03:17:12,162 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:17:12,162 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:17:12,263 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:17:12,264 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:17:12,882 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:17:12,882 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:17:32,313 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:17:32,313 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:17:32,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.686868686868687 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8282828282828284].
2023-08-22 03:17:32,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.686868686868687 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8282828282828284].
2023-08-22 03:17:33,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:17:33,318 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:17:42,044 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.15151515151515152 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.13131313131313133].
2023-08-22 03:17:42,044 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8787878787878789, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.15151515151515152 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.13131313131313133].
2023-08-22 03:17:52,617 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.08080808080808081].
2023-08-22 03:17:52,618 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.3434343434343435, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.5252525252525253 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.08080808080808081].
2023-08-22 03:17:54,513 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.4141414141414142].
2023-08-22 03:17:54,513 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.5353535353535354 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.4141414141414142].
2023-08-22 03:17:56,278 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:17:56,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:06,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:06,543 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:12,713 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:12,713 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:16,728 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.6767676767676768 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.8282828282828284].
2023-08-22 03:18:16,728 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.6767676767676768 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.8282828282828284].
2023-08-22 03:18:17,905 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.8484848484848485 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:17,905 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.8484848484848485 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:27,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:27,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:33,067 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9393939393939394].
2023-08-22 03:18:33,067 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9393939393939394].
2023-08-22 03:18:39,534 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:39,534 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:41,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:41,239 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:47,994 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.8585858585858587].
2023-08-22 03:18:47,995 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.8585858585858587].
2023-08-22 03:18:56,487 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:56,487 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:18:59,999 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:00,000 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:02,188 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:02,188 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:12,696 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:12,696 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:16,795 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:16,795 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:20,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:20,433 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:22,599 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:22,599 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:33,324 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:33,324 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:37,655 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:37,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:41,511 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:41,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:43,266 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:43,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:54,108 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:54,108 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:58,386 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:19:58,386 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:02,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:02,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:04,329 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:04,329 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:15,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:15,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:18,821 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:18,821 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:22,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:22,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:25,338 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.3535353535353536].
2023-08-22 03:20:25,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.3535353535353536].
2023-08-22 03:20:35,762 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:35,762 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:39,705 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:39,706 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:43,177 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:43,177 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:45,616 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:45,617 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:20:56,056 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.004950000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.9696969696969697].
2023-08-22 03:20:56,056 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8484848484848485, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.004950000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.9696969696969697].
2023-08-22 03:21:00,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:00,045 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:04,071 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8585858585858587].
2023-08-22 03:21:04,072 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8585858585858587].
2023-08-22 03:21:05,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:05,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:20,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.6767676767676768 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.8585858585858587].
2023-08-22 03:21:20,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.6767676767676768 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.8585858585858587].
2023-08-22 03:21:23,323 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9090909090909092, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.06060606060606061 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-22 03:21:23,323 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9090909090909092, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.06060606060606061 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.22222222222222224].
2023-08-22 03:21:24,974 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:24,975 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:26,920 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.888888888888889 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:26,920 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.888888888888889 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:42,942 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:42,943 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:43,623 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:43,623 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:45,321 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:45,321 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:50,688 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:21:50,688 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:22:03,812 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.888888888888889, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.888888888888889 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.8585858585858587].
2023-08-22 03:22:03,812 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.888888888888889, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.888888888888889 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.8585858585858587].
2023-08-22 03:22:03,850 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.8585858585858587].
2023-08-22 03:22:03,850 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.8585858585858587].
2023-08-22 03:22:06,203 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.11111111111111112 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.04040404040404041].
2023-08-22 03:22:06,203 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.11111111111111112 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.04040404040404041].
2023-08-22 03:22:11,073 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:22:11,073 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:22:26,952 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.4141414141414142 ,nesterov=True ,amsgrad=True ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.29292929292929293].
2023-08-22 03:22:26,952 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.4141414141414142 ,nesterov=True ,amsgrad=True ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.29292929292929293].
2023-08-22 03:22:47,589 INFO: Applying selection operators for generation 8.
2023-08-22 03:22:47,590 INFO: Applying genetic operators for generation 8.
2023-08-22 03:22:47,595 INFO: Evaluating fitness for for generation 8.
2023-08-22 03:22:47,595 INFO: Will evaluate fitness for 55 individuals.
2023-08-22 03:22:48,184 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:22:48,184 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:22:48,189 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:22:48,189 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:22:48,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:22:48,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:22:48,191 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:22:48,191 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:08,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:08,327 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:08,333 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:08,333 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:08,512 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:08,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:08,904 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:08,905 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:28,544 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.11111111111111112 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=1.0].
2023-08-22 03:23:28,544 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.11111111111111112 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=1.0].
2023-08-22 03:23:28,967 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:28,967 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:29,226 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:29,226 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:29,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:29,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:49,287 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5252525252525253 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.8585858585858587].
2023-08-22 03:23:49,287 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5252525252525253 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.8585858585858587].
2023-08-22 03:23:49,570 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:49,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:49,606 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:49,606 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:23:50,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.686868686868687].
2023-08-22 03:23:50,522 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.686868686868687].
2023-08-22 03:24:09,856 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.10101010101010102 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8585858585858587].
2023-08-22 03:24:09,857 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.10101010101010102 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8585858585858587].
2023-08-22 03:24:10,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:24:10,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:24:12,516 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.08080808080808081 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5353535353535354].
2023-08-22 03:24:12,517 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.08080808080808081 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5353535353535354].
2023-08-22 03:24:14,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:24:14,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:24:31,011 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:24:31,011 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:24:34,251 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.37373737373737376 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 03:24:34,252 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.37373737373737376 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 03:24:34,979 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.010101010101010102].
2023-08-22 03:24:34,980 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.010101010101010102].
2023-08-22 03:24:36,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.20202020202020204 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.8585858585858587].
2023-08-22 03:24:36,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.20202020202020204 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.8585858585858587].
2023-08-22 03:24:51,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:24:51,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:24:59,152 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:24:59,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:00,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:00,596 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:05,464 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:05,464 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:12,173 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:12,174 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:20,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:20,328 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:20,814 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:20,814 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:25,905 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:25,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:33,399 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.8585858585858587].
2023-08-22 03:25:33,400 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.8585858585858587].
2023-08-22 03:25:40,990 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7777777777777778, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=True ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.06060606060606061 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.12121212121212122].
2023-08-22 03:25:40,991 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7777777777777778, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=True ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.06060606060606061 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.12121212121212122].
2023-08-22 03:25:41,091 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.5858585858585859 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:41,091 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.5858585858585859 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:46,364 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:46,364 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:53,088 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:25:53,088 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:04,758 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 03:26:04,759 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 03:26:04,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:04,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:07,381 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:07,381 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:13,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:13,503 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:26,116 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:26,116 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:27,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:27,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:27,808 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:27,808 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:34,616 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:34,616 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:46,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:46,633 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:47,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 03:26:47,923 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 03:26:47,947 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:47,948 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:55,236 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:26:55,236 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:27:07,129 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0015160000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.020202020202020204].
2023-08-22 03:27:07,129 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0015160000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.020202020202020204].
2023-08-22 03:27:15,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:27:15,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:27:28,614 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8080808080808082 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.08080808080808081].
2023-08-22 03:27:28,614 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8080808080808082 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.08080808080808081].
2023-08-22 03:27:36,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:27:36,366 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:27:48,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:27:48,931 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:27:56,719 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:27:56,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:16,194 INFO: Applying selection operators for generation 9.
2023-08-22 03:28:16,195 INFO: Applying genetic operators for generation 9.
2023-08-22 03:28:16,201 INFO: Evaluating fitness for for generation 9.
2023-08-22 03:28:16,201 INFO: Will evaluate fitness for 62 individuals.
2023-08-22 03:28:16,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.24242424242424243 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9595959595959597].
2023-08-22 03:28:16,759 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.24242424242424243 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9595959595959597].
2023-08-22 03:28:16,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:16,806 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:16,878 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:16,878 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:16,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.6767676767676768 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.36363636363636365].
2023-08-22 03:28:16,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.6767676767676768 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.36363636363636365].
2023-08-22 03:28:37,250 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:37,251 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:37,272 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:37,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:39,764 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:39,764 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:40,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.6767676767676768 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:40,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.6767676767676768 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:57,608 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:57,608 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:58,171 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:28:58,172 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:29:00,876 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6767676767676768, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8686868686868687 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.27272727272727276].
2023-08-22 03:29:00,876 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6767676767676768, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8686868686868687 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.27272727272727276].
2023-08-22 03:29:03,365 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.17171717171717174 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.36363636363636365].
2023-08-22 03:29:03,365 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.17171717171717174 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.36363636363636365].
2023-08-22 03:29:17,947 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:29:17,947 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:29:18,729 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-22 03:29:18,730 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-22 03:29:23,838 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:29:23,838 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:29:26,141 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:29:26,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:29:39,042 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.5454545454545455 ,nesterov=True ,amsgrad=False ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.05050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.04040404040404041].
2023-08-22 03:29:39,042 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.5454545454545455 ,nesterov=True ,amsgrad=False ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.05050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.04040404040404041].
2023-08-22 03:29:40,775 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:29:40,776 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:29:44,393 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.595959595959596 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.8585858585858587].
2023-08-22 03:29:44,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.595959595959596 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.8585858585858587].
2023-08-22 03:29:46,953 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6767676767676768 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.8585858585858587].
2023-08-22 03:29:46,953 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6767676767676768 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.8585858585858587].
2023-08-22 03:30:01,869 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:01,869 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:08,831 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:08,831 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:10,831 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5050505050505051, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.888888888888889 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.12121212121212122].
2023-08-22 03:30:10,831 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5050505050505051, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.888888888888889 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.12121212121212122].
2023-08-22 03:30:11,586 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.7373737373737375 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8585858585858587].
2023-08-22 03:30:11,586 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.7373737373737375 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8585858585858587].
2023-08-22 03:30:22,417 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:22,417 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:29,488 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.8585858585858587].
2023-08-22 03:30:29,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.8585858585858587].
2023-08-22 03:30:34,531 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6767676767676768 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.8585858585858587].
2023-08-22 03:30:34,531 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.6767676767676768 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.8585858585858587].
2023-08-22 03:30:34,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:34,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:42,933 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:42,934 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:50,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:50,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:55,842 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:55,842 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:59,468 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:30:59,469 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:31:03,505 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8585858585858587].
2023-08-22 03:31:03,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8585858585858587].
2023-08-22 03:31:10,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.4444444444444445 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.8585858585858587].
2023-08-22 03:31:10,656 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.4444444444444445 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.8585858585858587].
2023-08-22 03:31:16,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:31:16,247 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:31:19,888 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0033340000000000006 ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.33333333333333337 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.0 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.5252525252525253].
2023-08-22 03:31:19,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0033340000000000006 ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.33333333333333337 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.0 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.5252525252525253].
2023-08-22 03:31:24,447 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.4545454545454546].
2023-08-22 03:31:24,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.4545454545454546].
2023-08-22 03:31:34,257 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:31:34,257 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:31:36,483 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.393939393939394 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7373737373737375].
2023-08-22 03:31:36,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.393939393939394 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7373737373737375].
2023-08-22 03:31:44,076 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:31:44,076 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:31:44,205 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.8585858585858587].
2023-08-22 03:31:44,205 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.8585858585858587].
2023-08-22 03:31:54,742 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:31:54,742 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:31:57,381 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:31:57,382 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:32:04,423 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:32:04,423 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:32:05,038 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:32:05,038 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:32:15,058 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:32:15,058 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:32:17,882 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.6767676767676768 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.3535353535353536].
2023-08-22 03:32:17,882 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6565656565656566 ,rho=0.6767676767676768 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.3535353535353536].
2023-08-22 03:32:25,194 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.8585858585858587].
2023-08-22 03:32:25,194 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.8585858585858587].
2023-08-22 03:32:25,385 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.8585858585858587].
2023-08-22 03:32:25,385 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.8585858585858587].
2023-08-22 03:32:35,221 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:32:35,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:32:41,308 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:32:41,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:32:45,328 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:32:45,329 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:32:49,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.37373737373737376 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 03:32:49,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.37373737373737376 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 03:32:56,087 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.8585858585858587].
2023-08-22 03:32:56,087 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.32323232323232326, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.8585858585858587].
2023-08-22 03:33:02,402 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.17171717171717174].
2023-08-22 03:33:02,402 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.17171717171717174].
2023-08-22 03:33:05,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:33:05,659 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:33:13,709 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:33:13,709 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:33:15,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.888888888888889 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.696969696969697].
2023-08-22 03:33:15,718 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.888888888888889 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.696969696969697].
2023-08-22 03:33:25,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:33:25,859 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:33:25,994 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:33:25,994 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:33:39,198 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:33:39,198 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:33:46,360 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:33:46,360 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:34:05,757 INFO: Applying selection operators for generation 10.
2023-08-22 03:34:05,758 INFO: Applying genetic operators for generation 10.
2023-08-22 03:34:05,764 INFO: Evaluating fitness for for generation 10.
2023-08-22 03:34:05,764 INFO: Will evaluate fitness for 58 individuals.
2023-08-22 03:34:06,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:34:06,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:34:06,341 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:34:06,341 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:34:06,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:34:06,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:34:06,356 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.686868686868687, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.686868686868687 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8585858585858587].
2023-08-22 03:34:06,356 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.686868686868687, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.686868686868687 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8585858585858587].
2023-08-22 03:34:26,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.8585858585858587].
2023-08-22 03:34:26,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.8585858585858587].
2023-08-22 03:34:26,527 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:34:26,527 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:34:27,099 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.8585858585858587].
2023-08-22 03:34:27,099 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.009798000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.8585858585858587].
2023-08-22 03:34:38,430 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.686868686868687 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6464646464646465].
2023-08-22 03:34:38,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.686868686868687 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.6464646464646465].
2023-08-22 03:34:46,365 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.494949494949495 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.8585858585858587].
2023-08-22 03:34:46,365 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.494949494949495 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.8585858585858587].
2023-08-22 03:34:46,766 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.05050505050505051].
2023-08-22 03:34:46,766 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.43434343434343436 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.05050505050505051].
2023-08-22 03:34:51,133 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:34:51,133 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:02,675 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:02,675 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:10,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:10,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:10,593 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:10,593 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:11,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4747474747474748].
2023-08-22 03:35:11,522 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4747474747474748].
2023-08-22 03:35:23,094 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.13131313131313133, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:23,094 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.13131313131313133, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:30,321 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:30,321 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:31,025 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:31,025 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:34,914 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:34,914 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:35:43,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.6767676767676768 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.20202020202020204].
2023-08-22 03:35:43,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.6767676767676768 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.20202020202020204].
2023-08-22 03:35:50,489 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=True ,weight_decay=0.001011 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.9292929292929294 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.12121212121212122].
2023-08-22 03:35:50,489 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=True ,weight_decay=0.001011 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.9292929292929294 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.12121212121212122].
2023-08-22 03:35:51,288 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.33333333333333337 ,nesterov=False ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5454545454545455 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.393939393939394 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.8686868686868687].
2023-08-22 03:35:51,288 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.33333333333333337 ,nesterov=False ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5454545454545455 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.393939393939394 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.8686868686868687].
2023-08-22 03:35:55,491 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.30303030303030304 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.33333333333333337].
2023-08-22 03:35:55,491 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.30303030303030304 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.33333333333333337].
2023-08-22 03:36:07,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:07,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:12,883 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:12,883 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:15,514 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.494949494949495 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 03:36:15,515 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.494949494949495 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 03:36:19,122 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:19,122 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:28,440 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:28,440 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:33,750 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:33,750 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:36,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4141414141414142 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.4444444444444445].
2023-08-22 03:36:36,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4141414141414142 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.4444444444444445].
2023-08-22 03:36:39,514 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:39,515 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:48,882 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:48,882 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:53,998 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:53,999 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:59,945 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:36:59,945 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:37:00,491 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.4646464646464647, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.8282828282828284 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:37:00,491 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.4646464646464647, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.8282828282828284 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:37:09,263 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:37:09,263 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:37:14,162 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:37:14,162 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:37:20,308 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.696969696969697].
2023-08-22 03:37:20,308 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.696969696969697].
2023-08-22 03:37:24,172 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6464646464646465 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.8585858585858587].
2023-08-22 03:37:24,172 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6464646464646465 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.8585858585858587].
2023-08-22 03:37:30,184 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.31313131313131315 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:37:30,184 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.31313131313131315 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:37:34,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.6767676767676768 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 03:37:34,922 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.6767676767676768 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 03:37:46,807 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.4747474747474748 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.9797979797979799].
2023-08-22 03:37:46,807 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.4747474747474748 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.9797979797979799].
2023-08-22 03:37:53,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.3535353535353536].
2023-08-22 03:37:53,895 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.3535353535353536].
2023-08-22 03:37:54,151 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:37:54,151 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:37:58,979 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:37:58,980 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:05,396 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:05,397 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:13,900 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.6767676767676768 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.30303030303030304].
2023-08-22 03:38:13,901 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.6767676767676768 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.30303030303030304].
2023-08-22 03:38:14,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:14,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:19,419 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:19,419 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:25,985 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:25,985 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:34,716 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.4545454545454546, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:34,716 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.4545454545454546, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:39,765 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:39,765 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:46,367 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:46,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:38:59,006 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.6767676767676768 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8484848484848485].
2023-08-22 03:38:59,006 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.6767676767676768 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8484848484848485].
2023-08-22 03:39:00,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:39:00,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:39:06,752 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.8686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.6767676767676768 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.8585858585858587].
2023-08-22 03:39:06,752 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.8686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.6767676767676768 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.8585858585858587].
2023-08-22 03:39:20,466 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.24242424242424243 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8585858585858587].
2023-08-22 03:39:20,466 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.24242424242424243 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8585858585858587].
2023-08-22 03:39:31,056 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:39:31,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:39:50,558 INFO: Applying selection operators for generation 11.
2023-08-22 03:39:50,560 INFO: Applying genetic operators for generation 11.
2023-08-22 03:39:50,566 INFO: Evaluating fitness for for generation 11.
2023-08-22 03:39:50,566 INFO: Will evaluate fitness for 59 individuals.
2023-08-22 03:39:51,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:39:51,103 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:39:51,122 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7070707070707072, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=False ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5454545454545455 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.5454545454545455].
2023-08-22 03:39:51,123 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7070707070707072, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=False ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5454545454545455 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.5454545454545455].
2023-08-22 03:39:51,275 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:39:51,275 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:39:51,300 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:39:51,300 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:11,426 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:11,426 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:11,734 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:11,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:12,300 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:12,300 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:15,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.5252525252525253 ,epsilon=0.0006666667 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8585858585858587].
2023-08-22 03:40:15,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.5252525252525253 ,epsilon=0.0006666667 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8585858585858587].
2023-08-22 03:40:32,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5656565656565657 ,rho=0.31313131313131315 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=1.0 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.8585858585858587].
2023-08-22 03:40:32,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5656565656565657 ,rho=0.31313131313131315 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=1.0 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.8585858585858587].
2023-08-22 03:40:32,701 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:32,702 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:32,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:32,718 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:39,730 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:39,730 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:52,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:52,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:52,996 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:52,996 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:55,682 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:40:55,682 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:00,132 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:00,132 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:13,241 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:13,241 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:13,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:13,536 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:16,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:16,127 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:20,441 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:20,441 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:33,580 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.8585858585858587].
2023-08-22 03:41:33,580 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.8585858585858587].
2023-08-22 03:41:33,701 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:33,701 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:36,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7171717171717172 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.5050505050505051].
2023-08-22 03:41:36,543 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7171717171717172 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.5050505050505051].
2023-08-22 03:41:41,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:41,422 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:54,289 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:54,290 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:41:59,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=1.0 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.494949494949495].
2023-08-22 03:41:59,103 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=1.0 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.494949494949495].
2023-08-22 03:42:01,338 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:42:01,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:42:02,121 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.4141414141414142 ,rho=0.0 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.9292929292929294].
2023-08-22 03:42:02,122 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.4141414141414142 ,rho=0.0 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.9292929292929294].
2023-08-22 03:42:14,812 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.06060606060606061, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.9797979797979799].
2023-08-22 03:42:14,812 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.06060606060606061, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.9797979797979799].
2023-08-22 03:42:21,872 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.33333333333333337 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8080808080808082].
2023-08-22 03:42:21,873 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.33333333333333337 ,rho=0.33333333333333337 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8080808080808082].
2023-08-22 03:42:22,901 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:42:22,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:42:25,987 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8282828282828284 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:42:25,987 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8282828282828284 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:42:35,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.001011 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.8585858585858587].
2023-08-22 03:42:35,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.001011 ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.8585858585858587].
2023-08-22 03:42:43,395 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:42:43,395 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:42:45,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.15151515151515152].
2023-08-22 03:42:45,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.15151515151515152].
2023-08-22 03:42:49,897 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.32323232323232326 ,rho=0.23232323232323235 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.09090909090909091].
2023-08-22 03:42:49,897 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.32323232323232326 ,rho=0.23232323232323235 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.09090909090909091].
2023-08-22 03:42:58,985 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:42:58,985 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:43:04,603 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6767676767676768 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:43:04,603 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.888888888888889 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6767676767676768 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:43:07,070 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8585858585858587].
2023-08-22 03:43:07,070 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8585858585858587].
2023-08-22 03:43:13,859 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.23232323232323235].
2023-08-22 03:43:13,859 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.23232323232323235].
2023-08-22 03:43:19,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:43:19,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:43:29,581 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6767676767676768 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.27272727272727276].
2023-08-22 03:43:29,582 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6767676767676768 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.27272727272727276].
2023-08-22 03:43:39,085 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:43:39,085 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:43:39,717 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.31313131313131315 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:43:39,718 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.31313131313131315 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:43:40,688 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:43:40,689 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:43:53,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:43:53,473 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:43:59,261 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.6767676767676768 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.7070707070707072].
2023-08-22 03:43:59,261 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.6767676767676768 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.7070707070707072].
2023-08-22 03:44:01,032 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.030303030303030304].
2023-08-22 03:44:01,032 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.030303030303030304].
2023-08-22 03:44:03,491 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:44:03,492 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:44:13,993 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.4747474747474748, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6464646464646465].
2023-08-22 03:44:13,993 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.4747474747474748, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6464646464646465].
2023-08-22 03:44:23,321 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.494949494949495 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.24242424242424243].
2023-08-22 03:44:23,321 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.494949494949495 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.24242424242424243].
2023-08-22 03:44:23,976 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:44:23,976 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:44:38,431 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.21212121212121213 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8585858585858587].
2023-08-22 03:44:38,431 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.21212121212121213 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8585858585858587].
2023-08-22 03:44:44,267 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:44:44,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:44:47,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3535353535353536 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.8585858585858587].
2023-08-22 03:44:47,938 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3535353535353536 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.8585858585858587].
2023-08-22 03:45:05,061 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:45:05,061 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:45:11,496 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:45:11,496 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:45:11,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8383838383838385].
2023-08-22 03:45:11,578 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8383838383838385].
2023-08-22 03:45:32,493 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:45:32,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:45:51,955 INFO: Applying selection operators for generation 12.
2023-08-22 03:45:51,956 INFO: Applying genetic operators for generation 12.
2023-08-22 03:45:51,961 INFO: Evaluating fitness for for generation 12.
2023-08-22 03:45:51,961 INFO: Will evaluate fitness for 51 individuals.
2023-08-22 03:45:52,554 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.23232323232323235, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.48484848484848486].
2023-08-22 03:45:52,554 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.23232323232323235, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.48484848484848486].
2023-08-22 03:45:52,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:45:52,564 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:45:52,588 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:45:52,588 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:45:52,666 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.004142000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7474747474747475 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.8585858585858587].
2023-08-22 03:45:52,666 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.004142000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7474747474747475 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.8585858585858587].
2023-08-22 03:46:12,990 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:46:12,990 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:46:13,574 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:46:13,574 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:46:16,456 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8585858585858587].
2023-08-22 03:46:16,456 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8585858585858587].
2023-08-22 03:46:17,919 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.04040404040404041].
2023-08-22 03:46:17,919 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.04040404040404041].
2023-08-22 03:46:33,192 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:46:33,192 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:46:33,954 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.6767676767676768 ,epsilon=0.001 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7676767676767677].
2023-08-22 03:46:33,955 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.6767676767676768 ,epsilon=0.001 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7676767676767677].
2023-08-22 03:46:36,981 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4646464646464647, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.27272727272727276 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8585858585858587].
2023-08-22 03:46:36,981 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4646464646464647, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.27272727272727276 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8585858585858587].
2023-08-22 03:46:39,116 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:46:39,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:46:53,403 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:46:53,403 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:46:58,464 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.05050505050505051].
2023-08-22 03:46:58,464 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.05050505050505051].
2023-08-22 03:46:59,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:46:59,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:47:01,527 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8282828282828284 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:47:01,527 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8282828282828284 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:47:14,280 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9696969696969697, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5454545454545455 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.8585858585858587].
2023-08-22 03:47:14,280 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9696969696969697, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5454545454545455 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.8585858585858587].
2023-08-22 03:47:18,754 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:47:18,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:47:20,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:47:20,077 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:47:26,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:47:26,052 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:47:38,749 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7272727272727273 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6767676767676768].
2023-08-22 03:47:38,749 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7272727272727273 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6767676767676768].
2023-08-22 03:47:39,692 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:47:39,692 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:47:40,292 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.005354000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.595959595959596].
2023-08-22 03:47:40,293 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.005354000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.595959595959596].
2023-08-22 03:47:46,441 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.17171717171717174, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.08080808080808081].
2023-08-22 03:47:46,442 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.17171717171717174, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.08080808080808081].
2023-08-22 03:48:00,258 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:48:00,258 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:48:00,984 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.8585858585858587].
2023-08-22 03:48:00,985 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.8585858585858587].
2023-08-22 03:48:02,537 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.4747474747474748 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6464646464646465].
2023-08-22 03:48:02,537 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.4747474747474748 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6464646464646465].
2023-08-22 03:48:12,018 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:48:12,018 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:48:20,562 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0.12121212121212122 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.6767676767676768 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.8484848484848485].
2023-08-22 03:48:20,562 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0.12121212121212122 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.6767676767676768 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.8484848484848485].
2023-08-22 03:48:24,892 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:48:24,892 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:48:32,808 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.393939393939394].
2023-08-22 03:48:32,808 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.393939393939394].
2023-08-22 03:48:37,106 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:48:37,106 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:48:45,205 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.27272727272727276 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.8585858585858587].
2023-08-22 03:48:45,205 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.27272727272727276 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.8585858585858587].
2023-08-22 03:48:45,263 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:48:45,263 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:48:53,201 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:48:53,201 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:48:57,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:48:57,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:05,571 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:05,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:09,291 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:09,291 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:13,544 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:13,544 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:17,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:17,834 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:26,458 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:26,459 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:29,701 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:29,701 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:34,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:34,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:38,127 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:38,128 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:46,770 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:46,770 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:50,100 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:50,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:54,875 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:54,875 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:59,043 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:49:59,044 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:50:07,059 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.3434343434343435 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.8080808080808082].
2023-08-22 03:50:07,059 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.3434343434343435 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.8080808080808082].
2023-08-22 03:50:26,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:50:26,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:50:46,847 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:50:46,848 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:06,113 INFO: Applying selection operators for generation 13.
2023-08-22 03:51:06,115 INFO: Applying genetic operators for generation 13.
2023-08-22 03:51:06,119 INFO: Evaluating fitness for for generation 13.
2023-08-22 03:51:06,120 INFO: Will evaluate fitness for 60 individuals.
2023-08-22 03:51:06,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:06,659 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:06,681 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:06,682 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:06,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:06,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:06,727 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.4040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8181818181818182].
2023-08-22 03:51:06,727 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.4040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8181818181818182].
2023-08-22 03:51:26,598 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:26,598 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:26,814 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:26,814 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:26,849 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:26,849 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:27,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.5252525252525253].
2023-08-22 03:51:27,032 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.5252525252525253].
2023-08-22 03:51:47,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:47,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:47,263 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.787878787878788 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.20202020202020204].
2023-08-22 03:51:47,263 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.787878787878788 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.20202020202020204].
2023-08-22 03:51:47,682 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:47,682 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:51,232 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:51:51,233 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:52:07,398 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:52:07,398 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:52:08,023 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.38383838383838387 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=0.0 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.494949494949495].
2023-08-22 03:52:08,023 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.38383838383838387 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=0.0 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.494949494949495].
2023-08-22 03:52:11,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:52:11,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:52:12,047 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.11111111111111112, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5757575757575758 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 03:52:12,047 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.11111111111111112, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5757575757575758 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 03:52:27,465 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:52:27,465 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:52:31,947 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8989898989898991, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.888888888888889 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.8585858585858587].
2023-08-22 03:52:31,947 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8989898989898991, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.007374000000000001 ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.888888888888889 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.8585858585858587].
2023-08-22 03:52:32,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:52:32,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:52:34,480 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8585858585858587].
2023-08-22 03:52:34,481 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8585858585858587].
2023-08-22 03:52:47,580 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:52:47,580 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:52:53,529 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.888888888888889 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.696969696969697 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:52:53,529 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.888888888888889 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.696969696969697 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:52:54,919 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:52:54,919 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:05,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:05,753 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:08,448 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:08,449 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:15,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:15,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:17,622 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:17,622 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:26,240 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:26,240 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:28,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:28,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:36,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:36,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:38,064 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.5050505050505051].
2023-08-22 03:53:38,064 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.5050505050505051].
2023-08-22 03:53:46,513 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:46,513 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:48,913 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:48,913 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:56,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:56,861 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:58,409 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:53:58,409 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:54:06,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:54:06,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:54:09,116 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:54:09,116 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:54:17,310 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.8585858585858587].
2023-08-22 03:54:17,310 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.8585858585858587].
2023-08-22 03:54:19,546 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:54:19,547 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:54:27,875 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8484848484848485, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.5555555555555556].
2023-08-22 03:54:27,875 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8484848484848485, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.5555555555555556].
2023-08-22 03:54:29,798 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.4747474747474748].
2023-08-22 03:54:29,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.4747474747474748].
2023-08-22 03:54:40,068 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:54:40,068 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:54:41,320 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.6767676767676768 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5454545454545455].
2023-08-22 03:54:41,320 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.6767676767676768 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5454545454545455].
2023-08-22 03:54:50,987 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:54:50,988 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:54:53,891 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:54:53,891 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:55:00,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.4646464646464647].
2023-08-22 03:55:00,519 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.4646464646464647].
2023-08-22 03:55:05,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:55:05,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:55:11,340 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.8585858585858587].
2023-08-22 03:55:11,340 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.8585858585858587].
2023-08-22 03:55:14,099 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:55:14,100 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:55:24,743 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:55:24,743 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:55:26,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:55:26,210 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:55:34,933 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.595959595959596 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9191919191919192].
2023-08-22 03:55:34,934 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.595959595959596 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9191919191919192].
2023-08-22 03:55:45,254 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:55:45,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:55:46,617 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:55:46,617 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:55:59,026 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:55:59,027 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:05,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:05,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:06,902 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:06,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:19,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8585858585858587].
2023-08-22 03:56:19,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8585858585858587].
2023-08-22 03:56:25,680 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:25,680 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:27,808 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:27,808 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:47,568 INFO: Applying selection operators for generation 14.
2023-08-22 03:56:47,569 INFO: Applying genetic operators for generation 14.
2023-08-22 03:56:47,573 INFO: Evaluating fitness for for generation 14.
2023-08-22 03:56:47,573 INFO: Will evaluate fitness for 62 individuals.
2023-08-22 03:56:48,128 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:48,128 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:48,131 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:48,132 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:48,151 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:48,152 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:48,241 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:56:48,241 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:08,310 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:08,310 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:08,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:08,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:08,606 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:08,607 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:08,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:08,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:28,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:28,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:28,837 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:28,837 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:28,963 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:28,964 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:29,631 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:29,632 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:49,020 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:49,021 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:49,138 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:49,138 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:49,587 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:49,587 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:50,083 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:57:50,084 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:09,074 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00030400000000000007 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.6767676767676768 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.8585858585858587].
2023-08-22 03:58:09,074 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.00030400000000000007 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.6767676767676768 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.8585858585858587].
2023-08-22 03:58:09,940 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:09,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:09,988 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:09,989 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:10,399 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.5858585858585859 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5252525252525253].
2023-08-22 03:58:10,399 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.5858585858585859 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5252525252525253].
2023-08-22 03:58:30,238 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:30,238 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:30,274 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:30,274 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:33,927 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:33,927 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:34,228 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:34,229 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:50,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:50,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:50,524 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:50,525 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:58:54,172 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8181818181818182].
2023-08-22 03:58:54,172 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8181818181818182].
2023-08-22 03:58:55,181 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 03:58:55,181 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 03:59:10,401 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:10,401 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:11,467 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.4141414141414142 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.8585858585858587].
2023-08-22 03:59:11,467 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.4141414141414142 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.8585858585858587].
2023-08-22 03:59:17,583 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:17,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:17,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:17,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:31,173 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.888888888888889 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8585858585858587].
2023-08-22 03:59:31,174 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.888888888888889 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8585858585858587].
2023-08-22 03:59:31,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:31,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:37,862 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:37,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:38,228 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0027280000000000004 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8585858585858587].
2023-08-22 03:59:38,228 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0027280000000000004 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8585858585858587].
2023-08-22 03:59:51,823 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:51,824 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:54,983 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:54,983 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:58,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:58,077 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:59,291 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 03:59:59,291 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:12,197 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:12,197 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:15,197 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:15,198 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:19,102 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8585858585858587].
2023-08-22 04:00:19,103 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8585858585858587].
2023-08-22 04:00:19,598 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:19,598 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:32,965 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:32,965 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:36,057 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:36,058 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:39,800 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:39,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:42,738 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:42,738 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:53,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:53,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:00:56,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6767676767676768 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8585858585858587].
2023-08-22 04:00:56,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6767676767676768 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8585858585858587].
2023-08-22 04:01:00,683 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:01:00,683 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:01:03,029 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:01:03,030 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:01:13,462 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.05050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.686868686868687].
2023-08-22 04:01:13,462 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.05050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.686868686868687].
2023-08-22 04:01:20,433 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.26262626262626265, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 04:01:20,434 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.26262626262626265, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 04:01:21,000 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:01:21,000 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:01:23,926 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:01:23,926 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:01:37,608 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:01:37,609 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:01:41,163 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.7373737373737375 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.5757575757575758].
2023-08-22 04:01:41,163 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.7373737373737375 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.5757575757575758].
2023-08-22 04:01:45,210 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:01:45,210 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:01:58,501 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:01:58,502 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:05,556 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.09090909090909091].
2023-08-22 04:02:05,556 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.09090909090909091].
2023-08-22 04:02:05,840 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:05,840 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:28,154 INFO: Applying selection operators for generation 15.
2023-08-22 04:02:28,156 INFO: Applying genetic operators for generation 15.
2023-08-22 04:02:28,161 INFO: Evaluating fitness for for generation 15.
2023-08-22 04:02:28,161 INFO: Will evaluate fitness for 64 individuals.
2023-08-22 04:02:28,697 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:28,697 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:28,727 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:28,727 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:28,727 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:28,727 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:28,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:28,745 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:48,591 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:48,591 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:48,632 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:48,632 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:48,875 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:48,875 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:48,946 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:02:48,947 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:08,854 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4646464646464647 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:08,855 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4646464646464647 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:09,189 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:09,189 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:09,256 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=1.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.8585858585858587].
2023-08-22 04:03:09,256 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=1.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.8585858585858587].
2023-08-22 04:03:09,322 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:09,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:29,637 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:29,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:29,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:29,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:29,913 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:29,913 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:32,328 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:32,328 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:49,749 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5353535353535354 ,epsilon=0.0003333334 ,centered=True ,beta_1=0.06060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.48484848484848486].
2023-08-22 04:03:49,749 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5353535353535354 ,epsilon=0.0003333334 ,centered=True ,beta_1=0.06060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.48484848484848486].
2023-08-22 04:03:49,989 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:49,989 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:50,218 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:50,218 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:52,434 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:03:52,434 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:10,157 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.8383838383838385 ,learning_rate_power=0.0 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.8585858585858587].
2023-08-22 04:04:10,157 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.8383838383838385 ,learning_rate_power=0.0 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.8585858585858587].
2023-08-22 04:04:10,420 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:10,420 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:12,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:12,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:14,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.6767676767676768 ,epsilon=0.0003333334 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.9090909090909092].
2023-08-22 04:04:14,244 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8989898989898991 ,rho=0.6767676767676768 ,epsilon=0.0003333334 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.9090909090909092].
2023-08-22 04:04:30,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:30,630 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:33,345 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:33,345 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:33,670 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:33,670 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:38,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:38,412 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:51,427 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7373737373737375, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.3434343434343435 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.8585858585858587].
2023-08-22 04:04:51,427 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7373737373737375, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.3434343434343435 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.8585858585858587].
2023-08-22 04:04:53,566 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:53,566 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:54,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:54,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:58,722 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:04:58,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:05:13,623 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.13131313131313133, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.09090909090909091 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5656565656565657].
2023-08-22 04:05:13,623 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.13131313131313133, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.09090909090909091 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5656565656565657].
2023-08-22 04:05:14,941 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:05:14,941 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:05:18,967 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:05:18,967 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:05:25,352 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.04040404040404041, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.9393939393939394].
2023-08-22 04:05:25,352 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.04040404040404041, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.9393939393939394].
2023-08-22 04:05:35,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:05:35,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:05:38,765 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7272727272727273 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.8585858585858587].
2023-08-22 04:05:38,766 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0.32323232323232326 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7272727272727273 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.8585858585858587].
2023-08-22 04:05:39,186 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.3434343434343435].
2023-08-22 04:05:39,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.3434343434343435].
2023-08-22 04:05:49,401 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:05:49,401 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:05:55,478 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:05:55,478 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:00,040 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.020202020202020204 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.24242424242424243].
2023-08-22 04:06:00,040 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.020202020202020204 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.24242424242424243].
2023-08-22 04:06:03,023 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:03,023 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:10,267 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.43434343434343436 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.7070707070707072].
2023-08-22 04:06:10,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.43434343434343436 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.7070707070707072].
2023-08-22 04:06:16,402 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:16,402 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:23,232 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:23,232 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:24,178 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:24,179 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:34,812 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:34,812 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:36,971 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:36,972 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:43,630 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.06060606060606061, momentum=0.5151515151515152 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.5858585858585859].
2023-08-22 04:06:43,630 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.06060606060606061, momentum=0.5151515151515152 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.5858585858585859].
2023-08-22 04:06:44,602 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:44,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:55,087 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:55,088 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:06:57,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.15151515151515152 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 04:06:57,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.15151515151515152 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 04:07:05,758 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.27272727272727276 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.6161616161616162].
2023-08-22 04:07:05,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.27272727272727276 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.6161616161616162].
2023-08-22 04:07:09,379 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:07:09,379 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:07:15,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:07:15,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:07:20,941 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.8585858585858587].
2023-08-22 04:07:21,004 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.8585858585858587].
2023-08-22 04:07:29,377 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:07:29,378 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:07:29,851 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:07:29,851 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:07:36,539 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:07:36,640 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:07:46,092 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8585858585858587].
2023-08-22 04:07:46,092 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8585858585858587].
2023-08-22 04:07:49,760 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.6464646464646465].
2023-08-22 04:07:49,760 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.6464646464646465].
2023-08-22 04:07:50,395 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.33333333333333337 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:07:50,395 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4444444444444445, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.33333333333333337 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:07:57,068 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.07070707070707072 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9494949494949496].
2023-08-22 04:07:57,069 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.07070707070707072 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9494949494949496].
2023-08-22 04:08:21,521 INFO: Applying selection operators for generation 16.
2023-08-22 04:08:21,523 INFO: Applying genetic operators for generation 16.
2023-08-22 04:08:21,528 INFO: Evaluating fitness for for generation 16.
2023-08-22 04:08:21,528 INFO: Will evaluate fitness for 54 individuals.
2023-08-22 04:08:22,082 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:08:22,083 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:08:22,086 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.001819 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.8585858585858587].
2023-08-22 04:08:22,086 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.001819 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.8585858585858587].
2023-08-22 04:08:22,111 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:08:22,111 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:08:22,192 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:08:22,192 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:08:43,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0.5252525252525253 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.010101010101010102 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.686868686868687 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.7272727272727273].
2023-08-22 04:08:43,045 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0.5252525252525253 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.010101010101010102 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.686868686868687 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.7272727272727273].
2023-08-22 04:08:43,343 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:08:43,344 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:08:43,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=0.7777777777777778 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 04:08:43,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=0.7777777777777778 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 04:08:56,664 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:08:56,664 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:04,148 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7676767676767677, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.9494949494949496 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 04:09:04,149 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7676767676767677, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.9494949494949496 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 04:09:07,406 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.7575757575757577 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.30303030303030304].
2023-08-22 04:09:07,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.7575757575757577 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.30303030303030304].
2023-08-22 04:09:07,553 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:07,553 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:17,682 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:17,682 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:28,088 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:28,088 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:29,632 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.494949494949495 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8585858585858587].
2023-08-22 04:09:29,633 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.494949494949495 ,epsilon=8.080817272727271e-05 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8585858585858587].
2023-08-22 04:09:31,870 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.9494949494949496 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8585858585858587].
2023-08-22 04:09:31,870 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.9494949494949496 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8585858585858587].
2023-08-22 04:09:38,024 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:38,025 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:48,520 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:48,520 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:54,470 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:54,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:55,361 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:55,361 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:58,351 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:09:58,351 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:10:09,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:10:09,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:10:15,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:10:15,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:10:16,376 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.8585858585858587].
2023-08-22 04:10:16,377 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.8585858585858587].
2023-08-22 04:10:18,586 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:10:18,586 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:10:30,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:10:30,654 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:10:35,744 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5353535353535354].
2023-08-22 04:10:35,744 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006060606454545455 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.5353535353535354].
2023-08-22 04:10:36,743 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.32323232323232326].
2023-08-22 04:10:36,743 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.32323232323232326].
2023-08-22 04:10:39,517 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:10:39,517 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:10:51,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:10:51,324 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:00,011 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:00,011 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:01,034 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:01,034 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:01,914 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.8686868686868687 ,epsilon=0.0007777778 ,centered=True ,beta_1=1.0 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.8585858585858587].
2023-08-22 04:11:01,914 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.8686868686868687 ,epsilon=0.0007777778 ,centered=True ,beta_1=1.0 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.8585858585858587].
2023-08-22 04:11:12,761 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:12,762 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:20,284 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:20,284 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:21,220 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:21,220 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:27,226 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:27,226 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:33,627 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.33333333333333337].
2023-08-22 04:11:33,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.33333333333333337].
2023-08-22 04:11:41,171 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:41,172 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:42,025 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:42,025 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:48,805 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.3434343434343435].
2023-08-22 04:11:48,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.3434343434343435].
2023-08-22 04:11:54,533 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:11:54,534 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:12:01,721 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:12:01,721 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:12:02,300 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:12:02,300 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:12:10,748 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:12:10,748 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:12:15,475 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:12:15,475 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:12:22,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:12:22,030 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:12:22,411 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.6767676767676768 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.8585858585858587].
2023-08-22 04:12:22,411 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.6767676767676768 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.8585858585858587].
2023-08-22 04:12:31,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:12:31,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:12:36,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7777777777777778].
2023-08-22 04:12:36,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7777777777777778].
2023-08-22 04:12:42,642 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:12:42,642 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:13:02,391 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:13:02,392 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:13:03,515 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:13:03,515 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:13:22,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.8989898989898991 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.42424242424242425 ,rho=0.797979797979798 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.020202020202020204 ,learning_rate_power=0.0 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.010101010101010102].
2023-08-22 04:13:22,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.8989898989898991 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.42424242424242425 ,rho=0.797979797979798 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.020202020202020204 ,learning_rate_power=0.0 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.010101010101010102].
2023-08-22 04:13:45,942 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.18181818181818182].
2023-08-22 04:13:45,942 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.18181818181818182].
2023-08-22 04:14:03,686 INFO: Applying selection operators for generation 17.
2023-08-22 04:14:03,687 INFO: Applying genetic operators for generation 17.
2023-08-22 04:14:03,693 INFO: Evaluating fitness for for generation 17.
2023-08-22 04:14:03,693 INFO: Will evaluate fitness for 61 individuals.
2023-08-22 04:14:04,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.8585858585858587].
2023-08-22 04:14:04,239 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.8282828282828284 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.8585858585858587].
2023-08-22 04:14:04,289 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.05050505050505051].
2023-08-22 04:14:04,289 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.05050505050505051].
2023-08-22 04:14:04,447 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:14:04,448 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:14:04,464 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:14:04,465 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:14:24,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=0.000506 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.9494949494949496].
2023-08-22 04:14:24,789 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=0.000506 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.9494949494949496].
2023-08-22 04:14:24,896 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:14:24,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:14:28,637 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.20202020202020204 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:14:28,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.20202020202020204 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:14:39,804 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:14:39,804 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:14:45,940 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:14:45,941 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:14:49,501 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.42424242424242425, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.6767676767676768 ,epsilon=0.0007979798181818182 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8585858585858587].
2023-08-22 04:14:49,502 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.42424242424242425, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.6767676767676768 ,epsilon=0.0007979798181818182 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8585858585858587].
2023-08-22 04:14:53,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:14:53,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:01,106 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:01,106 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:07,501 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:07,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:08,543 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.26262626262626265].
2023-08-22 04:15:08,544 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.26262626262626265].
2023-08-22 04:15:14,463 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=0.009091 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.0 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.8585858585858587].
2023-08-22 04:15:14,464 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=0.009091 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.0 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.8585858585858587].
2023-08-22 04:15:21,907 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.6767676767676768 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:21,908 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.6767676767676768 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:28,191 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:28,191 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:40,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.25252525252525254, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.05050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:40,929 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.25252525252525254, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.05050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:45,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:45,753 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:46,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:46,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:49,040 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:15:49,040 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:05,896 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:05,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:05,980 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.009293000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.393939393939394 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.31313131313131315].
2023-08-22 04:16:05,980 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.009293000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.393939393939394 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.31313131313131315].
2023-08-22 04:16:06,874 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:06,875 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:09,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:09,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:26,125 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:26,125 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:27,332 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:27,332 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:30,725 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.7373737373737375 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:30,725 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.7373737373737375 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:31,361 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:31,361 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:46,336 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.6767676767676768 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.24242424242424243].
2023-08-22 04:16:46,336 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.6767676767676768 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.24242424242424243].
2023-08-22 04:16:47,842 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.6767676767676768 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.8585858585858587].
2023-08-22 04:16:47,842 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.6767676767676768 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.8585858585858587].
2023-08-22 04:16:51,963 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:51,963 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:55,207 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:16:55,208 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:12,268 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:12,268 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:12,811 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 04:17:12,811 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 04:17:13,662 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.18181818181818182 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.07070707070707072].
2023-08-22 04:17:13,662 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.18181818181818182 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.07070707070707072].
2023-08-22 04:17:15,638 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:15,638 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:32,877 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:32,877 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:35,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:35,873 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:37,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:37,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:38,462 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8787878787878789 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.8585858585858587].
2023-08-22 04:17:38,462 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8787878787878789 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.8585858585858587].
2023-08-22 04:17:53,232 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:53,233 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:56,872 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:56,873 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:58,399 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:17:58,399 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:18:03,854 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:18:03,854 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:18:14,271 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3535353535353536 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8585858585858587].
2023-08-22 04:18:14,271 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3535353535353536 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8585858585858587].
2023-08-22 04:18:17,260 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:18:17,261 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:18:19,121 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:18:19,121 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:18:25,418 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8787878787878789 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:18:25,418 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8787878787878789 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:18:37,643 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.595959595959596 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:18:37,643 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.595959595959596 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:18:39,345 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.22222222222222224, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.001 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.8585858585858587].
2023-08-22 04:18:39,345 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.22222222222222224, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.001 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.8585858585858587].
2023-08-22 04:18:39,643 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:18:39,643 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:18:46,456 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:18:46,457 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:19:01,018 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.23232323232323235, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.9797979797979799 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8585858585858587].
2023-08-22 04:19:01,018 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.23232323232323235, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.9797979797979799 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8585858585858587].
2023-08-22 04:19:03,139 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.888888888888889].
2023-08-22 04:19:03,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.888888888888889].
2023-08-22 04:19:03,157 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.12121212121212122 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.4747474747474748 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8585858585858587].
2023-08-22 04:19:03,158 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.12121212121212122 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.4747474747474748 ,epsilon=0.0007676767909090908 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8585858585858587].
2023-08-22 04:19:25,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:19:25,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:19:26,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:19:26,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:19:27,506 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.26262626262626265].
2023-08-22 04:19:27,506 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.26262626262626265].
2023-08-22 04:19:47,027 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:19:47,027 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:19:48,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:19:48,405 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:08,232 INFO: Applying selection operators for generation 18.
2023-08-22 04:20:08,234 INFO: Applying genetic operators for generation 18.
2023-08-22 04:20:08,240 INFO: Evaluating fitness for for generation 18.
2023-08-22 04:20:08,240 INFO: Will evaluate fitness for 65 individuals.
2023-08-22 04:20:08,795 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:08,795 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:08,818 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.6767676767676768 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.8585858585858587].
2023-08-22 04:20:08,819 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.6767676767676768 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.8585858585858587].
2023-08-22 04:20:08,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:08,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:08,966 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:08,966 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:29,023 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8282828282828284 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.8585858585858587].
2023-08-22 04:20:29,023 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8282828282828284 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.8585858585858587].
2023-08-22 04:20:29,368 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:29,368 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:29,766 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8080808080808082, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.595959595959596 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 04:20:29,766 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8080808080808082, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.595959595959596 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 04:20:33,864 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:33,864 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:48,599 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:48,599 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:49,254 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.8585858585858587].
2023-08-22 04:20:49,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.8585858585858587].
2023-08-22 04:20:50,680 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:50,680 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:55,267 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:20:55,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:09,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:09,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:11,150 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:11,150 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:14,305 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:14,305 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:15,840 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.38383838383838387 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 04:21:15,841 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.38383838383838387 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 04:21:29,889 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:29,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:31,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:31,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:34,526 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:34,526 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:40,929 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.26262626262626265 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8383838383838385 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.21212121212121213].
2023-08-22 04:21:40,929 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.26262626262626265 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8383838383838385 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.21212121212121213].
2023-08-22 04:21:50,138 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:50,138 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:52,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4141414141414142 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8585858585858587].
2023-08-22 04:21:52,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4141414141414142 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8585858585858587].
2023-08-22 04:21:55,424 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:21:55,424 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:05,418 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:05,418 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:10,267 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.5050505050505051 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.31313131313131315].
2023-08-22 04:22:10,267 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.5050505050505051 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.31313131313131315].
2023-08-22 04:22:15,681 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:15,681 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:17,193 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8686868686868687 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.30303030303030304].
2023-08-22 04:22:17,193 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8686868686868687 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.30303030303030304].
2023-08-22 04:22:26,405 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:26,405 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:35,382 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:35,382 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:35,832 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.12121212121212122 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:35,832 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.12121212121212122 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:41,948 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:41,949 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:46,936 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:46,937 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:55,665 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:22:55,665 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:23:01,561 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.9090909090909092].
2023-08-22 04:23:01,561 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.9090909090909092].
2023-08-22 04:23:02,266 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:23:02,266 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:23:07,313 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5757575757575758, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.8585858585858587].
2023-08-22 04:23:07,313 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5757575757575758, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.8585858585858587].
2023-08-22 04:23:16,112 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.0008080808272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-22 04:23:16,113 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.0008080808272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-22 04:23:21,815 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:23:21,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:23:24,179 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.9292929292929294 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.686868686868687 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8585858585858587].
2023-08-22 04:23:24,179 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.9292929292929294 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.686868686868687 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8585858585858587].
2023-08-22 04:23:26,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:23:26,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:23:40,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:23:40,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:23:41,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.5252525252525253].
2023-08-22 04:23:41,806 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.5252525252525253].
2023-08-22 04:23:47,910 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=1.0].
2023-08-22 04:23:47,911 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8989898989898991, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=1.0].
2023-08-22 04:23:48,316 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:23:48,316 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:01,086 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:01,086 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:06,306 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:06,307 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:08,617 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:08,617 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:12,859 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.4444444444444445].
2023-08-22 04:24:12,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.4444444444444445].
2023-08-22 04:24:21,523 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:21,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:27,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:27,094 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:28,787 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:28,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:33,308 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:33,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:41,870 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.9797979797979799 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.797979797979798 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.8585858585858587].
2023-08-22 04:24:41,870 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.9797979797979799 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.797979797979798 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.8585858585858587].
2023-08-22 04:24:47,331 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.31313131313131315].
2023-08-22 04:24:47,331 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.31313131313131315].
2023-08-22 04:24:49,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:49,596 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:24:53,610 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4545454545454546, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.8383838383838385 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 04:24:53,611 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4545454545454546, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.8383838383838385 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 04:25:06,363 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:25:06,364 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:25:07,401 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:25:07,401 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:25:09,927 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:25:09,927 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:25:27,252 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:25:27,252 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:25:30,112 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006162000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 04:25:30,112 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006162000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 04:25:47,147 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.5252525252525253 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.4141414141414142 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:25:47,147 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.5252525252525253 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.4141414141414142 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:26:10,848 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:26:10,848 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:26:30,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.6060606060606061].
2023-08-22 04:26:30,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.6060606060606061].
2023-08-22 04:26:55,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:26:55,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:27:15,178 INFO: Applying selection operators for generation 19.
2023-08-22 04:27:15,180 INFO: Applying genetic operators for generation 19.
2023-08-22 04:27:15,186 INFO: Evaluating fitness for for generation 19.
2023-08-22 04:27:15,186 INFO: Will evaluate fitness for 57 individuals.
2023-08-22 04:27:15,742 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:27:15,742 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:27:15,750 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.8585858585858587].
2023-08-22 04:27:15,750 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.8585858585858587].
2023-08-22 04:27:15,886 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:27:15,886 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:27:15,886 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.38383838383838387 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.8585858585858587].
2023-08-22 04:27:15,886 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.38383838383838387 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.8585858585858587].
2023-08-22 04:27:36,187 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.6767676767676768 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.0 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.8585858585858587].
2023-08-22 04:27:36,187 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.6767676767676768 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.0 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.8585858585858587].
2023-08-22 04:27:36,330 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:27:36,330 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:27:40,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:27:40,408 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:27:41,171 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.09090909090909091, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.595959595959596 ,epsilon=0.0009696969727272727 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 04:27:41,172 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.09090909090909091, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.595959595959596 ,epsilon=0.0009696969727272727 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 04:27:56,582 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:27:56,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:00,634 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:00,635 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:01,094 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:01,094 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:06,470 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:06,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:16,689 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:16,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:21,525 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.595959595959596 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7070707070707072].
2023-08-22 04:28:21,525 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.595959595959596 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7070707070707072].
2023-08-22 04:28:21,536 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9191919191919192 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 04:28:21,536 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9191919191919192 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 04:28:26,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:26,898 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:36,764 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6767676767676768 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.8585858585858587].
2023-08-22 04:28:36,764 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6767676767676768 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.8585858585858587].
2023-08-22 04:28:45,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:45,818 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:45,921 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:45,921 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:47,203 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:47,203 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:28:57,511 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.37373737373737376 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 04:28:57,512 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0025260000000000005 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.37373737373737376 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 04:29:06,027 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.4646464646464647 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.696969696969697].
2023-08-22 04:29:06,027 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6262626262626263 ,rho=0.4646464646464647 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.696969696969697].
2023-08-22 04:29:06,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:29:06,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:29:07,428 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:29:07,428 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:29:21,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.32323232323232326 ,rho=0.6767676767676768 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.8585858585858587].
2023-08-22 04:29:21,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.32323232323232326 ,rho=0.6767676767676768 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.8585858585858587].
2023-08-22 04:29:27,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:29:27,091 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:29:28,444 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:29:28,444 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:29:30,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.787878787878788].
2023-08-22 04:29:30,834 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.4141414141414142 ,nesterov=False ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.787878787878788].
2023-08-22 04:29:46,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:29:46,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:29:47,487 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.6767676767676768 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.8585858585858587].
2023-08-22 04:29:47,487 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.6767676767676768 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.8585858585858587].
2023-08-22 04:29:48,861 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 04:29:48,861 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 04:29:52,450 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:29:52,450 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:30:06,405 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6767676767676768 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.25252525252525254].
2023-08-22 04:30:06,405 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.6767676767676768 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9191919191919192 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.25252525252525254].
2023-08-22 04:30:11,680 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:30:11,680 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:30:11,825 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.17171717171717174, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5757575757575758 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8585858585858587].
2023-08-22 04:30:11,826 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.17171717171717174, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5757575757575758 ,epsilon=0.0006969697272727273 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8585858585858587].
2023-08-22 04:30:12,772 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.0015160000000000002 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.23232323232323235 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.33333333333333337].
2023-08-22 04:30:12,773 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.0015160000000000002 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.23232323232323235 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.33333333333333337].
2023-08-22 04:30:31,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008586 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.27272727272727276].
2023-08-22 04:30:31,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008586 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.27272727272727276].
2023-08-22 04:30:32,517 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:30:32,517 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:30:35,823 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.22222222222222224 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:30:35,824 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.22222222222222224 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:30:37,083 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.00020300000000000003 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.09090909090909091 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.23232323232323235].
2023-08-22 04:30:37,084 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.00020300000000000003 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.09090909090909091 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.23232323232323235].
2023-08-22 04:30:52,333 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:30:52,333 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:30:52,832 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:30:52,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:00,992 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:00,992 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:02,441 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.48484848484848486 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8585858585858587].
2023-08-22 04:31:02,442 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.48484848484848486 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8585858585858587].
2023-08-22 04:31:12,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:12,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:12,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:12,918 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:21,212 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.20202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.16161616161616163 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:21,212 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.20202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.16161616161616163 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:28,210 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:28,210 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:32,983 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:32,983 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:33,152 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:33,152 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:45,290 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.17171717171717174 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.3535353535353536].
2023-08-22 04:31:45,291 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.17171717171717174 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.3535353535353536].
2023-08-22 04:31:53,266 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8282828282828284].
2023-08-22 04:31:53,266 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8282828282828284].
2023-08-22 04:31:53,770 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.4444444444444445 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:31:53,771 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.4444444444444445 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:32:16,924 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:32:16,924 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:32:17,943 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:32:17,943 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:32:36,731 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:32:36,731 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:32:37,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 04:32:37,687 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 04:32:56,794 INFO: Applying selection operators for generation 20.
2023-08-22 04:32:56,795 INFO: Applying genetic operators for generation 20.
2023-08-22 04:32:56,801 INFO: Evaluating fitness for for generation 20.
2023-08-22 04:32:56,801 INFO: Will evaluate fitness for 66 individuals.
2023-08-22 04:32:57,352 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:32:57,353 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:32:57,365 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5151515151515152 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.8585858585858587].
2023-08-22 04:32:57,365 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5151515151515152 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.8585858585858587].
2023-08-22 04:32:57,381 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:32:57,381 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:32:57,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:32:57,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:33:17,497 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:33:17,498 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:33:18,063 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:33:18,064 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:33:18,278 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8080808080808082, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.8585858585858587].
2023-08-22 04:33:18,279 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8080808080808082, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.8585858585858587].
2023-08-22 04:33:21,082 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:33:21,083 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:33:38,353 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:33:38,353 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:33:38,421 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.3434343434343435].
2023-08-22 04:33:38,421 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.3434343434343435].
2023-08-22 04:33:41,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:33:41,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:33:42,152 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:33:42,152 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:33:58,477 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:33:58,477 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:34:01,362 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8585858585858587].
2023-08-22 04:34:01,362 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8585858585858587].
2023-08-22 04:34:02,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.494949494949495].
2023-08-22 04:34:02,244 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.33333333333333337 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.494949494949495].
2023-08-22 04:34:04,561 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:34:04,561 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:34:18,573 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:34:18,573 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:34:22,253 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6666666666666667 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.8585858585858587].
2023-08-22 04:34:22,253 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6666666666666667 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.8585858585858587].
2023-08-22 04:34:24,856 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:34:24,856 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:34:26,658 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:34:26,658 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:34:39,337 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.8585858585858587].
2023-08-22 04:34:39,338 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.8585858585858587].
2023-08-22 04:34:45,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:34:45,140 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:34:46,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:34:46,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:34:48,505 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 04:34:48,506 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 04:35:06,019 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.32323232323232326].
2023-08-22 04:35:06,019 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.32323232323232326].
2023-08-22 04:35:07,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:07,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:14,467 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.6767676767676768 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.98989898989899].
2023-08-22 04:35:14,467 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.6767676767676768 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.98989898989899].
2023-08-22 04:35:15,702 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:15,702 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:26,418 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:26,419 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:27,887 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:27,888 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:36,096 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:36,097 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:38,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:38,930 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:47,647 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.9696969696969697 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 04:35:47,647 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.9696969696969697 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 04:35:48,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:48,410 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:57,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:57,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:58,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:35:58,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:36:08,582 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:36:08,582 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:36:17,316 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:36:17,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:36:19,930 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.31313131313131315 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:36:19,931 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.31313131313131315 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:36:24,070 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001011 ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.11111111111111112].
2023-08-22 04:36:24,070 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001011 ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.11111111111111112].
2023-08-22 04:36:28,816 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6767676767676768 ,epsilon=0.0006666667 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8585858585858587].
2023-08-22 04:36:28,818 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6767676767676768 ,epsilon=0.0006666667 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8585858585858587].
2023-08-22 04:36:37,441 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.696969696969697 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.7676767676767677].
2023-08-22 04:36:37,441 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.696969696969697 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.7676767676767677].
2023-08-22 04:36:44,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:36:44,874 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:36:49,338 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:36:49,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:36:54,643 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 04:36:54,643 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 04:37:01,851 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:01,851 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:05,098 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:05,098 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:09,618 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:09,618 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:14,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:14,688 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:22,533 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.7272727272727273 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.8585858585858587].
2023-08-22 04:37:22,533 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.7272727272727273 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.8585858585858587].
2023-08-22 04:37:25,149 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:25,149 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:29,804 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:29,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:34,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:34,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:45,983 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:45,983 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:47,233 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.7575757575757577 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.8585858585858587].
2023-08-22 04:37:47,233 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.7575757575757577 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.8585858585858587].
2023-08-22 04:37:50,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:50,688 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:54,985 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:37:54,985 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:38:06,118 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:38:06,118 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:38:11,121 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:38:11,121 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:38:11,228 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.25252525252525254].
2023-08-22 04:38:11,229 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.25252525252525254].
2023-08-22 04:38:16,004 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.36363636363636365 ,epsilon=0.0006666667 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.8585858585858587].
2023-08-22 04:38:16,004 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.36363636363636365 ,epsilon=0.0006666667 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.8585858585858587].
2023-08-22 04:38:29,006 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.21212121212121213 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.32323232323232326].
2023-08-22 04:38:29,007 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.21212121212121213 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.32323232323232326].
2023-08-22 04:38:41,175 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:38:41,176 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:39:01,135 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:39:01,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:39:20,823 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:39:20,823 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:39:41,075 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.31313131313131315 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.5454545454545455].
2023-08-22 04:39:41,075 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5151515151515152 ,rho=0.31313131313131315 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.5454545454545455].
2023-08-22 04:40:04,198 INFO: Applying selection operators for generation 21.
2023-08-22 04:40:04,199 INFO: Applying genetic operators for generation 21.
2023-08-22 04:40:04,204 INFO: Evaluating fitness for for generation 21.
2023-08-22 04:40:04,204 INFO: Will evaluate fitness for 49 individuals.
2023-08-22 04:40:04,795 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:40:04,795 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:40:04,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:40:04,802 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:40:04,804 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8585858585858587].
2023-08-22 04:40:04,804 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8585858585858587].
2023-08-22 04:40:04,809 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:40:04,809 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:40:24,866 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:40:24,866 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:40:24,872 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5858585858585859].
2023-08-22 04:40:24,872 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5858585858585859].
2023-08-22 04:40:25,454 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.48484848484848486].
2023-08-22 04:40:25,454 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.48484848484848486].
2023-08-22 04:40:29,591 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.08080808080808081].
2023-08-22 04:40:29,591 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.08080808080808081].
2023-08-22 04:40:44,997 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6666666666666667 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8585858585858587].
2023-08-22 04:40:44,997 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6666666666666667 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8585858585858587].
2023-08-22 04:40:49,830 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:40:49,831 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:40:50,330 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:40:50,330 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:40:54,993 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:40:54,993 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:04,173 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:04,173 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:10,116 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:10,116 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:15,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:15,032 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:15,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.32323232323232326 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:15,140 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.32323232323232326 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:24,476 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:24,476 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:30,367 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:30,367 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:35,168 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:35,168 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:40,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.393939393939394].
2023-08-22 04:41:40,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.98989898989899 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.393939393939394].
2023-08-22 04:41:44,659 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5656565656565657, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.020202020202020204 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 04:41:44,660 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5656565656565657, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.020202020202020204 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 04:41:50,605 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:50,605 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:41:55,976 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.00030400000000000007 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6767676767676768 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.3535353535353536].
2023-08-22 04:41:55,976 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.00030400000000000007 ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6767676767676768 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.3535353535353536].
2023-08-22 04:42:01,440 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.2828282828282829 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.7575757575757577].
2023-08-22 04:42:01,440 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.2828282828282829 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.7575757575757577].
2023-08-22 04:42:04,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.08080808080808081 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.8585858585858587].
2023-08-22 04:42:04,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5555555555555556 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.08080808080808081 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.8585858585858587].
2023-08-22 04:42:11,395 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:11,395 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:14,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:14,746 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:19,798 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:19,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:30,008 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0023240000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3535353535353536 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.5656565656565657].
2023-08-22 04:42:30,008 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0023240000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3535353535353536 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9393939393939394 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.5656565656565657].
2023-08-22 04:42:31,580 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:31,581 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:34,827 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.6767676767676768 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.2828282828282829].
2023-08-22 04:42:34,827 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.6767676767676768 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.2828282828282829].
2023-08-22 04:42:39,857 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:39,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:51,725 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.9191919191919192].
2023-08-22 04:42:51,725 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.9191919191919192].
2023-08-22 04:42:55,563 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:55,563 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:59,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:59,392 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:59,992 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:42:59,992 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:43:15,637 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.48484848484848486 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.8585858585858587].
2023-08-22 04:43:15,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.48484848484848486 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.8585858585858587].
2023-08-22 04:43:17,207 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:43:17,207 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:43:20,185 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:43:20,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:43:20,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:43:20,796 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:43:37,618 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:43:37,619 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:43:39,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8080808080808082].
2023-08-22 04:43:39,962 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8080808080808082].
2023-08-22 04:43:40,359 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.8585858585858587].
2023-08-22 04:43:40,360 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.8585858585858587].
2023-08-22 04:43:41,169 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:43:41,170 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:43:57,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:43:57,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:00,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:00,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:01,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:01,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:02,361 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.3535353535353536 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 04:44:02,361 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.3535353535353536 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 04:44:18,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:18,070 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:38,161 INFO: Applying selection operators for generation 22.
2023-08-22 04:44:38,162 INFO: Applying genetic operators for generation 22.
2023-08-22 04:44:38,167 INFO: Evaluating fitness for for generation 22.
2023-08-22 04:44:38,167 INFO: Will evaluate fitness for 65 individuals.
2023-08-22 04:44:38,728 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.07070707070707072].
2023-08-22 04:44:38,729 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.07070707070707072].
2023-08-22 04:44:38,734 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.33333333333333337 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.8585858585858587].
2023-08-22 04:44:38,734 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.33333333333333337 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.8585858585858587].
2023-08-22 04:44:38,843 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:38,843 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:38,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:38,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:56,400 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:56,400 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:59,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:59,015 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:59,716 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:44:59,716 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:04,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:04,404 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:16,534 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:16,534 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:19,074 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.6161616161616162 ,nesterov=False ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.30303030303030304 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.07070707070707072].
2023-08-22 04:45:19,075 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.6161616161616162 ,nesterov=False ,amsgrad=True ,weight_decay=0.0076770000000000015 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.30303030303030304 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.07070707070707072].
2023-08-22 04:45:20,084 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:20,084 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:24,632 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:24,632 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:37,345 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:37,345 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:40,319 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:40,320 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:44,455 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:44,455 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:44,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:44,955 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:45:57,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8585858585858587].
2023-08-22 04:45:57,631 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.15151515151515152, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8585858585858587].
2023-08-22 04:46:00,584 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.18181818181818182 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.8585858585858587].
2023-08-22 04:46:00,585 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.18181818181818182 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.8585858585858587].
2023-08-22 04:46:05,344 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:05,345 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:05,920 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:05,920 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:22,819 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:22,820 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:25,616 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:25,617 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:26,210 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:26,210 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:27,238 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:27,238 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:42,943 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.2828282828282829].
2023-08-22 04:46:42,944 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.2828282828282829].
2023-08-22 04:46:45,679 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.32323232323232326 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8585858585858587].
2023-08-22 04:46:45,679 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.008889000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.32323232323232326 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8585858585858587].
2023-08-22 04:46:46,332 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:46,332 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:47,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:46:47,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:03,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:03,138 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:06,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:06,569 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:07,945 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:07,945 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:10,358 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:10,359 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:23,476 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:23,477 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:27,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:27,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:28,160 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:28,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:31,424 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:31,424 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:43,719 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8585858585858587].
2023-08-22 04:47:43,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8585858585858587].
2023-08-22 04:47:47,716 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.5555555555555556 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9191919191919192 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8585858585858587].
2023-08-22 04:47:47,716 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.5555555555555556 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9191919191919192 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8585858585858587].
2023-08-22 04:47:49,225 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:49,225 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:51,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:47:51,789 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:48:03,192 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:48:03,192 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:48:09,526 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:48:09,526 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:48:12,018 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.7171717171717172].
2023-08-22 04:48:12,018 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9797979797979799 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.7171717171717172].
2023-08-22 04:48:12,947 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:48:12,947 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:48:24,213 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.007475000000000002 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8686868686868687].
2023-08-22 04:48:24,213 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.007475000000000002 ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8686868686868687].
2023-08-22 04:48:29,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:48:30,181 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:48:33,789 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.6363636363636365 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.7272727272727273].
2023-08-22 04:48:33,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.6363636363636365 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.7272727272727273].
2023-08-22 04:48:37,738 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.36363636363636365].
2023-08-22 04:48:37,738 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.36363636363636365].
2023-08-22 04:48:43,684 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:48:43,685 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:48:50,465 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7373737373737375, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.7070707070707072 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 04:48:50,466 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7373737373737375, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.7070707070707072 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 04:48:59,100 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:48:59,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:48:59,235 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:48:59,235 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007979798181818182 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:49:03,752 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.8585858585858587].
2023-08-22 04:49:03,752 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.8585858585858587].
2023-08-22 04:49:19,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:49:19,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:49:24,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:49:24,687 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:49:27,681 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:49:27,682 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:49:28,609 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:49:28,610 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:49:39,619 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:49:39,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:49:44,794 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:49:44,794 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:49:48,520 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.20202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.8080808080808082 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.8585858585858587].
2023-08-22 04:49:48,521 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.20202020202020204 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.8080808080808082 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.8585858585858587].
2023-08-22 04:49:48,959 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:49:48,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:50:08,138 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:50:08,138 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:50:26,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:50:26,753 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:50:46,288 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:50:46,288 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:06,699 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6666666666666667 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.07070707070707072].
2023-08-22 04:51:06,699 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6666666666666667 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.07070707070707072].
2023-08-22 04:51:30,398 INFO: Applying selection operators for generation 23.
2023-08-22 04:51:30,399 INFO: Applying genetic operators for generation 23.
2023-08-22 04:51:30,404 INFO: Evaluating fitness for for generation 23.
2023-08-22 04:51:30,404 INFO: Will evaluate fitness for 52 individuals.
2023-08-22 04:51:30,965 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:30,965 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:30,984 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:30,984 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:31,026 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:31,026 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:31,127 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:31,127 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:51,008 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:51,008 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:51,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:51,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:51,892 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:51,892 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:51,938 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:51:51,938 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:10,993 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.8585858585858587].
2023-08-22 04:52:10,993 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.8585858585858587].
2023-08-22 04:52:11,191 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:11,192 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:11,927 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:11,927 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:12,086 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:12,086 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:31,289 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:31,289 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:32,066 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.686868686868687, momentum=0.787878787878788 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.8585858585858587].
2023-08-22 04:52:32,067 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.686868686868687, momentum=0.787878787878788 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.8585858585858587].
2023-08-22 04:52:32,182 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:32,182 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:32,281 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.5252525252525253 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:32,282 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.5252525252525253 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:52,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:52,143 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:52,182 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8585858585858587].
2023-08-22 04:52:52,182 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8585858585858587].
2023-08-22 04:52:57,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=1.0 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.48484848484848486 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.30303030303030304].
2023-08-22 04:52:57,538 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=1.0 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.48484848484848486 ,learning_rate_power=0.0 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.30303030303030304].
2023-08-22 04:52:57,619 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:52:57,619 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:53:12,536 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.18181818181818182, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.5454545454545455 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.8585858585858587].
2023-08-22 04:53:12,536 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.18181818181818182, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.5454545454545455 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.8585858585858587].
2023-08-22 04:53:17,815 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:53:17,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:53:18,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:53:18,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:53:22,816 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:53:22,816 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:53:32,628 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.8585858585858587].
2023-08-22 04:53:32,628 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00026262633636363634 ,centered=False ,beta_1=0.6262626262626263 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.8585858585858587].
2023-08-22 04:53:37,923 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:53:37,924 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:53:38,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:53:38,543 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:53:43,141 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:53:43,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:53:56,967 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.26262626262626265 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8282828282828284].
2023-08-22 04:53:56,967 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.26262626262626265 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8282828282828284].
2023-08-22 04:53:58,409 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.4141414141414142].
2023-08-22 04:53:58,409 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.4141414141414142].
2023-08-22 04:53:58,641 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:53:58,641 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:03,274 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.14141414141414144 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8585858585858587].
2023-08-22 04:54:03,275 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.14141414141414144 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8585858585858587].
2023-08-22 04:54:18,557 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:18,557 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:18,705 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:18,705 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:22,007 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:22,007 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:27,182 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:27,182 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:38,739 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:38,740 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:39,526 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.6767676767676768 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.595959595959596 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.8585858585858587].
2023-08-22 04:54:39,526 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.6767676767676768 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.595959595959596 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.8585858585858587].
2023-08-22 04:54:42,910 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:42,910 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:47,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:47,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:58,797 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:54:58,797 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:55:03,190 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:55:03,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:55:04,333 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:55:04,333 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:55:07,756 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:55:07,757 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:55:18,832 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:55:18,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:55:23,369 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.393939393939394 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6565656565656566].
2023-08-22 04:55:23,369 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.393939393939394 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.6565656565656566].
2023-08-22 04:55:24,371 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:55:24,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:55:27,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:55:27,801 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:55:39,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.23232323232323235].
2023-08-22 04:55:39,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8787878787878789, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.23232323232323235].
2023-08-22 04:55:59,920 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007475000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.8787878787878789].
2023-08-22 04:55:59,920 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.007475000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.8787878787878789].
2023-08-22 04:56:23,957 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:56:23,957 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:56:43,964 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:56:43,964 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:03,820 INFO: Applying selection operators for generation 24.
2023-08-22 04:57:03,822 INFO: Applying genetic operators for generation 24.
2023-08-22 04:57:03,826 INFO: Evaluating fitness for for generation 24.
2023-08-22 04:57:03,826 INFO: Will evaluate fitness for 58 individuals.
2023-08-22 04:57:04,420 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:04,421 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:04,422 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:04,422 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:04,436 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:04,436 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:04,441 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:04,441 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:24,575 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:24,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:24,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:24,753 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:25,366 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.4141414141414142 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.8585858585858587].
2023-08-22 04:57:25,366 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.4141414141414142 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.8585858585858587].
2023-08-22 04:57:26,426 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:26,426 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:44,602 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:44,602 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:44,902 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:44,903 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:46,522 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:46,522 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:50,334 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.26262626262626265 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:57:50,334 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.26262626262626265 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:04,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:04,650 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:04,948 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:04,948 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:06,530 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:06,530 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:15,485 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:15,485 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:25,539 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.595959595959596 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.5050505050505051].
2023-08-22 04:58:25,540 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.23232323232323235 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.595959595959596 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.5050505050505051].
2023-08-22 04:58:25,782 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.6767676767676768 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.8585858585858587].
2023-08-22 04:58:25,783 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.6767676767676768 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.8585858585858587].
2023-08-22 04:58:26,534 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:26,534 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:35,573 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6464646464646465].
2023-08-22 04:58:35,573 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6464646464646465].
2023-08-22 04:58:45,784 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:45,784 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:47,296 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:47,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:51,878 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:51,879 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:56,284 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:58:56,284 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:59:06,000 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.30303030303030304].
2023-08-22 04:59:06,000 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.797979797979798 ,beta_2=0.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.30303030303030304].
2023-08-22 04:59:07,426 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:59:07,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:59:12,139 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:59:12,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:59:16,314 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:59:16,314 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:59:25,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6767676767676768 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.494949494949495].
2023-08-22 04:59:25,404 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.6767676767676768 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.494949494949495].
2023-08-22 04:59:27,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:59:27,410 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:59:32,362 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:59:32,362 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:59:36,306 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6767676767676768 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.04040404040404041].
2023-08-22 04:59:36,307 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.6767676767676768 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.04040404040404041].
2023-08-22 04:59:47,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5858585858585859 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 04:59:47,930 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5858585858585859 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 04:59:51,631 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:59:51,632 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 04:59:53,172 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6767676767676768 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.8585858585858587].
2023-08-22 04:59:53,172 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6767676767676768 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.8585858585858587].
2023-08-22 05:00:02,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:02,799 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:11,811 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:11,811 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:13,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:13,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:17,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:17,834 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:23,001 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:23,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:31,984 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:31,984 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:33,943 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.3535353535353536 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.07070707070707072].
2023-08-22 05:00:33,944 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.3535353535353536 ,epsilon=0.0002121212909090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.07070707070707072].
2023-08-22 05:00:38,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:38,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:43,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.6767676767676768 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.4646464646464647].
2023-08-22 05:00:43,126 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.11111111111111112 ,rho=0.6767676767676768 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.4646464646464647].
2023-08-22 05:00:52,827 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:52,828 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9696969696969697 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:58,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:58,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:59,202 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.8989898989898991 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:00:59,203 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.8989898989898991 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:01:09,008 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.07070707070707072 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:01:09,009 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.07070707070707072 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:01:17,554 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:01:17,555 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:01:18,320 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:01:18,321 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:01:24,239 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:01:24,239 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:01:37,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:01:37,771 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:01:39,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.8585858585858587].
2023-08-22 05:01:39,046 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.8585858585858587].
2023-08-22 05:01:44,348 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:01:44,348 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:01:57,750 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6666666666666667].
2023-08-22 05:01:57,750 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6666666666666667].
2023-08-22 05:01:59,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:01:59,082 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:02:19,128 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:02:19,129 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:02:24,852 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:02:24,852 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:02:44,424 INFO: Applying selection operators for generation 25.
2023-08-22 05:02:44,425 INFO: Applying genetic operators for generation 25.
2023-08-22 05:02:44,431 INFO: Evaluating fitness for for generation 25.
2023-08-22 05:02:44,431 INFO: Will evaluate fitness for 61 individuals.
2023-08-22 05:02:44,993 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.8484848484848485 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.020202020202020204].
2023-08-22 05:02:44,993 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.8484848484848485 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.020202020202020204].
2023-08-22 05:02:45,012 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:02:45,013 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:02:45,014 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:02:45,014 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:02:45,043 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:02:45,044 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:04,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:04,861 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:05,094 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:05,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:05,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:05,712 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:10,339 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:10,339 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:25,128 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:25,128 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:25,660 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.98989898989899 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.5454545454545455].
2023-08-22 05:03:25,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.98989898989899 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.5454545454545455].
2023-08-22 05:03:25,828 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:25,828 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:30,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:30,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:45,058 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:45,058 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:45,635 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:45,635 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:45,923 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:45,923 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:51,415 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:03:51,416 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:05,588 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:05,588 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:05,760 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6767676767676768 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.8585858585858587].
2023-08-22 05:04:05,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6767676767676768 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.8585858585858587].
2023-08-22 05:04:05,905 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.787878787878788 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.4545454545454546].
2023-08-22 05:04:05,905 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.787878787878788 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.02020202020202011 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.4545454545454546].
2023-08-22 05:04:11,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:11,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:25,529 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8383838383838385 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.19191919191919193].
2023-08-22 05:04:25,529 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8383838383838385 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.19191919191919193].
2023-08-22 05:04:25,619 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:25,619 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:31,296 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:31,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:31,885 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:31,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:45,594 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:45,594 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:49,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.36363636363636365 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 05:04:49,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.36363636363636365 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 05:04:51,475 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:51,475 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:04:51,876 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.393939393939394].
2023-08-22 05:04:51,876 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.393939393939394].
2023-08-22 05:05:05,693 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6767676767676768 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.5353535353535354].
2023-08-22 05:05:05,694 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6767676767676768 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.5353535353535354].
2023-08-22 05:05:11,607 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8080808080808082].
2023-08-22 05:05:11,607 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8080808080808082].
2023-08-22 05:05:15,818 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7373737373737375, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.98989898989899 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.8585858585858587].
2023-08-22 05:05:15,818 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7373737373737375, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.98989898989899 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.8585858585858587].
2023-08-22 05:05:17,478 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:05:17,478 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:05:32,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5252525252525253, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7575757575757577 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8585858585858587].
2023-08-22 05:05:32,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5252525252525253, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7575757575757577 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8585858585858587].
2023-08-22 05:05:32,530 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.11111111111111112].
2023-08-22 05:05:32,531 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.11111111111111112].
2023-08-22 05:05:37,811 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:05:37,811 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:05:40,792 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:05:40,792 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:05:51,962 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:05:51,963 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:05:52,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:05:52,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:05:57,980 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:05:57,980 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:06:00,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.0002727273454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.9292929292929294].
2023-08-22 05:06:00,797 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.0002727273454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.9292929292929294].
2023-08-22 05:06:12,102 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:06:12,102 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:06:12,310 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:06:12,311 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:06:18,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=1.0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.32323232323232326 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8181818181818182].
2023-08-22 05:06:18,045 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=1.0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.32323232323232326 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8181818181818182].
2023-08-22 05:06:25,365 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:06:25,365 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:06:32,109 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006667000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.22222222222222224].
2023-08-22 05:06:32,110 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006667000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.17171717171717174 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.22222222222222224].
2023-08-22 05:06:32,444 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7373737373737375, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5353535353535354 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.8585858585858587].
2023-08-22 05:06:32,445 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7373737373737375, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5353535353535354 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.8585858585858587].
2023-08-22 05:06:43,552 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:06:43,553 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:06:46,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4444444444444445 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.8585858585858587].
2023-08-22 05:06:46,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4444444444444445 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.8585858585858587].
2023-08-22 05:06:55,147 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:06:55,147 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:06:57,986 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:06:57,986 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:04,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:04,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:11,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009596 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:11,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009596 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:15,870 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:15,870 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:18,351 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:18,351 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:24,781 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.8181818181818182 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.8383838383838385 ,learning_rate_power=0.0 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8585858585858587].
2023-08-22 05:07:24,781 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005051000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.8181818181818182 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.8383838383838385 ,learning_rate_power=0.0 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8585858585858587].
2023-08-22 05:07:36,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:36,036 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:38,591 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:38,591 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:49,965 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.36363636363636365].
2023-08-22 05:07:49,965 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.36363636363636365].
2023-08-22 05:07:55,702 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:55,702 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:07:58,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.16161616161616163 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.8585858585858587].
2023-08-22 05:07:58,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.16161616161616163 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.8585858585858587].
2023-08-22 05:08:15,093 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:08:15,093 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:08:35,086 INFO: Applying selection operators for generation 26.
2023-08-22 05:08:35,088 INFO: Applying genetic operators for generation 26.
2023-08-22 05:08:35,093 INFO: Evaluating fitness for for generation 26.
2023-08-22 05:08:35,093 INFO: Will evaluate fitness for 59 individuals.
2023-08-22 05:08:35,651 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7575757575757577 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6262626262626263].
2023-08-22 05:08:35,651 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7575757575757577 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6262626262626263].
2023-08-22 05:08:35,678 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:08:35,679 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:08:35,685 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:08:35,685 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:08:35,691 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9393939393939394, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:08:35,691 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9393939393939394, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:08:55,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:08:55,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:08:55,985 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:08:55,985 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:00,586 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:00,587 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:02,443 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:02,443 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:16,128 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:16,129 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:16,494 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:16,494 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:20,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:20,746 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:22,610 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.5151515151515152 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.8585858585858587].
2023-08-22 05:09:22,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.5151515151515152 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.8585858585858587].
2023-08-22 05:09:36,270 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8585858585858587].
2023-08-22 05:09:36,270 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8585858585858587].
2023-08-22 05:09:36,640 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:36,640 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:40,905 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:40,905 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:48,061 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:48,061 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:09:56,632 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.0 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4747474747474748].
2023-08-22 05:09:56,633 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.0 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4747474747474748].
2023-08-22 05:10:01,754 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6666666666666667].
2023-08-22 05:10:01,754 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6666666666666667].
2023-08-22 05:10:02,384 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:02,384 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:08,165 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:08,165 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:17,424 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:17,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:21,680 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:21,680 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:22,784 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:22,784 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:28,920 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:28,921 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:37,583 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.33333333333333337, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4141414141414142 ,rho=0.42424242424242425 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 05:10:37,583 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.33333333333333337, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4141414141414142 ,rho=0.42424242424242425 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 05:10:41,627 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:41,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:43,001 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:43,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:49,053 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:10:49,054 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:11:02,102 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:11:02,102 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:11:03,218 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 05:11:03,218 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 05:11:09,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:11:09,103 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:11:14,404 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.17171717171717174, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.8585858585858587].
2023-08-22 05:11:14,405 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.17171717171717174, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.8585858585858587].
2023-08-22 05:11:22,374 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:11:22,374 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:11:24,552 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8181818181818182, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.36363636363636365 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.04040404040404041].
2023-08-22 05:11:24,552 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8181818181818182, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.36363636363636365 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.04040404040404041].
2023-08-22 05:11:29,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8585858585858587].
2023-08-22 05:11:29,080 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8585858585858587].
2023-08-22 05:11:40,618 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4141414141414142 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.8585858585858587].
2023-08-22 05:11:40,618 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4141414141414142 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.8585858585858587].
2023-08-22 05:11:42,496 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:11:42,496 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:11:50,525 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:11:50,526 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:11:50,608 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.23232323232323235 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.8585858585858587].
2023-08-22 05:11:50,608 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.23232323232323235 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.8585858585858587].
2023-08-22 05:12:02,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:12:02,535 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:12:07,464 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.07070707070707072].
2023-08-22 05:12:07,464 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.07070707070707072].
2023-08-22 05:12:10,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8585858585858587].
2023-08-22 05:12:10,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8989898989898991 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8585858585858587].
2023-08-22 05:12:16,499 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8181818181818182 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.30303030303030304].
2023-08-22 05:12:16,499 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8181818181818182 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.30303030303030304].
2023-08-22 05:12:23,483 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.30303030303030304].
2023-08-22 05:12:23,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.30303030303030304].
2023-08-22 05:12:32,428 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:12:32,428 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:12:35,631 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9696969696969697 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.7474747474747475].
2023-08-22 05:12:35,632 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9696969696969697 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.7474747474747475].
2023-08-22 05:12:40,902 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:12:40,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:12:43,931 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.24242424242424243].
2023-08-22 05:12:43,932 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=1e-06 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.24242424242424243].
2023-08-22 05:12:52,565 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5858585858585859 ,rho=0.9292929292929294 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.8585858585858587].
2023-08-22 05:12:52,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5858585858585859 ,rho=0.9292929292929294 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.31313131313131315 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.8585858585858587].
2023-08-22 05:13:00,940 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:13:00,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:13:00,981 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:13:00,981 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:13:10,362 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.686868686868687].
2023-08-22 05:13:10,362 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.686868686868687].
2023-08-22 05:13:21,708 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:13:21,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:13:21,833 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001314 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.6767676767676768 ,epsilon=0.001 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9797979797979799].
2023-08-22 05:13:21,834 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001314 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.6767676767676768 ,epsilon=0.001 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9797979797979799].
2023-08-22 05:13:35,829 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:13:35,829 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:13:41,646 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:13:41,646 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:13:48,417 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.030303030303030304 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.09090909090909091].
2023-08-22 05:13:48,417 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.030303030303030304 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.09090909090909091].
2023-08-22 05:13:56,724 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:13:56,725 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:14:26,010 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:14:26,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:14:45,797 INFO: Applying selection operators for generation 27.
2023-08-22 05:14:45,798 INFO: Applying genetic operators for generation 27.
2023-08-22 05:14:45,804 INFO: Evaluating fitness for for generation 27.
2023-08-22 05:14:45,804 INFO: Will evaluate fitness for 56 individuals.
2023-08-22 05:14:46,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:14:46,405 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:14:46,405 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:14:46,406 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:14:46,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.09090909090909091 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4545454545454546].
2023-08-22 05:14:46,411 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.09090909090909091 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4545454545454546].
2023-08-22 05:14:46,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:14:46,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:15:06,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.595959595959596 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7474747474747475].
2023-08-22 05:15:06,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.595959595959596 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7474747474747475].
2023-08-22 05:15:06,328 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.7171717171717172].
2023-08-22 05:15:06,328 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.7171717171717172].
2023-08-22 05:15:06,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:15:06,612 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:15:12,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:15:12,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:15:26,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:15:26,367 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:15:26,841 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9595959595959597].
2023-08-22 05:15:26,841 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9595959595959597].
2023-08-22 05:15:32,317 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.8585858585858587].
2023-08-22 05:15:32,317 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.8585858585858587].
2023-08-22 05:15:32,912 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:15:32,912 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:15:46,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=1.0 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.21212121212121213].
2023-08-22 05:15:46,884 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=1.0 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.21212121212121213].
2023-08-22 05:15:47,602 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:15:47,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:15:52,985 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:15:52,986 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:15:57,364 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:15:57,364 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:07,275 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5858585858585859 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.494949494949495].
2023-08-22 05:16:07,275 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5858585858585859 ,epsilon=0.00043434349090909084 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.494949494949495].
2023-08-22 05:16:08,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4545454545454546, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=0.0045460000000000006 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.595959595959596].
2023-08-22 05:16:08,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4545454545454546, momentum=0.29292929292929293 ,nesterov=True ,amsgrad=True ,weight_decay=0.0045460000000000006 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.595959595959596].
2023-08-22 05:16:13,118 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:13,119 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:17,469 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:17,469 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:32,506 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:32,507 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:33,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:33,718 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:34,183 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.595959595959596 ,epsilon=0.0007979798181818182 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5050505050505051].
2023-08-22 05:16:34,183 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.595959595959596 ,epsilon=0.0007979798181818182 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5050505050505051].
2023-08-22 05:16:37,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:37,473 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:52,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:52,569 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:53,765 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:53,765 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:58,397 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.13131313131313133 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.07070707070707072].
2023-08-22 05:16:58,398 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.0034350000000000006 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.13131313131313133 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.36363636363636354 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.07070707070707072].
2023-08-22 05:16:58,636 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:16:58,636 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:17:12,547 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:17:12,548 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:17:13,743 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.32323232323232326 ,rho=0.6767676767676768 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 05:17:13,744 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.32323232323232326 ,rho=0.6767676767676768 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 05:17:18,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:17:18,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:17:23,925 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:17:23,925 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:17:33,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.26262626262626265 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.888888888888889].
2023-08-22 05:17:33,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004647000000000001 ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.26262626262626265 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.9292929292929294 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.888888888888889].
2023-08-22 05:17:39,148 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:17:39,148 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:17:39,542 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:17:39,542 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:17:44,023 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.30303030303030304 ,rho=0.06060606060606061 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8585858585858587].
2023-08-22 05:17:44,024 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.30303030303030304 ,rho=0.06060606060606061 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8585858585858587].
2023-08-22 05:17:59,672 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:17:59,673 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:17:59,825 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:17:59,825 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:00,467 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:00,467 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:05,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:05,837 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:19,680 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:19,680 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:19,869 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.6666666666666667 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6464646464646465 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.3434343434343435].
2023-08-22 05:18:19,869 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.6262626262626263 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.6666666666666667 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6464646464646465 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.3434343434343435].
2023-08-22 05:18:20,828 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8383838383838385].
2023-08-22 05:18:20,829 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.24242424242424243, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8383838383838385].
2023-08-22 05:18:26,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:26,597 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:39,574 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:39,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:45,786 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:45,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:46,536 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:46,536 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:46,793 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:18:46,793 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:19:00,333 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:19:00,333 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:19:06,526 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7676767676767677].
2023-08-22 05:19:06,527 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.29292929292929293 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7676767676767677].
2023-08-22 05:19:20,359 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:19:20,359 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:19:31,828 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:19:31,828 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:19:40,112 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:19:40,113 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:19:51,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:19:51,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:19:59,752 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:19:59,753 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:11,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:11,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:30,618 INFO: Applying selection operators for generation 28.
2023-08-22 05:20:30,619 INFO: Applying genetic operators for generation 28.
2023-08-22 05:20:30,625 INFO: Evaluating fitness for for generation 28.
2023-08-22 05:20:30,625 INFO: Will evaluate fitness for 61 individuals.
2023-08-22 05:20:31,200 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:31,200 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:31,207 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:31,208 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:31,325 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:31,325 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:31,362 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.020202020202020204 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=1.0 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8989898989898991].
2023-08-22 05:20:31,362 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.020202020202020204 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=1.0 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8989898989898991].
2023-08-22 05:20:51,177 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:51,177 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:51,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:51,202 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:51,276 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:51,276 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:20:59,418 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8181818181818182 ,nesterov=True ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.8585858585858587].
2023-08-22 05:20:59,418 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8181818181818182 ,nesterov=True ,amsgrad=False ,weight_decay=0.0016170000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.8585858585858587].
2023-08-22 05:21:11,180 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:21:11,180 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:21:11,307 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:21:11,307 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:21:11,857 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:21:11,857 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:21:25,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.36363636363636365 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8585858585858587].
2023-08-22 05:21:25,408 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005960000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.36363636363636365 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8585858585858587].
2023-08-22 05:21:31,125 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:21:31,125 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:21:31,257 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:21:31,257 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:21:31,938 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.14141414141414144 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.8585858585858587].
2023-08-22 05:21:31,938 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.14141414141414144 ,epsilon=0.00010101019090909089 ,centered=True ,beta_1=0.4444444444444445 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.8585858585858587].
2023-08-22 05:21:51,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:21:51,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:21:51,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.7070707070707072 ,nesterov=False ,amsgrad=False ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.5252525252525253].
2023-08-22 05:21:51,918 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.7070707070707072 ,nesterov=False ,amsgrad=False ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.12121212121212122 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.5252525252525253].
2023-08-22 05:21:52,028 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:21:52,028 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:21:56,911 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.9797979797979799 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.98989898989899 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.4040404040404041].
2023-08-22 05:21:56,911 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.030303030303030304 ,rho=0.9797979797979799 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.98989898989899 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.4040404040404041].
2023-08-22 05:22:11,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:22:11,835 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:22:12,201 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.595959595959596 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.494949494949495].
2023-08-22 05:22:12,201 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.595959595959596 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.494949494949495].
2023-08-22 05:22:16,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4747474747474748].
2023-08-22 05:22:16,412 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.18181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4747474747474748].
2023-08-22 05:22:18,530 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.21212121212121213].
2023-08-22 05:22:18,531 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.21212121212121213].
2023-08-22 05:22:33,049 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:22:33,049 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:22:37,255 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.6767676767676768 ,epsilon=0.0003333334 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8585858585858587].
2023-08-22 05:22:37,256 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.6767676767676768 ,epsilon=0.0003333334 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8585858585858587].
2023-08-22 05:22:37,880 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:22:37,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:22:37,896 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:22:37,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:22:53,290 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:22:53,290 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:22:57,874 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:22:57,875 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:22:57,896 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:22:57,896 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:23:03,232 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:23:03,233 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:23:13,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.6767676767676768 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.8585858585858587].
2023-08-22 05:23:13,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.6767676767676768 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.8585858585858587].
2023-08-22 05:23:17,856 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:23:17,856 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:23:17,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5050505050505051].
2023-08-22 05:23:17,918 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5050505050505051].
2023-08-22 05:23:23,364 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7676767676767677 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.9696969696969697].
2023-08-22 05:23:23,364 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7676767676767677 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.9696969696969697].
2023-08-22 05:23:38,675 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6767676767676768 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.19191919191919193].
2023-08-22 05:23:38,675 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6767676767676768 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.19191919191919193].
2023-08-22 05:23:39,033 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:23:39,034 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:23:43,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 05:23:43,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 05:23:43,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:23:43,687 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:23:59,026 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:23:59,026 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:24:00,054 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.393939393939394 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.8585858585858587].
2023-08-22 05:24:00,054 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.393939393939394 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.8585858585858587].
2023-08-22 05:24:03,885 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:24:03,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:24:04,274 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:24:04,274 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:24:19,187 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.8585858585858587].
2023-08-22 05:24:19,187 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.8585858585858587].
2023-08-22 05:24:24,057 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6666666666666667 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.8585858585858587].
2023-08-22 05:24:24,058 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6666666666666667 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.8585858585858587].
2023-08-22 05:24:24,417 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:24:24,418 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:24:26,343 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:24:26,343 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:24:44,548 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.8080808080808082].
2023-08-22 05:24:44,548 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.006263000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.8080808080808082].
2023-08-22 05:24:46,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:24:46,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:24:46,574 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:24:46,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:24:50,165 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7777777777777778 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.5050505050505051].
2023-08-22 05:24:50,165 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7777777777777778 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.5050505050505051].
2023-08-22 05:25:03,329 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=1.0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.33333333333333337].
2023-08-22 05:25:03,330 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=1.0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.33333333333333337].
2023-08-22 05:25:06,518 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7777777777777778, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.9191919191919192].
2023-08-22 05:25:06,518 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7777777777777778, momentum=0.09090909090909091 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.9191919191919192].
2023-08-22 05:25:07,475 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:07,476 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:16,676 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:16,676 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:27,778 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:27,778 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:30,744 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:30,744 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:36,933 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:36,933 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:47,878 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:47,878 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:50,899 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:50,900 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:56,992 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.888888888888889 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:25:56,993 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6161616161616162 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.888888888888889 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:26:16,363 INFO: Applying selection operators for generation 29.
2023-08-22 05:26:16,365 INFO: Applying genetic operators for generation 29.
2023-08-22 05:26:16,370 INFO: Evaluating fitness for for generation 29.
2023-08-22 05:26:16,370 INFO: Will evaluate fitness for 61 individuals.
2023-08-22 05:26:16,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 05:26:16,922 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8080808080808082 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.8585858585858587].
2023-08-22 05:26:17,113 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:26:17,113 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:26:17,136 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.8585858585858587 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8585858585858587].
2023-08-22 05:26:17,137 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.009192 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.8585858585858587 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8585858585858587].
2023-08-22 05:26:17,153 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6464646464646465, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.19191919191919193 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.21212121212121213].
2023-08-22 05:26:17,153 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6464646464646465, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.19191919191919193 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.21212121212121213].
2023-08-22 05:26:36,141 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.010101010101010102].
2023-08-22 05:26:36,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.010101010101010102].
2023-08-22 05:26:37,062 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.020202020202020204, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4747474747474748].
2023-08-22 05:26:37,063 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.020202020202020204, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4747474747474748].
2023-08-22 05:26:37,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:26:37,597 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:26:43,185 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:26:43,185 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:26:57,820 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:26:57,821 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:01,938 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:01,938 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:02,186 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:02,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:03,577 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:03,577 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:17,967 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:17,967 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:22,055 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:22,055 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:22,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:22,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:23,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0003333334 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.8282828282828284].
2023-08-22 05:27:23,644 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0003333334 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.8282828282828284].
2023-08-22 05:27:38,074 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:38,074 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:41,989 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:41,989 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:42,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.8585858585858587].
2023-08-22 05:27:42,560 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.8585858585858587].
2023-08-22 05:27:43,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:43,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:58,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:27:58,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:02,435 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:02,435 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:02,641 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:02,641 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:04,547 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:04,547 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:18,942 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8585858585858587].
2023-08-22 05:28:18,943 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8585858585858587].
2023-08-22 05:28:22,439 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:22,439 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:22,505 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:22,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:24,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.8585858585858587].
2023-08-22 05:28:24,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.8585858585858587].
2023-08-22 05:28:38,995 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:38,995 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:42,403 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:42,403 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:43,171 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:43,171 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:45,711 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:45,712 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:59,034 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:28:59,034 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:02,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.27272727272727276 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:02,206 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.27272727272727276 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:03,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:29:03,143 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.27272727272727276].
2023-08-22 05:29:05,808 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:05,808 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:19,854 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:19,854 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:26,701 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.797979797979798].
2023-08-22 05:29:26,702 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.797979797979798].
2023-08-22 05:29:28,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:28,538 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:28,886 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:28,886 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:40,085 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:40,085 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:48,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0026270000000000004 ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.9494949494949496 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.8585858585858587].
2023-08-22 05:29:48,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0026270000000000004 ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.9494949494949496 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.8585858585858587].
2023-08-22 05:29:48,892 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:48,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:53,035 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:29:53,035 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:30:00,254 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:30:00,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:30:09,641 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.10101010101010102].
2023-08-22 05:30:09,641 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.10101010101010102].
2023-08-22 05:30:13,146 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:30:13,146 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:30:14,163 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.30303030303030304].
2023-08-22 05:30:14,163 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.30303030303030304].
2023-08-22 05:30:20,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:30:20,348 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:30:29,634 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.36363636363636365, momentum=0.48484848484848486 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.5353535353535354 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 05:30:29,634 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.36363636363636365, momentum=0.48484848484848486 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.6767676767676768 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.5353535353535354 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 05:30:33,265 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:30:33,266 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:30:34,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.001314 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5757575757575758 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.8585858585858587].
2023-08-22 05:30:34,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.001314 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5757575757575758 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.8585858585858587].
2023-08-22 05:30:41,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:30:41,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:30:54,422 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:30:54,422 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:30:54,555 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9797979797979799, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.2828282828282829].
2023-08-22 05:30:54,556 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9797979797979799, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.5757575757575758 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.2828282828282829].
2023-08-22 05:31:01,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:31:01,421 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:31:14,845 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=1.0, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=0.001011 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.8585858585858587].
2023-08-22 05:31:14,845 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=1.0, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=0.001011 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.8585858585858587].
2023-08-22 05:31:18,381 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.8585858585858587].
2023-08-22 05:31:18,381 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.8585858585858587].
2023-08-22 05:31:21,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:31:21,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:31:38,839 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:31:38,840 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:31:40,769 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:31:40,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:31:59,882 INFO: Applying selection operators for generation 30.
2023-08-22 05:31:59,883 INFO: Applying genetic operators for generation 30.
2023-08-22 05:31:59,889 INFO: Evaluating fitness for for generation 30.
2023-08-22 05:31:59,889 INFO: Will evaluate fitness for 61 individuals.
2023-08-22 05:32:00,477 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:00,477 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:00,487 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.05050505050505051].
2023-08-22 05:32:00,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.05050505050505051].
2023-08-22 05:32:00,492 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0.787878787878788 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.48484848484848486 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.8585858585858587].
2023-08-22 05:32:00,492 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:00,492 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0.787878787878788 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.48484848484848486 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.8585858585858587].
2023-08-22 05:32:00,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:20,902 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.686868686868687, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8787878787878789 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8585858585858587].
2023-08-22 05:32:20,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.686868686868687, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8787878787878789 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8585858585858587].
2023-08-22 05:32:21,273 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:21,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:25,686 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:25,687 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:25,736 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:25,737 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:41,549 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:41,549 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:45,623 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:45,624 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:45,727 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:45,727 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:32:46,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5757575757575758 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7373737373737375 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8585858585858587].
2023-08-22 05:32:46,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5757575757575758 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7373737373737375 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8585858585858587].
2023-08-22 05:33:01,666 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:01,666 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:05,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9494949494949496 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.17171717171717174 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.8585858585858587].
2023-08-22 05:33:05,451 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9494949494949496 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.17171717171717174 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.8585858585858587].
2023-08-22 05:33:05,579 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:05,579 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:11,405 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.17171717171717174 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 05:33:11,406 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.36363636363636365, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.17171717171717174 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 05:33:21,684 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:21,685 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:26,403 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.14141414141414144 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 05:33:26,403 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.14141414141414144 ,epsilon=0.0009696969727272727 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 05:33:31,983 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:31,983 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:37,236 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:37,236 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:41,722 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:41,722 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:52,122 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:52,122 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:53,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:53,374 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:57,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:33:57,244 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:34:02,613 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:34:02,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:34:13,203 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.6060606060606061].
2023-08-22 05:34:13,203 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.6060606060606061].
2023-08-22 05:34:13,338 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5858585858585859, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=0.0045460000000000006 ,use_ema=False ,ema_momentum=0.09090909090909091 ,rho=0.6767676767676768 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.8585858585858587].
2023-08-22 05:34:13,338 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5858585858585859, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=0.0045460000000000006 ,use_ema=False ,ema_momentum=0.09090909090909091 ,rho=0.6767676767676768 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.8585858585858587].
2023-08-22 05:34:18,139 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4545454545454546, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0019200000000000003 ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.07070707070707072].
2023-08-22 05:34:18,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4545454545454546, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0019200000000000003 ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.9393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.07070707070707072].
2023-08-22 05:34:22,849 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:34:22,849 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:34:33,222 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.5252525252525253].
2023-08-22 05:34:33,222 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.5252525252525253].
2023-08-22 05:34:39,038 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5454545454545455, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.24242424242424243 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6060606060606061].
2023-08-22 05:34:39,039 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5454545454545455, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.24242424242424243 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6060606060606061].
2023-08-22 05:34:39,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006970000000000001 ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.787878787878788].
2023-08-22 05:34:39,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006970000000000001 ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.787878787878788].
2023-08-22 05:34:42,986 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:34:42,987 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:34:54,299 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.25252525252525254 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.32323232323232326].
2023-08-22 05:34:54,299 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.25252525252525254 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.32323232323232326].
2023-08-22 05:35:00,719 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:00,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:03,008 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:03,008 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:04,573 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:04,573 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:20,279 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.16161616161616163 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-22 05:35:20,279 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.16161616161616163 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.8585858585858587].
2023-08-22 05:35:20,860 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:20,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:23,816 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:23,816 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:24,581 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:24,582 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:40,811 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:40,811 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:43,964 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.8585858585858587].
2023-08-22 05:35:43,964 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.8585858585858587].
2023-08-22 05:35:45,493 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.030303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.42424242424242425 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.8383838383838385].
2023-08-22 05:35:45,493 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.030303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.42424242424242425 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.8383838383838385].
2023-08-22 05:35:46,047 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:35:46,048 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:36:00,762 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.5151515151515152].
2023-08-22 05:36:00,762 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.5151515151515152].
2023-08-22 05:36:04,127 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.29292929292929293 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.8585858585858587].
2023-08-22 05:36:04,127 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.29292929292929293 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.8585858585858587].
2023-08-22 05:36:06,045 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:36:06,045 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:36:11,307 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:36:11,308 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:36:22,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.16161616161616163 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.4141414141414142].
2023-08-22 05:36:22,759 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.16161616161616163 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.4141414141414142].
2023-08-22 05:36:26,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:36:26,884 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:36:31,746 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:36:31,747 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:36:41,293 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:36:41,293 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:36:47,044 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5858585858585859 ,rho=0.16161616161616163 ,epsilon=0.0006666667 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 05:36:47,044 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.04040404040404041, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5858585858585859 ,rho=0.16161616161616163 ,epsilon=0.0006666667 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 05:36:49,535 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.37373737373737376, momentum=0.9494949494949496 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.8585858585858587].
2023-08-22 05:36:49,535 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.37373737373737376, momentum=0.9494949494949496 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.8585858585858587].
2023-08-22 05:36:51,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:36:51,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:37:09,061 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8787878787878789 ,rho=0.21212121212121213 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.8585858585858587].
2023-08-22 05:37:09,062 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8787878787878789 ,rho=0.21212121212121213 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.494949494949495 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.8585858585858587].
2023-08-22 05:37:11,839 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:37:11,839 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:37:12,028 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.31313131313131315 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 05:37:12,029 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.31313131313131315 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 05:37:32,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:37:32,616 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:37:35,871 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:37:35,871 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:37:55,743 INFO: Applying selection operators for generation 31.
2023-08-22 05:37:55,744 INFO: Applying genetic operators for generation 31.
2023-08-22 05:37:55,749 INFO: Evaluating fitness for for generation 31.
2023-08-22 05:37:55,749 INFO: Will evaluate fitness for 51 individuals.
2023-08-22 05:37:56,317 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:37:56,317 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:37:56,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:37:56,327 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:37:56,401 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.38383838383838387, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.6767676767676768 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:37:56,403 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.38383838383838387, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.6767676767676768 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:37:56,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:37:56,408 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:14,797 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:14,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:16,146 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:16,146 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:16,238 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:16,238 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:16,393 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:16,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:34,828 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:34,829 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:35,992 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:35,993 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:36,038 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7373737373737375, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.001819 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4141414141414142 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8585858585858587].
2023-08-22 05:38:36,039 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7373737373737375, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.001819 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4141414141414142 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8585858585858587].
2023-08-22 05:38:36,378 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8383838383838385, momentum=0.9090909090909092 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6565656565656566].
2023-08-22 05:38:36,378 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8383838383838385, momentum=0.9090909090909092 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6565656565656566].
2023-08-22 05:38:54,836 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:54,836 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:56,786 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:38:56,786 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:39:02,463 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.6363636363636365 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5656565656565657].
2023-08-22 05:39:02,463 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7575757575757577 ,rho=0.6363636363636365 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5656565656565657].
2023-08-22 05:39:02,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:39:02,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:39:15,503 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:39:15,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:39:16,990 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7676767676767677 ,nesterov=False ,amsgrad=False ,weight_decay=0.004849000000000001 ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.11111111111111112].
2023-08-22 05:39:16,990 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7676767676767677 ,nesterov=False ,amsgrad=False ,weight_decay=0.004849000000000001 ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.11111111111111112].
2023-08-22 05:39:23,300 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:39:23,300 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:39:28,561 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.005455000000000001 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.6767676767676768 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.8585858585858587].
2023-08-22 05:39:28,562 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.005455000000000001 ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.6767676767676768 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.8585858585858587].
2023-08-22 05:39:35,883 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:39:35,883 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:39:42,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.6767676767676768 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.10101010101010102].
2023-08-22 05:39:42,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.6767676767676768 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.10101010101010102].
2023-08-22 05:39:43,439 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:39:43,439 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:39:48,474 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.8585858585858587].
2023-08-22 05:39:48,474 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.8585858585858587].
2023-08-22 05:39:56,027 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:39:56,027 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:03,684 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:03,685 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:08,951 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.37373737373737376 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:08,951 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.37373737373737376 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7676767676767677 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:14,525 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:14,525 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:16,147 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.6060606060606061].
2023-08-22 05:40:16,147 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5151515151515152, momentum=0.7171717171717172 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.6060606060606061].
2023-08-22 05:40:24,747 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.4545454545454546].
2023-08-22 05:40:24,747 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.4545454545454546].
2023-08-22 05:40:35,472 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:35,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:36,483 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:36,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:43,041 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:43,041 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:45,005 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5252525252525253, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.98989898989899].
2023-08-22 05:40:45,005 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5252525252525253, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.98989898989899].
2023-08-22 05:40:55,729 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:55,729 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:56,678 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:40:56,679 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:03,396 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.8383838383838385 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.06060606060606061].
2023-08-22 05:41:03,396 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.8383838383838385 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.06060606060606061].
2023-08-22 05:41:03,904 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:03,904 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:15,781 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.06060606060606061 ,rho=0.32323232323232326 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:15,781 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008283 ,use_ema=True ,ema_momentum=0.06060606060606061 ,rho=0.32323232323232326 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:16,744 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:16,745 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:24,159 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.494949494949495 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.8585858585858587].
2023-08-22 05:41:24,159 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.494949494949495 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.8585858585858587].
2023-08-22 05:41:28,995 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.15151515151515152].
2023-08-22 05:41:28,995 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.15151515151515152].
2023-08-22 05:41:36,865 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:36,865 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:43,554 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:43,554 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:44,231 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:44,232 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:49,825 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:49,825 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:41:57,596 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.6767676767676768 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.8585858585858587].
2023-08-22 05:41:57,596 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4545454545454546 ,rho=0.6767676767676768 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.8585858585858587].
2023-08-22 05:42:04,179 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.13131313131313133 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8585858585858587].
2023-08-22 05:42:04,180 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.13131313131313133 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8585858585858587].
2023-08-22 05:42:04,386 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:42:04,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:42:24,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.23232323232323235].
2023-08-22 05:42:24,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.23232323232323235].
2023-08-22 05:42:44,576 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:42:44,577 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:43:03,651 INFO: Applying selection operators for generation 32.
2023-08-22 05:43:03,652 INFO: Applying genetic operators for generation 32.
2023-08-22 05:43:03,657 INFO: Evaluating fitness for for generation 32.
2023-08-22 05:43:03,657 INFO: Will evaluate fitness for 60 individuals.
2023-08-22 05:43:04,201 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:43:04,201 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:43:04,230 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:43:04,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:43:04,250 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.31313131313131315].
2023-08-22 05:43:04,251 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.31313131313131315].
2023-08-22 05:43:04,346 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.393939393939394].
2023-08-22 05:43:04,346 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.393939393939394].
2023-08-22 05:43:24,155 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:43:24,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:43:24,156 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:43:24,157 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:43:30,830 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.6767676767676768].
2023-08-22 05:43:30,830 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.6767676767676768].
2023-08-22 05:43:31,333 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:43:31,333 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:43:44,158 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:43:44,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:43:45,071 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7575757575757577, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.29292929292929293 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 05:43:45,071 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7575757575757577, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.29292929292929293 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 05:43:50,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8585858585858587].
2023-08-22 05:43:50,327 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8585858585858587].
2023-08-22 05:43:50,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:43:50,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:44:04,120 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:44:04,120 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:44:10,826 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:44:10,826 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:44:11,740 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.6161616161616162].
2023-08-22 05:44:11,740 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.6161616161616162].
2023-08-22 05:44:17,186 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5353535353535354].
2023-08-22 05:44:17,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5353535353535354].
2023-08-22 05:44:24,927 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8383838383838385 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.2828282828282829].
2023-08-22 05:44:24,927 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.8383838383838385 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.2828282828282829].
2023-08-22 05:44:31,851 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:44:31,852 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:44:37,315 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9292929292929294].
2023-08-22 05:44:37,316 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9292929292929294].
2023-08-22 05:44:43,538 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:44:43,538 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:44:51,805 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:44:51,806 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:44:52,107 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:44:52,107 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:03,687 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.009293000000000001 ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.6767676767676768 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.8585858585858587].
2023-08-22 05:45:03,687 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.009293000000000001 ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.6767676767676768 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.8585858585858587].
2023-08-22 05:45:04,285 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:04,286 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:11,917 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:11,917 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:12,185 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:12,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:24,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:24,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:29,330 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.43434343434343436, momentum=1.0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.8585858585858587].
2023-08-22 05:45:29,330 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.43434343434343436, momentum=1.0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005354000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005151515636363636 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.8585858585858587].
2023-08-22 05:45:32,007 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:32,007 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:32,256 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:32,256 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:45,393 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.6767676767676768 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.8585858585858587].
2023-08-22 05:45:45,394 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.6767676767676768 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.8585858585858587].
2023-08-22 05:45:52,951 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 05:45:52,952 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.23232323232323235, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 05:45:53,071 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:53,071 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:54,979 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:45:54,979 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:10,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:10,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:13,377 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:13,377 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:16,007 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:16,008 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:18,977 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.004445000000000001 ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.6767676767676768 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.8585858585858587].
2023-08-22 05:46:18,977 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=1.0, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.004445000000000001 ,use_ema=True ,ema_momentum=0.4040404040404041 ,rho=0.6767676767676768 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.8585858585858587].
2023-08-22 05:46:30,597 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:30,597 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:33,445 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:33,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:36,148 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:36,149 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:45,189 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:45,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:50,613 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:50,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:53,669 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:53,669 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:46:56,229 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6464646464646465].
2023-08-22 05:46:56,229 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6464646464646465].
2023-08-22 05:47:05,224 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.14141414141414144, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.18181818181818182 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:05,224 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.14141414141414144, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.18181818181818182 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:11,526 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.27272727272727276].
2023-08-22 05:47:11,527 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.27272727272727276].
2023-08-22 05:47:14,483 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:14,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:22,391 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:22,391 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:31,682 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:31,682 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:31,811 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:31,811 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:34,892 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:34,892 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:51,681 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:51,681 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:51,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:51,864 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:55,138 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:47:55,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:48:11,453 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:48:11,454 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:48:11,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:48:11,746 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:48:15,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:48:15,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:48:31,529 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:48:31,529 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:48:31,953 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:48:31,953 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:48:51,103 INFO: Applying selection operators for generation 33.
2023-08-22 05:48:51,104 INFO: Applying genetic operators for generation 33.
2023-08-22 05:48:51,109 INFO: Evaluating fitness for for generation 33.
2023-08-22 05:48:51,109 INFO: Will evaluate fitness for 56 individuals.
2023-08-22 05:48:51,650 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5757575757575758 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6464646464646465].
2023-08-22 05:48:51,650 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5757575757575758 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6464646464646465].
2023-08-22 05:48:51,676 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:48:51,677 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:48:51,678 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.05050505050505051, momentum=0.9494949494949496 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.8585858585858587].
2023-08-22 05:48:51,678 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.05050505050505051, momentum=0.9494949494949496 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.8585858585858587].
2023-08-22 05:48:51,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8585858585858587].
2023-08-22 05:48:51,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8585858585858587].
2023-08-22 05:49:11,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:11,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:18,169 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:18,169 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:18,767 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:18,767 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:32,178 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:32,178 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:33,076 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9494949494949496, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.12121212121212122].
2023-08-22 05:49:33,076 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9494949494949496, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.12121212121212122].
2023-08-22 05:49:38,271 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:38,271 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:38,902 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:38,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:52,237 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:52,238 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:58,586 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:58,586 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:58,950 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.26262626262626265, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.8585858585858587].
2023-08-22 05:49:58,951 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.26262626262626265, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.8585858585858587].
2023-08-22 05:49:59,190 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:49:59,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:50:13,086 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:50:13,086 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:50:18,716 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:50:18,717 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:50:19,466 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:50:19,466 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:50:33,328 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.15151515151515152 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.8585858585858587].
2023-08-22 05:50:33,328 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.15151515151515152 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.8585858585858587].
2023-08-22 05:50:38,802 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.0 ,learning_rate_power=-1.0 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.8585858585858587].
2023-08-22 05:50:38,802 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.0 ,learning_rate_power=-1.0 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.8585858585858587].
2023-08-22 05:50:39,727 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:50:39,728 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:50:41,371 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:50:41,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:50:58,954 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.8585858585858587].
2023-08-22 05:50:58,954 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.8585858585858587].
2023-08-22 05:50:59,370 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:50:59,370 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:50:59,824 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:50:59,824 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:51:01,558 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.13131313131313133 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:51:01,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.13131313131313133 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:51:19,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:51:19,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:51:19,831 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:51:19,831 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:51:26,698 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9090909090909092, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.6767676767676768 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8585858585858587].
2023-08-22 05:51:26,698 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9090909090909092, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.6767676767676768 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8585858585858587].
2023-08-22 05:51:27,797 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:51:27,797 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:51:40,233 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5757575757575758 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7373737373737375].
2023-08-22 05:51:40,233 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5757575757575758 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.7373737373737375].
2023-08-22 05:51:40,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:51:40,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:51:47,782 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.9696969696969697].
2023-08-22 05:51:47,782 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.9696969696969697].
2023-08-22 05:51:53,358 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.686868686868687, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7373737373737375 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.9292929292929294].
2023-08-22 05:51:53,358 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.686868686868687, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7373737373737375 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.9292929292929294].
2023-08-22 05:51:58,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:51:58,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:00,802 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:00,802 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:14,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:14,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:18,859 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:18,860 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:19,938 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:19,939 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:20,925 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.009798000000000001 ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.05050505050505051 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.797979797979798].
2023-08-22 05:52:20,925 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.009798000000000001 ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.05050505050505051 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.797979797979798].
2023-08-22 05:52:34,897 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:34,897 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:38,782 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:38,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:40,804 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.37373737373737376 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.4141414141414142].
2023-08-22 05:52:40,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.37373737373737376 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.4141414141414142].
2023-08-22 05:52:47,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:47,304 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:55,050 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:55,050 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:58,769 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:52:58,770 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:06,554 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:06,554 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:08,155 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:08,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:15,148 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:15,148 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:20,684 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:20,684 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:26,692 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:26,692 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:28,438 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:28,438 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:40,918 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:40,918 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:48,346 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:53:48,346 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:54:00,798 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:54:00,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:54:08,212 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.08080808080808081 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:54:08,213 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.08080808080808081 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:54:34,387 INFO: Applying selection operators for generation 34.
2023-08-22 05:54:34,389 INFO: Applying genetic operators for generation 34.
2023-08-22 05:54:34,394 INFO: Evaluating fitness for for generation 34.
2023-08-22 05:54:34,394 INFO: Will evaluate fitness for 70 individuals.
2023-08-22 05:54:34,964 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:54:34,964 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:54:35,111 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:54:35,111 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:54:35,120 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:54:35,120 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:54:35,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.8585858585858587 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.11111111111111112].
2023-08-22 05:54:35,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.8585858585858587 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.11111111111111112].
2023-08-22 05:54:55,318 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.6767676767676768 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.43434343434343436].
2023-08-22 05:54:55,319 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.6767676767676768 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.43434343434343436].
2023-08-22 05:54:55,824 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.8282828282828284, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.001819 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9292929292929294 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.8585858585858587].
2023-08-22 05:54:55,824 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.8282828282828284, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.001819 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9292929292929294 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.8585858585858587].
2023-08-22 05:54:55,825 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:54:55,825 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:02,542 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:02,542 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:15,990 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:15,990 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:17,562 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:17,563 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:22,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:22,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:22,802 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:22,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:36,043 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:36,043 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:37,666 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:37,666 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:42,501 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:42,501 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:42,894 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:42,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:56,139 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:56,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:57,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:55:57,625 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:02,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4646464646464647 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 05:56:02,873 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4646464646464647 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 05:56:11,122 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:11,122 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:16,054 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.20202020202020204 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.9191919191919192 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.43434343434343436].
2023-08-22 05:56:16,055 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.20202020202020204 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.9191919191919192 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.43434343434343436].
2023-08-22 05:56:18,419 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:18,420 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:29,425 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.22222222222222224 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.494949494949495].
2023-08-22 05:56:29,425 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.22222222222222224 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.494949494949495].
2023-08-22 05:56:32,272 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:32,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:38,818 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:38,818 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:43,114 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:43,114 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:52,546 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:52,546 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:55,936 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:55,936 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:58,966 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:56:58,966 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:03,371 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:03,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:12,769 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5858585858585859 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5252525252525253].
2023-08-22 05:57:12,770 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5858585858585859 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.5252525252525253].
2023-08-22 05:57:16,049 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:16,050 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:18,992 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:18,993 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:23,647 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:23,648 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:36,194 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:36,194 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:38,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:38,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:39,608 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.25252525252525254 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.18181818181818182].
2023-08-22 05:57:39,609 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.25252525252525254 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.18181818181818182].
2023-08-22 05:57:43,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:43,757 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:56,215 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:56,216 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:59,808 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:57:59,808 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:04,766 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:04,766 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:06,482 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:06,483 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:17,010 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:17,010 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:20,156 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:20,157 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:26,925 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.33333333333333337, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.696969696969697 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8585858585858587].
2023-08-22 05:58:26,926 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.33333333333333337, momentum=0.30303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.696969696969697 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8585858585858587].
2023-08-22 05:58:31,284 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.5757575757575758].
2023-08-22 05:58:31,284 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.5757575757575758].
2023-08-22 05:58:37,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:37,036 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:40,420 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:40,420 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:47,006 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:47,006 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:57,096 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:57,097 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:57,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:58:57,140 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:00,743 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:00,743 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:07,028 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:07,028 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:17,184 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:17,184 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:17,189 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.6767676767676768 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8585858585858587].
2023-08-22 05:59:17,190 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.6767676767676768 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8585858585858587].
2023-08-22 05:59:21,492 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:21,492 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:28,002 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:28,003 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:38,039 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:38,040 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:41,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:41,931 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:44,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:44,277 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:48,176 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.06060606060606061 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.8585858585858587].
2023-08-22 05:59:48,176 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.06060606060606061 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.8585858585858587].
2023-08-22 05:59:58,224 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6161616161616162, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4646464646464647 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 05:59:58,224 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6161616161616162, momentum=0.43434343434343436 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4646464646464647 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.19191919191919193 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:00:14,669 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006970000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008585858727272726 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.5656565656565657].
2023-08-22 06:00:14,670 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006970000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008585858727272726 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.5656565656565657].
2023-08-22 06:00:23,550 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.18181818181818182, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.494949494949495 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.3535353535353536].
2023-08-22 06:00:23,550 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.18181818181818182, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.494949494949495 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.3535353535353536].
2023-08-22 06:00:41,260 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:00:41,260 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:00:50,912 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.06060606060606061, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6767676767676768 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.7474747474747475].
2023-08-22 06:00:50,913 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.06060606060606061, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6767676767676768 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.7474747474747475].
2023-08-22 06:01:02,241 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:01:02,242 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:01:18,787 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:01:18,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:01:22,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:01:22,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:01:38,951 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:01:38,952 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:01:58,304 INFO: Applying selection operators for generation 35.
2023-08-22 06:01:58,305 INFO: Applying genetic operators for generation 35.
2023-08-22 06:01:58,311 INFO: Evaluating fitness for for generation 35.
2023-08-22 06:01:58,311 INFO: Will evaluate fitness for 69 individuals.
2023-08-22 06:01:58,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:01:58,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:01:58,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=1.0].
2023-08-22 06:01:58,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.37373737373737376, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=1.0].
2023-08-22 06:01:58,916 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:01:58,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:01:58,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.27272727272727276 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 06:01:58,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.08080808080808081, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.27272727272727276 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 06:02:18,808 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.33333333333333337].
2023-08-22 06:02:18,809 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.33333333333333337].
2023-08-22 06:02:18,865 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:02:18,865 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:02:18,880 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:02:18,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:02:24,268 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7676767676767677 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6767676767676768 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.888888888888889].
2023-08-22 06:02:24,268 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7676767676767677 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6767676767676768 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.888888888888889].
2023-08-22 06:02:38,205 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:02:38,205 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:02:38,892 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.17171717171717174, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=True ,weight_decay=0.001314 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.5353535353535354 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.8686868686868687].
2023-08-22 06:02:38,892 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.17171717171717174, momentum=0.06060606060606061 ,nesterov=True ,amsgrad=True ,weight_decay=0.001314 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.5353535353535354 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.8686868686868687].
2023-08-22 06:02:38,934 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7676767676767677, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.8585858585858587].
2023-08-22 06:02:38,934 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7676767676767677, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.8585858585858587].
2023-08-22 06:02:48,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.07070707070707072].
2023-08-22 06:02:48,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.07070707070707072].
2023-08-22 06:02:59,109 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:02:59,109 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:02:59,149 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0019200000000000003 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.8989898989898991].
2023-08-22 06:02:59,149 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0019200000000000003 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.8989898989898991].
2023-08-22 06:03:05,626 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:05,626 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:16,100 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:16,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:19,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:19,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:26,021 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:26,022 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:26,025 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:26,025 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:36,940 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:36,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:39,425 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:39,425 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:46,124 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:46,124 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:46,135 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:46,136 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:57,092 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:57,093 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:03:59,548 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5151515151515152 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.9797979797979799].
2023-08-22 06:03:59,549 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5151515151515152 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.9797979797979799].
2023-08-22 06:04:06,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:04:06,070 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:04:06,271 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:04:06,271 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:04:17,099 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.030303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4646464646464647].
2023-08-22 06:04:17,099 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.030303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.4646464646464647].
2023-08-22 06:04:26,321 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.32323232323232326 ,rho=0.6767676767676768 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.8585858585858587].
2023-08-22 06:04:26,321 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.32323232323232326 ,rho=0.6767676767676768 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.8585858585858587].
2023-08-22 06:04:26,912 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.6060606060606061].
2023-08-22 06:04:26,912 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.6060606060606061].
2023-08-22 06:04:26,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:04:26,929 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:04:42,998 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:04:42,998 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:04:46,887 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8585858585858587].
2023-08-22 06:04:46,887 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.8585858585858587].
2023-08-22 06:04:47,398 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:04:47,399 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:04:53,619 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.2828282828282829 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.8585858585858587].
2023-08-22 06:04:53,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.2828282828282829 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.8585858585858587].
2023-08-22 06:05:03,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:03,898 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:07,757 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.21212121212121213 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.25252525252525254 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:07,757 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.21212121212121213 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.25252525252525254 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:13,484 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:13,485 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:20,727 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:20,728 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:24,025 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:24,025 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:33,617 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:33,618 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:35,196 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:35,196 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:40,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.008687 ,use_ema=False ,ema_momentum=0.8080808080808082 ,rho=0.24242424242424243 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.8585858585858587].
2023-08-22 06:05:40,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.008687 ,use_ema=False ,ema_momentum=0.8080808080808082 ,rho=0.24242424242424243 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.8585858585858587].
2023-08-22 06:05:44,034 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:44,034 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:53,563 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:53,564 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:55,306 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:05:55,306 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:04,105 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:04,105 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:07,731 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:07,731 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:14,380 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:14,380 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:16,446 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.98989898989899 ,rho=0.8787878787878789 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.8585858585858587].
2023-08-22 06:06:16,446 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.98989898989899 ,rho=0.8787878787878789 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.8585858585858587].
2023-08-22 06:06:24,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:24,938 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:28,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:28,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:34,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:34,596 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:42,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:42,799 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:45,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.8383838383838385 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8787878787878789].
2023-08-22 06:06:45,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.8383838383838385 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8787878787878789].
2023-08-22 06:06:48,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:48,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:06:54,581 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9595959595959597 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8585858585858587].
2023-08-22 06:06:54,581 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=0.004344000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9595959595959597 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8585858585858587].
2023-08-22 06:07:02,909 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.14141414141414144].
2023-08-22 06:07:02,909 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.14141414141414144].
2023-08-22 06:07:08,737 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:07:08,737 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:07:11,562 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.15151515151515152, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.8585858585858587].
2023-08-22 06:07:11,563 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.15151515151515152, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.8585858585858587].
2023-08-22 06:07:19,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:07:19,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:07:28,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:07:28,861 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:07:40,732 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:07:40,732 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:07:49,754 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:07:49,755 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:08:00,632 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.5555555555555556 ,epsilon=0.0009696969727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.8585858585858587].
2023-08-22 06:08:00,632 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.5555555555555556 ,epsilon=0.0009696969727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.8585858585858587].
2023-08-22 06:08:09,703 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:08:09,704 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:08:26,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:08:26,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:08:29,565 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:08:29,565 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:08:45,778 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:08:45,778 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:05,680 INFO: Applying selection operators for generation 36.
2023-08-22 06:09:05,681 INFO: Applying genetic operators for generation 36.
2023-08-22 06:09:05,687 INFO: Evaluating fitness for for generation 36.
2023-08-22 06:09:05,687 INFO: Will evaluate fitness for 59 individuals.
2023-08-22 06:09:06,268 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:06,268 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:06,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005354000000000001 ,use_ema=False ,ema_momentum=0.8080808080808082 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.8585858585858587].
2023-08-22 06:09:06,277 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005354000000000001 ,use_ema=False ,ema_momentum=0.8080808080808082 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.8585858585858587].
2023-08-22 06:09:06,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=True ,weight_decay=0.008384 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.8585858585858587].
2023-08-22 06:09:06,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=True ,weight_decay=0.008384 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.8585858585858587].
2023-08-22 06:09:06,305 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:06,305 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:26,052 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:26,052 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:26,434 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.26262626262626265, momentum=0.8989898989898991 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8585858585858587].
2023-08-22 06:09:26,434 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.26262626262626265, momentum=0.8989898989898991 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8585858585858587].
2023-08-22 06:09:27,351 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:27,351 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:32,465 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:32,465 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:46,811 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:46,811 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:47,602 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:47,602 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:52,338 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:52,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:53,403 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:09:53,403 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:10:07,084 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:10:07,085 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:10:07,783 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:10:07,783 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:10:12,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.3434343434343435 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:10:12,412 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.3434343434343435 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:10:13,487 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8383838383838385].
2023-08-22 06:10:13,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8383838383838385].
2023-08-22 06:10:27,117 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.26262626262626265 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.13131313131313133 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.8585858585858587].
2023-08-22 06:10:27,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.26262626262626265 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.13131313131313133 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.8585858585858587].
2023-08-22 06:10:38,616 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:10:38,616 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:10:39,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.24242424242424243 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.686868686868687].
2023-08-22 06:10:39,451 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.24242424242424243 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.686868686868687].
2023-08-22 06:10:51,362 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8282828282828284, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.5252525252525253 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.5858585858585859].
2023-08-22 06:10:51,362 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8282828282828284, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.5252525252525253 ,epsilon=0.0002828283545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.5858585858585859].
2023-08-22 06:10:53,293 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.8585858585858587].
2023-08-22 06:10:53,293 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.8585858585858587].
2023-08-22 06:10:59,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:10:59,412 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:06,217 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:06,218 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:18,784 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:18,784 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:19,684 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:19,684 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:20,781 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9797979797979799, momentum=0.0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.8585858585858587].
2023-08-22 06:11:20,782 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9797979797979799, momentum=0.0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.8585858585858587].
2023-08-22 06:11:26,222 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:26,222 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:38,753 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:38,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:39,623 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:39,624 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:47,055 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:47,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:58,885 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:58,885 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:59,740 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:11:59,740 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:02,832 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.8383838383838385 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:02,832 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.8383838383838385 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:07,116 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:07,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:20,599 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.5151515151515152 ,epsilon=0.0007070707363636364 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 06:12:20,599 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.5151515151515152 ,epsilon=0.0007070707363636364 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 06:12:24,969 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:24,969 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:27,162 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:27,162 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:28,952 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.494949494949495].
2023-08-22 06:12:28,953 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.7373737373737375 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.494949494949495].
2023-08-22 06:12:45,967 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:45,967 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:47,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:47,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:47,288 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:47,289 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:50,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:12:50,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:07,241 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.48484848484848486 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.8585858585858587].
2023-08-22 06:13:07,241 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.48484848484848486 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.8585858585858587].
2023-08-22 06:13:07,661 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:07,661 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:07,963 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:07,963 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:11,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.4646464646464647 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:11,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.4646464646464647 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:27,531 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:27,531 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:27,599 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:27,599 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:27,868 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:27,868 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:38,326 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.17171717171717174, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:38,326 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.17171717171717174, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:47,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.6767676767676768 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.7777777777777778].
2023-08-22 06:13:47,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.6767676767676768 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.7777777777777778].
2023-08-22 06:13:47,488 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:47,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:47,760 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:13:47,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:07,518 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.030303030303030304 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.8585858585858587].
2023-08-22 06:14:07,518 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.5656565656565657 ,nesterov=True ,amsgrad=False ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.23232323232323235 ,rho=0.030303030303030304 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.8585858585858587].
2023-08-22 06:14:08,719 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:08,720 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:14,823 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:14,824 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:28,815 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:28,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:34,969 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:34,969 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:36,677 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:36,678 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:56,098 INFO: Applying selection operators for generation 37.
2023-08-22 06:14:56,099 INFO: Applying genetic operators for generation 37.
2023-08-22 06:14:56,105 INFO: Evaluating fitness for for generation 37.
2023-08-22 06:14:56,105 INFO: Will evaluate fitness for 69 individuals.
2023-08-22 06:14:56,677 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:56,678 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:56,680 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:56,681 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:56,692 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:56,692 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:56,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:14:56,707 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:16,400 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:16,401 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:16,521 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:16,521 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:16,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:16,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:16,598 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:16,598 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:36,395 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:36,395 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:36,489 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:36,489 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:36,967 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.6767676767676768 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:36,967 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.6767676767676768 ,epsilon=0.0007575757818181818 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:37,344 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:37,345 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:56,920 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.26262626262626265 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.0 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.5757575757575758].
2023-08-22 06:15:56,920 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.26262626262626265 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.0 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.5757575757575758].
2023-08-22 06:15:57,485 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:57,485 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:58,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:15:58,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:16:03,440 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8585858585858587].
2023-08-22 06:16:03,440 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8585858585858587].
2023-08-22 06:16:17,691 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.12121212121212122].
2023-08-22 06:16:17,692 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.38383838383838387, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.12121212121212122].
2023-08-22 06:16:18,324 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:16:18,324 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:16:24,052 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.8585858585858587].
2023-08-22 06:16:24,052 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.8585858585858587].
2023-08-22 06:16:37,802 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:16:37,802 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:16:38,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:16:38,408 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:16:39,000 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:16:39,000 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:16:44,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:16:44,030 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:16:57,729 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:16:57,730 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:16:58,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.8585858585858587].
2023-08-22 06:16:58,278 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.8585858585858587].
2023-08-22 06:16:58,912 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:16:58,912 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:03,871 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008384 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:03,871 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.25252525252525254, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.008384 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:18,638 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:18,638 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:19,061 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:19,061 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:24,470 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:24,470 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:26,430 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:26,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:38,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:38,895 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:39,023 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:39,023 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:44,485 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008080808272727272 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.98989898989899].
2023-08-22 06:17:44,486 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008080808272727272 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.98989898989899].
2023-08-22 06:17:46,657 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.797979797979798 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.31313131313131315 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.08080808080808081].
2023-08-22 06:17:46,657 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.797979797979798 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.31313131313131315 ,epsilon=0.000676767709090909 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.08080808080808081].
2023-08-22 06:17:58,953 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6060606060606061 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.8585858585858587].
2023-08-22 06:17:58,953 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6060606060606061 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.8585858585858587].
2023-08-22 06:17:59,798 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:17:59,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:18:10,643 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:18:10,643 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:18:19,885 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:18:19,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:18:25,782 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:18:25,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:18:29,464 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:18:29,464 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:18:30,731 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.15151515151515152 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.5757575757575758].
2023-08-22 06:18:30,731 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.15151515151515152 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.5757575757575758].
2023-08-22 06:18:39,825 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:18:39,825 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:18:46,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:18:46,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:18:49,438 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.8585858585858587].
2023-08-22 06:18:49,438 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.8585858585858587].
2023-08-22 06:18:51,596 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.12121212121212122 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.48484848484848486].
2023-08-22 06:18:51,596 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.12121212121212122 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.48484848484848486].
2023-08-22 06:18:59,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:18:59,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:19:06,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.8585858585858587].
2023-08-22 06:19:06,931 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.8585858585858587].
2023-08-22 06:19:08,754 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:19:08,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:19:19,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:19:19,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:19:20,459 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.9595959595959597 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.26262626262626265 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.13131313131313133].
2023-08-22 06:19:20,459 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.9595959595959597 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8989898989898991 ,rho=0.26262626262626265 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.13131313131313133].
2023-08-22 06:19:29,638 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:19:29,638 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:19:33,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:19:33,894 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:19:39,282 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:19:39,283 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:19:42,964 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:19:42,964 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:19:49,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=0.001213 ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.8585858585858587 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.7070707070707072].
2023-08-22 06:19:49,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.08080808080808081 ,nesterov=True ,amsgrad=True ,weight_decay=0.001213 ,use_ema=False ,ema_momentum=0.17171717171717174 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.8585858585858587 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.7070707070707072].
2023-08-22 06:19:53,943 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.8282828282828284, momentum=0.42424242424242425 ,nesterov=False ,amsgrad=True ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.36363636363636365 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6161616161616162].
2023-08-22 06:19:53,943 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.8282828282828284, momentum=0.42424242424242425 ,nesterov=False ,amsgrad=True ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.686868686868687 ,rho=0.36363636363636365 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6161616161616162].
2023-08-22 06:19:59,419 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.4040404040404041].
2023-08-22 06:19:59,420 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.4040404040404041].
2023-08-22 06:20:02,900 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.008687 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7373737373737375 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6060606060606061].
2023-08-22 06:20:02,900 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.008687 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7373737373737375 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8787878787878789 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.6060606060606061].
2023-08-22 06:20:09,713 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:20:09,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:20:17,123 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:20:17,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:20:22,665 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.8080808080808082 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8585858585858587].
2023-08-22 06:20:22,665 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6060606060606061 ,rho=0.8080808080808082 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.8585858585858587].
2023-08-22 06:20:37,775 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5656565656565657 ,rho=0.6767676767676768 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.8585858585858587].
2023-08-22 06:20:37,775 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5656565656565657 ,rho=0.6767676767676768 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.4646464646464647 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.8585858585858587].
2023-08-22 06:20:49,165 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:20:49,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:20:56,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.6767676767676768 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:20:56,970 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.6767676767676768 ,epsilon=0.0005454545909090909 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:21:09,121 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:21:09,122 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:21:16,679 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:21:16,679 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:21:28,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:21:28,873 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:21:36,424 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:21:36,424 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:21:56,033 INFO: Applying selection operators for generation 38.
2023-08-22 06:21:56,035 INFO: Applying genetic operators for generation 38.
2023-08-22 06:21:56,039 INFO: Evaluating fitness for for generation 38.
2023-08-22 06:21:56,039 INFO: Will evaluate fitness for 62 individuals.
2023-08-22 06:21:56,605 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.888888888888889].
2023-08-22 06:21:56,606 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.21212121212121213, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.888888888888889].
2023-08-22 06:21:56,620 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:21:56,620 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:21:56,643 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:21:56,643 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:21:56,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:21:56,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:16,612 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:16,612 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:17,446 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.4040404040404041, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.8585858585858587].
2023-08-22 06:22:17,446 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.4040404040404041, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.8585858585858587].
2023-08-22 06:22:17,595 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:17,595 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:24,067 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:24,067 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:35,614 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:35,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:36,653 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.8585858585858587].
2023-08-22 06:22:36,653 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.8585858585858587].
2023-08-22 06:22:37,491 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:37,491 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:44,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:44,318 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:55,699 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:55,699 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:55,734 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:55,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:57,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:22:57,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:04,459 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:04,459 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:15,546 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:15,546 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:15,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:15,707 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:17,340 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:17,340 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:24,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:24,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:35,719 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:35,720 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:36,223 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:36,223 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:37,210 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:37,210 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:44,485 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:44,485 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:56,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:56,202 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:56,706 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:56,707 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:58,055 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:23:58,055 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:24:05,477 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.09090909090909091 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8585858585858587].
2023-08-22 06:24:05,477 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.09090909090909091 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8585858585858587].
2023-08-22 06:24:16,211 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0.4141414141414142 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.686868686868687 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.8585858585858587].
2023-08-22 06:24:16,211 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.22222222222222224, momentum=0.4141414141414142 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.686868686868687 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.8585858585858587].
2023-08-22 06:24:16,909 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:24:16,909 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:24:18,223 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:24:18,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:24:25,721 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:24:25,722 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:24:37,172 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:24:37,172 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:24:38,308 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6161616161616162, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=False ,weight_decay=0.004445000000000001 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.5454545454545455 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.8585858585858587].
2023-08-22 06:24:38,308 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6161616161616162, momentum=0.36363636363636365 ,nesterov=True ,amsgrad=False ,weight_decay=0.004445000000000001 ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.5454545454545455 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.8585858585858587].
2023-08-22 06:24:42,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:24:42,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:24:45,980 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7070707070707072].
2023-08-22 06:24:45,981 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7070707070707072].
2023-08-22 06:24:57,265 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.8585858585858587].
2023-08-22 06:24:57,265 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.8585858585858587].
2023-08-22 06:24:58,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:24:58,071 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:25:02,210 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:25:02,211 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:25:13,783 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:25:13,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:25:16,660 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:25:16,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:25:18,829 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:25:18,830 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:25:23,011 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.4444444444444445 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=1.0].
2023-08-22 06:25:23,012 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.4444444444444445 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=1.0].
2023-08-22 06:25:34,780 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:25:34,781 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:25:37,612 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.16161616161616163, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.10101010101010102 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.8585858585858587].
2023-08-22 06:25:37,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.16161616161616163, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.10101010101010102 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.8585858585858587].
2023-08-22 06:25:39,013 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.19191919191919193, momentum=0.98989898989899 ,nesterov=True ,amsgrad=True ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6767676767676768 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.494949494949495 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.5858585858585859].
2023-08-22 06:25:39,013 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.19191919191919193, momentum=0.98989898989899 ,nesterov=True ,amsgrad=True ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6767676767676768 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.494949494949495 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.5858585858585859].
2023-08-22 06:25:50,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.08080808080808081 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.04040404040404041].
2023-08-22 06:25:50,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7272727272727273 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.08080808080808081 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.04040404040404041].
2023-08-22 06:25:55,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:25:55,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:05,072 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:05,073 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:15,191 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:15,192 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:17,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:17,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:22,123 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:22,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:25,297 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:25,297 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:35,194 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:35,194 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:37,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:37,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:42,216 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:42,217 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:45,438 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:45,438 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:55,179 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:55,180 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:26:57,353 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7676767676767677, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.8484848484848485 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.8585858585858587].
2023-08-22 06:26:57,353 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7676767676767677, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.8484848484848485 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.8585858585858587].
2023-08-22 06:27:06,526 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:06,526 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:16,020 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:16,020 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:17,115 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:17,116 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:36,334 INFO: Applying selection operators for generation 39.
2023-08-22 06:27:36,335 INFO: Applying genetic operators for generation 39.
2023-08-22 06:27:36,341 INFO: Evaluating fitness for for generation 39.
2023-08-22 06:27:36,341 INFO: Will evaluate fitness for 58 individuals.
2023-08-22 06:27:36,906 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.494949494949495 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.8585858585858587].
2023-08-22 06:27:36,906 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.494949494949495 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.8585858585858587].
2023-08-22 06:27:36,933 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:36,933 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:36,939 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:36,940 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:36,950 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:36,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:56,017 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:56,017 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:56,856 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:56,856 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:57,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:27:57,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:28:03,612 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.36363636363636365 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8585858585858587].
2023-08-22 06:28:03,612 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.36363636363636365 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8585858585858587].
2023-08-22 06:28:16,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5454545454545455, momentum=0.595959595959596 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.26262626262626265 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8585858585858587].
2023-08-22 06:28:16,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5454545454545455, momentum=0.595959595959596 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.26262626262626265 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8585858585858587].
2023-08-22 06:28:16,804 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:28:16,804 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:28:17,061 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:28:17,061 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:28:23,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:28:23,630 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:28:36,764 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.010101010101010102 ,rho=0.6767676767676768 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.8585858585858587].
2023-08-22 06:28:36,765 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.010101010101010102 ,rho=0.6767676767676768 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.9797979797979799 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.8585858585858587].
2023-08-22 06:28:37,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:28:37,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:28:43,688 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:28:43,688 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.27272727272727276, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:28:43,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9696969696969697, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.8585858585858587].
2023-08-22 06:28:43,954 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9696969696969697, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.8585858585858587].
2023-08-22 06:28:58,034 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.04040404040404041 ,rho=0.6767676767676768 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.05050505050505051].
2023-08-22 06:28:58,034 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.04040404040404041 ,rho=0.6767676767676768 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.5757575757575758 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.05050505050505051].
2023-08-22 06:29:03,195 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.6767676767676768 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.3434343434343435].
2023-08-22 06:29:03,195 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.6767676767676768 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.3434343434343435].
2023-08-22 06:29:04,266 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.4141414141414142 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.6161616161616162].
2023-08-22 06:29:04,266 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.4141414141414142 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.6161616161616162].
2023-08-22 06:29:11,660 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:29:11,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:29:17,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:29:17,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:29:30,017 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:29:30,017 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:29:31,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:29:31,774 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:29:31,826 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.4646464646464647 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.19191919191919193].
2023-08-22 06:29:31,826 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.4646464646464647 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.19191919191919193].
2023-08-22 06:29:37,927 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:29:37,927 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:29:50,088 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:29:50,089 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:29:51,870 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:29:51,870 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:29:58,218 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8585858585858587].
2023-08-22 06:29:58,219 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8585858585858587].
2023-08-22 06:29:58,984 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.9595959595959597 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.19191919191919193].
2023-08-22 06:29:58,985 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.9595959595959597 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.19191919191919193].
2023-08-22 06:30:10,057 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:30:10,057 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:30:11,941 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:30:11,941 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:30:20,956 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:30:20,957 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:30:24,580 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:30:24,580 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:30:32,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:30:32,937 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:30:37,903 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7373737373737375, momentum=0.6767676767676768 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8383838383838385].
2023-08-22 06:30:37,903 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7373737373737375, momentum=0.6767676767676768 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.6767676767676768 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8383838383838385].
2023-08-22 06:30:41,569 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:30:41,569 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:30:45,612 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9696969696969697 ,epsilon=0.001 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.3434343434343435].
2023-08-22 06:30:45,612 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9696969696969697 ,epsilon=0.001 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.3434343434343435].
2023-08-22 06:30:53,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:30:53,126 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:31:01,945 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.21212121212121213 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.20202020202020204].
2023-08-22 06:31:01,945 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.21212121212121213 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.20202020202020204].
2023-08-22 06:31:04,486 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.5757575757575758 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8080808080808082 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8585858585858587].
2023-08-22 06:31:04,486 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.5757575757575758 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8080808080808082 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8585858585858587].
2023-08-22 06:31:13,383 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:31:13,383 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:31:13,570 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:31:13,570 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:31:24,633 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:31:24,634 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:31:28,471 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.09090909090909091 ,rho=0.6767676767676768 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.8585858585858587].
2023-08-22 06:31:28,471 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5555555555555556, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.09090909090909091 ,rho=0.6767676767676768 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.8585858585858587].
2023-08-22 06:31:33,301 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5858585858585859].
2023-08-22 06:31:33,301 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=True ,ema_momentum=0.9797979797979799 ,rho=0.030303030303030304 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5858585858585859].
2023-08-22 06:31:33,585 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:31:33,585 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:31:44,684 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:31:44,684 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:31:53,706 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:31:53,706 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:31:55,662 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.030303030303030304 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.8585858585858587].
2023-08-22 06:31:55,662 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.030303030303030304 ,epsilon=0.00024242431818181817 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.8585858585858587].
2023-08-22 06:31:55,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.15151515151515152].
2023-08-22 06:31:55,713 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.15151515151515152].
2023-08-22 06:32:04,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:32:04,644 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:32:14,623 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:32:14,623 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:32:22,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:32:22,746 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:32:25,488 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:32:25,489 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:32:34,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:32:34,791 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:32:42,750 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:32:42,750 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:32:54,870 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:32:54,871 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:33:02,763 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 06:33:02,764 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 06:33:21,952 INFO: Applying selection operators for generation 40.
2023-08-22 06:33:21,953 INFO: Applying genetic operators for generation 40.
2023-08-22 06:33:21,961 INFO: Evaluating fitness for for generation 40.
2023-08-22 06:33:21,961 INFO: Will evaluate fitness for 74 individuals.
2023-08-22 06:33:22,536 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:33:22,537 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:33:22,541 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:33:22,542 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6464646464646465, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.797979797979798 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.4040404040404041].
2023-08-22 06:33:22,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:33:22,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:33:22,581 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.8585858585858587].
2023-08-22 06:33:22,581 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.8585858585858587].
2023-08-22 06:33:42,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:33:42,414 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:33:42,590 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8686868686868687, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0035360000000000005 ,use_ema=False ,ema_momentum=0.787878787878788 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.18181818181818182].
2023-08-22 06:33:42,590 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8686868686868687, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0035360000000000005 ,use_ema=False ,ema_momentum=0.787878787878788 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.18181818181818182].
2023-08-22 06:33:50,428 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:33:50,428 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:33:51,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.14141414141414144 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.8585858585858587].
2023-08-22 06:33:51,422 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.14141414141414144 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.8585858585858587].
2023-08-22 06:34:03,434 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.4141414141414142].
2023-08-22 06:34:03,434 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.6868686868686869 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.4141414141414142].
2023-08-22 06:34:04,867 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:34:04,867 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:34:10,794 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.3434343434343435 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.8585858585858587].
2023-08-22 06:34:10,795 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0.9292929292929294 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7070707070707072 ,rho=0.3434343434343435 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.8585858585858587].
2023-08-22 06:34:18,492 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0.2828282828282829 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:34:18,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0.2828282828282829 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:34:25,657 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:34:25,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:34:31,195 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.030303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.32323232323232326 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:34:31,195 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.030303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.32323232323232326 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:34:37,645 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:34:37,645 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:34:38,750 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6767676767676768 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8585858585858587].
2023-08-22 06:34:38,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6767676767676768 ,epsilon=0.0009292929363636363 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7575757575757577 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8585858585858587].
2023-08-22 06:34:45,775 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9191919191919192, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.6767676767676768 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.12121212121212122].
2023-08-22 06:34:45,775 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9191919191919192, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.6767676767676768 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.12121212121212122].
2023-08-22 06:34:57,629 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.36363636363636365 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.8585858585858587].
2023-08-22 06:34:57,629 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6161616161616162, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.36363636363636365 ,epsilon=0.00023232330909090908 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.8585858585858587].
2023-08-22 06:34:58,766 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:34:58,766 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:35:04,137 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7474747474747475, momentum=0.12121212121212122 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.7474747474747475 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.686868686868687 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.494949494949495].
2023-08-22 06:35:04,137 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7474747474747475, momentum=0.12121212121212122 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.7474747474747475 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.6161616161616162 ,beta_2=0.686868686868687 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.494949494949495].
2023-08-22 06:35:06,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.6767676767676768 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.37373737373737376].
2023-08-22 06:35:06,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4040404040404041, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0056570000000000014 ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.6767676767676768 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.37373737373737376].
2023-08-22 06:35:19,036 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:35:19,037 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:35:24,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:35:24,837 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:35:30,683 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.31313131313131315 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.4040404040404041].
2023-08-22 06:35:30,683 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.030303030303030304 ,rho=0.31313131313131315 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.4040404040404041].
2023-08-22 06:35:35,366 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:35:35,366 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:35:46,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:35:46,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:35:55,737 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8585858585858587].
2023-08-22 06:35:55,738 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8585858585858587].
2023-08-22 06:35:57,915 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:35:57,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:36:03,669 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:36:03,669 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:36:06,252 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.6767676767676768 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.8585858585858587].
2023-08-22 06:36:06,252 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.6767676767676768 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.8585858585858587].
2023-08-22 06:36:15,880 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8181818181818182 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 06:36:15,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8181818181818182 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 06:36:18,600 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:36:18,601 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:36:23,917 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.3535353535353536].
2023-08-22 06:36:23,917 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.3535353535353536].
2023-08-22 06:36:32,886 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:36:32,887 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:36:38,912 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:36:38,912 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:36:43,320 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.8585858585858587].
2023-08-22 06:36:43,320 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.5151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.8585858585858587].
2023-08-22 06:36:43,934 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:36:43,934 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:36:52,945 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7070707070707072 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.6565656565656566 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.8585858585858587].
2023-08-22 06:36:52,946 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7070707070707072 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.6565656565656566 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.8585858585858587].
2023-08-22 06:36:58,884 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.6767676767676768 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.05050505050505051 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8585858585858587].
2023-08-22 06:36:58,884 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.2828282828282829 ,rho=0.6767676767676768 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.05050505050505051 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8585858585858587].
2023-08-22 06:37:04,154 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:37:04,154 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:37:20,981 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.393939393939394 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6161616161616162].
2023-08-22 06:37:20,981 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.686868686868687, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.393939393939394 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.30303030303030304 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6161616161616162].
2023-08-22 06:37:25,191 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:37:25,191 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:37:26,758 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.7474747474747475 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-22 06:37:26,758 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.11111111111111112, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.7474747474747475 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-22 06:37:28,632 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:37:28,632 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:37:45,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:37:45,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:37:47,246 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.6767676767676768 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.7777777777777778].
2023-08-22 06:37:47,247 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.6767676767676768 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.7777777777777778].
2023-08-22 06:37:48,881 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:37:48,881 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:37:54,171 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:37:54,171 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:05,721 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:05,721 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:08,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.696969696969697].
2023-08-22 06:38:08,983 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.696969696969697].
2023-08-22 06:38:13,954 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:13,954 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:14,386 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:14,387 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:25,743 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.010101010101010102 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.8585858585858587].
2023-08-22 06:38:25,744 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.010101010101010102 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.8585858585858587].
2023-08-22 06:38:33,951 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:33,951 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:34,547 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:34,548 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:36,637 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:36,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:53,506 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:53,506 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:53,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:53,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:54,529 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:54,529 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:38:56,634 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6767676767676768].
2023-08-22 06:38:56,635 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6767676767676768].
2023-08-22 06:39:14,398 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:39:14,398 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:39:14,636 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.27272727272727276].
2023-08-22 06:39:14,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.27272727272727276].
2023-08-22 06:39:14,880 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:39:14,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:39:18,059 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6161616161616162, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6060606060606061 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.7373737373737375].
2023-08-22 06:39:18,059 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6161616161616162, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6060606060606061 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.7373737373737375].
2023-08-22 06:39:35,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:39:35,080 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:39:35,133 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:39:35,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:39:42,703 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:39:42,703 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:39:55,025 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:39:55,026 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:39:55,072 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:39:55,073 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:40:02,609 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9393939393939394 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.8585858585858587].
2023-08-22 06:40:02,609 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9393939393939394 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.8585858585858587].
2023-08-22 06:40:14,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:40:14,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:40:15,700 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:40:15,701 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:40:28,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:40:28,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:40:48,937 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:40:48,938 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:08,214 INFO: Applying selection operators for generation 41.
2023-08-22 06:41:08,215 INFO: Applying genetic operators for generation 41.
2023-08-22 06:41:08,220 INFO: Evaluating fitness for for generation 41.
2023-08-22 06:41:08,220 INFO: Will evaluate fitness for 67 individuals.
2023-08-22 06:41:08,788 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:08,788 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:08,835 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:08,835 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:08,844 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.33333333333333337].
2023-08-22 06:41:08,844 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.33333333333333337].
2023-08-22 06:41:08,895 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:08,895 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:28,678 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.393939393939394 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.29292929292929293].
2023-08-22 06:41:28,678 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.393939393939394 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.37373737373737376 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.29292929292929293].
2023-08-22 06:41:28,679 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:28,679 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:28,715 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.8282828282828284 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:28,715 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.8282828282828284 ,epsilon=0.0003030303727272727 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.7777777777777778 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:28,830 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:28,831 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:48,798 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:48,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:48,862 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:48,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:55,632 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:55,632 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:55,790 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:41:55,790 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:08,591 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:08,591 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:08,971 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.06060606060606061 ,rho=0.5454545454545455 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6161616161616162].
2023-08-22 06:42:08,971 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.06060606060606061 ,rho=0.5454545454545455 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.6161616161616162].
2023-08-22 06:42:15,553 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:15,553 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:15,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:15,874 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:28,557 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:28,557 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:35,987 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.8585858585858587].
2023-08-22 06:42:35,987 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.8585858585858587].
2023-08-22 06:42:36,433 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:36,433 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:36,883 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.13131313131313133, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.888888888888889 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4141414141414142].
2023-08-22 06:42:36,883 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.13131313131313133, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.888888888888889 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4141414141414142].
2023-08-22 06:42:49,276 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:49,276 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:55,958 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:55,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:56,644 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:42:56,644 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:03,866 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:03,867 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:09,417 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:09,418 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:16,639 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:16,639 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:16,761 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:16,761 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:24,161 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:24,162 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:29,439 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:29,440 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:36,629 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:36,629 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:36,988 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:36,989 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:44,340 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:44,340 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:49,393 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:49,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:57,132 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:57,133 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:57,524 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7373737373737375 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:43:57,524 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8383838383838385, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.7373737373737375 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:05,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:05,519 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:10,132 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6767676767676768 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 06:44:10,132 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6767676767676768 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 06:44:17,083 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:17,083 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:17,222 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:17,222 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:25,767 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:25,767 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:37,171 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:37,171 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:37,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:37,202 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:37,846 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:37,846 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:45,904 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.26262626262626265].
2023-08-22 06:44:45,905 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.2828282828282829, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7777777777777778 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.26262626262626265].
2023-08-22 06:44:57,133 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:57,133 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:57,738 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.36363636363636365].
2023-08-22 06:44:57,738 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.06060606060606061, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.36363636363636365].
2023-08-22 06:44:57,877 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:44:57,878 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:45:12,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:45:12,929 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:45:16,016 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.8585858585858587].
2023-08-22 06:45:16,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.5252525252525253 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.8585858585858587].
2023-08-22 06:45:17,095 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 06:45:17,095 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0011120000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=0.0008585858727272726 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 06:45:18,123 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:45:18,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:45:32,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:45:32,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:45:35,777 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:45:35,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:45:38,155 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:45:38,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:45:53,965 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:45:53,965 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:45:56,729 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.05050505050505051 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.4444444444444445].
2023-08-22 06:45:56,729 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.3434343434343435 ,rho=0.05050505050505051 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.4444444444444445].
2023-08-22 06:45:58,293 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:45:58,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:46:02,578 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:46:02,578 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:46:14,342 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.9191919191919192 ,epsilon=0.0008080808272727272 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.48484848484848486].
2023-08-22 06:46:14,342 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5858585858585859 ,rho=0.9191919191919192 ,epsilon=0.0008080808272727272 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.48484848484848486].
2023-08-22 06:46:19,254 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:46:19,255 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:46:22,824 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:46:22,825 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:46:24,246 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:46:24,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:46:39,769 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:46:39,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:46:44,334 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.37373737373737376, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=1.0 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:46:44,335 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.37373737373737376, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=1.0 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:46:59,867 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:46:59,867 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:47:19,666 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:47:19,666 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:47:39,412 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8686868686868687].
2023-08-22 06:47:39,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0009797979818181818 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.5555555555555556 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8686868686868687].
2023-08-22 06:48:06,368 INFO: Applying selection operators for generation 42.
2023-08-22 06:48:06,369 INFO: Applying genetic operators for generation 42.
2023-08-22 06:48:06,375 INFO: Evaluating fitness for for generation 42.
2023-08-22 06:48:06,375 INFO: Will evaluate fitness for 70 individuals.
2023-08-22 06:48:06,966 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:06,966 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:06,972 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.9696969696969697].
2023-08-22 06:48:06,973 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0024250000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=1.0 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.9696969696969697].
2023-08-22 06:48:07,135 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:07,135 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:07,182 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:07,182 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:26,804 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:26,805 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:26,920 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:26,920 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:27,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:27,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:27,540 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.3535353535353536 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 06:48:27,540 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8181818181818182 ,rho=0.3535353535353536 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 06:48:47,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.14141414141414144 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.8585858585858587].
2023-08-22 06:48:47,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.14141414141414144 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.8585858585858587].
2023-08-22 06:48:47,655 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:47,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:47,692 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:47,692 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:53,601 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:48:53,602 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:49:07,717 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:49:07,718 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:49:07,931 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8585858585858587].
2023-08-22 06:49:07,931 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8585858585858587].
2023-08-22 06:49:14,330 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.37373737373737376 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.8585858585858587].
2023-08-22 06:49:14,330 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.37373737373737376 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.8585858585858587].
2023-08-22 06:49:14,651 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:49:14,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:49:27,722 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:49:27,722 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:49:35,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:49:35,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:49:35,041 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:49:35,041 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:49:43,312 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.12121212121212122 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.4545454545454546].
2023-08-22 06:49:43,312 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.21212121212121213, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.12121212121212122 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.11111111111111112 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.4545454545454546].
2023-08-22 06:49:47,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:49:47,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:49:55,076 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8585858585858587].
2023-08-22 06:49:55,076 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8585858585858587].
2023-08-22 06:49:55,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:49:55,096 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:08,723 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:08,723 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:11,474 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.007273000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.8585858585858587].
2023-08-22 06:50:11,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.007273000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.8585858585858587].
2023-08-22 06:50:16,063 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:16,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:22,058 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:22,059 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:28,915 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:28,915 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:36,632 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.797979797979798 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4040404040404041 ,rho=0.30303030303030304 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.9292929292929294].
2023-08-22 06:50:36,632 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.797979797979798 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4040404040404041 ,rho=0.30303030303030304 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.9292929292929294].
2023-08-22 06:50:39,036 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:39,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:43,002 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:43,003 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:49,024 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:49,024 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:59,158 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:50:59,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:51:03,383 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=True ,weight_decay=0.006162000000000001 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.42424242424242425].
2023-08-22 06:51:03,383 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.595959595959596 ,nesterov=True ,amsgrad=True ,weight_decay=0.006162000000000001 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.42424242424242425].
2023-08-22 06:51:03,940 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6767676767676768 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.09090909090909091].
2023-08-22 06:51:03,940 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.6767676767676768 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.09090909090909091].
2023-08-22 06:51:09,062 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:51:09,062 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:51:19,904 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.13131313131313133].
2023-08-22 06:51:19,904 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.13131313131313133].
2023-08-22 06:51:25,946 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:51:25,946 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:51:29,035 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:51:29,035 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:51:30,347 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.6767676767676768 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.8585858585858587].
2023-08-22 06:51:30,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.27272727272727276, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.6767676767676768 ,epsilon=2.020211818181818e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.8585858585858587].
2023-08-22 06:51:46,040 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009293000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.30303030303030304 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.8585858585858587].
2023-08-22 06:51:46,040 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009293000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.30303030303030304 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.8585858585858587].
2023-08-22 06:51:46,984 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.15151515151515152 ,rho=0.6767676767676768 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.18181818181818182].
2023-08-22 06:51:46,984 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.15151515151515152 ,rho=0.6767676767676768 ,epsilon=0.0007676767909090908 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.18181818181818182].
2023-08-22 06:51:49,848 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:51:49,848 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:51:57,549 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:51:57,549 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:10,145 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.6767676767676768 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.13131313131313133 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.17171717171717174].
2023-08-22 06:52:10,145 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6363636363636365 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.6767676767676768 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.13131313131313133 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.17171717171717174].
2023-08-22 06:52:14,583 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:14,583 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:15,528 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.12121212121212122, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8383838383838385 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.19191919191919193].
2023-08-22 06:52:15,529 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.12121212121212122, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8383838383838385 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.19191919191919193].
2023-08-22 06:52:18,603 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:18,603 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:34,886 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:34,886 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:36,978 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:36,978 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:38,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:38,796 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:42,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:42,928 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:54,920 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:54,920 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:57,090 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:57,091 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:58,797 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:52:58,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:53:02,951 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:53:02,951 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:53:15,889 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:53:15,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:53:17,156 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.8181818181818182 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.32323232323232326].
2023-08-22 06:53:17,156 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.5555555555555556 ,rho=0.8181818181818182 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6262626262626263 ,beta=0.32323232323232326].
2023-08-22 06:53:18,690 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 06:53:18,690 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 06:53:23,060 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:53:23,060 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:53:36,231 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:53:36,231 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:53:37,220 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5151515151515152 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.9292929292929294].
2023-08-22 06:53:37,220 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5151515151515152 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.9292929292929294].
2023-08-22 06:53:39,749 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:53:39,749 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:54:00,002 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:54:00,003 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:54:04,608 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:54:04,608 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:54:19,580 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5454545454545455, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.7272727272727273].
2023-08-22 06:54:19,581 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5454545454545455, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.8686868686868687 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.7272727272727273].
2023-08-22 06:54:24,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.6767676767676768 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.5050505050505051].
2023-08-22 06:54:24,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9393939393939394, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.6767676767676768 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.7777777777777778 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.5050505050505051].
2023-08-22 06:54:45,864 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.32323232323232326 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.4141414141414142].
2023-08-22 06:54:45,865 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.32323232323232326 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.4141414141414142].
2023-08-22 06:54:51,109 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:54:51,109 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:55:11,867 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:55:11,867 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:55:31,632 INFO: Applying selection operators for generation 43.
2023-08-22 06:55:31,634 INFO: Applying genetic operators for generation 43.
2023-08-22 06:55:31,640 INFO: Evaluating fitness for for generation 43.
2023-08-22 06:55:31,640 INFO: Will evaluate fitness for 64 individuals.
2023-08-22 06:55:32,232 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:55:32,233 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:55:32,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:55:32,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:55:32,458 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0026270000000000004 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4141414141414142 ,epsilon=0.0006666667 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.36363636363636365].
2023-08-22 06:55:32,458 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0026270000000000004 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4141414141414142 ,epsilon=0.0006666667 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.36363636363636365].
2023-08-22 06:55:32,466 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6666666666666667 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6565656565656566].
2023-08-22 06:55:32,467 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6666666666666667 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.6565656565656566].
2023-08-22 06:55:51,673 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.7575757575757577 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.27272727272727276].
2023-08-22 06:55:51,673 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.7575757575757577 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.5151515151515152 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.27272727272727276].
2023-08-22 06:55:52,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:55:52,519 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:55:53,023 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:55:53,024 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:56:12,712 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.25252525252525254, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=1.0 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.4040404040404041 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9696969696969697].
2023-08-22 06:56:12,712 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.25252525252525254, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=1.0 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.4040404040404041 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9696969696969697].
2023-08-22 06:56:13,111 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0.5757575757575758 ,nesterov=True ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6767676767676768 ,epsilon=0.00040404046363636356 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.17171717171717174].
2023-08-22 06:56:13,111 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0.5757575757575758 ,nesterov=True ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.8686868686868687 ,rho=0.6767676767676768 ,epsilon=0.00040404046363636356 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.17171717171717174].
2023-08-22 06:56:17,147 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:56:17,147 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:56:17,944 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:56:17,944 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:56:33,025 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:56:33,025 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:56:37,271 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:56:37,271 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:56:38,997 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:56:38,997 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:56:41,630 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.25252525252525254 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.8585858585858587].
2023-08-22 06:56:41,631 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.25252525252525254 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.797979797979798 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.8585858585858587].
2023-08-22 06:56:53,096 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.4040404040404041 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.06060606060606061].
2023-08-22 06:56:53,096 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.4040404040404041 ,nesterov=True ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.06060606060606061].
2023-08-22 06:56:57,226 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:56:57,226 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:56:59,191 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:56:59,191 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:10,218 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:10,218 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:14,701 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:14,702 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:18,784 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:18,784 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:19,306 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:19,306 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:30,312 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:30,313 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:35,145 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:35,145 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:38,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.595959595959596].
2023-08-22 06:57:38,929 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.007172000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.595959595959596].
2023-08-22 06:57:39,336 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8585858585858587].
2023-08-22 06:57:39,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8585858585858587].
2023-08-22 06:57:51,322 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.7474747474747475 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8181818181818182].
2023-08-22 06:57:51,322 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.7474747474747475 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8181818181818182].
2023-08-22 06:57:55,390 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.6767676767676768 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:55,391 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.6767676767676768 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:57:59,254 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.3535353535353536].
2023-08-22 06:57:59,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.3535353535353536].
2023-08-22 06:57:59,705 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.38383838383838387].
2023-08-22 06:57:59,706 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.38383838383838387].
2023-08-22 06:58:20,072 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:58:20,073 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:58:20,331 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:58:20,331 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:58:20,466 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:58:20,466 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:58:24,030 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:58:24,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:58:40,220 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.4646464646464647 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.494949494949495 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.4646464646464647].
2023-08-22 06:58:40,220 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.4646464646464647 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.494949494949495 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.4646464646464647].
2023-08-22 06:58:40,447 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.0].
2023-08-22 06:58:40,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.0].
2023-08-22 06:58:41,487 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:58:41,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:58:44,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:58:44,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:00,751 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.6767676767676768 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.686868686868687 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8484848484848485].
2023-08-22 06:59:00,751 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.6767676767676768 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.686868686868687 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8484848484848485].
2023-08-22 06:59:01,516 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:01,516 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:05,241 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:05,241 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:08,002 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9696969696969697, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.8585858585858587].
2023-08-22 06:59:08,002 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9696969696969697, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.8585858585858587].
2023-08-22 06:59:21,395 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:21,395 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:21,609 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0007080000000000002 ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.48484848484848486].
2023-08-22 06:59:21,609 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0007080000000000002 ,use_ema=True ,ema_momentum=0.9595959595959597 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.48484848484848486].
2023-08-22 06:59:25,501 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:25,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:27,511 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:27,511 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:41,396 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:41,396 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:42,357 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:42,357 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:45,746 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:45,746 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:47,737 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 06:59:47,737 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:00:02,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:00:02,374 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:00:02,527 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8585858585858587].
2023-08-22 07:00:02,527 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.04040404040404041, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8585858585858587].
2023-08-22 07:00:05,840 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:00:05,840 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:00:07,823 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.2828282828282829 ,rho=0.5858585858585859 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 07:00:07,824 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.2828282828282829 ,rho=0.5858585858585859 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 07:00:22,523 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:00:22,524 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:00:23,333 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4141414141414142 ,rho=0.6767676767676768 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.98989898989899].
2023-08-22 07:00:23,334 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4141414141414142 ,rho=0.6767676767676768 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7676767676767677 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.98989898989899].
2023-08-22 07:00:25,919 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.595959595959596 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.696969696969697].
2023-08-22 07:00:25,919 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7070707070707072 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.595959595959596 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.696969696969697].
2023-08-22 07:00:35,048 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:00:35,048 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:00:42,501 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:00:42,501 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:00:54,624 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:00:54,624 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:00:55,148 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:00:55,148 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:01:07,695 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:01:07,695 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:01:15,945 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:01:15,945 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:01:27,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:01:27,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:01:46,240 INFO: Applying selection operators for generation 44.
2023-08-22 07:01:46,242 INFO: Applying genetic operators for generation 44.
2023-08-22 07:01:46,247 INFO: Evaluating fitness for for generation 44.
2023-08-22 07:01:46,247 INFO: Will evaluate fitness for 48 individuals.
2023-08-22 07:01:46,838 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.9393939393939394 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.9393939393939394].
2023-08-22 07:01:46,838 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.27272727272727276 ,rho=0.9393939393939394 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.9393939393939394].
2023-08-22 07:01:46,888 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.7474747474747475 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5757575757575758].
2023-08-22 07:01:46,889 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.7474747474747475 ,epsilon=0.0003737374363636363 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5757575757575758].
2023-08-22 07:01:46,963 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.6767676767676768 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.8585858585858587].
2023-08-22 07:01:46,964 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.6767676767676768 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.8585858585858587].
2023-08-22 07:01:47,019 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:01:47,019 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:02:07,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:02:07,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:02:14,765 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.030303030303030304].
2023-08-22 07:02:14,766 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.030303030303030304].
2023-08-22 07:02:16,391 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.4747474747474748 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8585858585858587].
2023-08-22 07:02:16,391 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.4747474747474748 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.8585858585858587].
2023-08-22 07:02:28,115 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:02:28,115 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:02:31,172 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.29292929292929293 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8585858585858587].
2023-08-22 07:02:31,172 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.29292929292929293 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.8585858585858587].
2023-08-22 07:02:36,125 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.27272727272727276, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004445000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.8585858585858587].
2023-08-22 07:02:36,125 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.27272727272727276, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004445000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.8585858585858587].
2023-08-22 07:02:42,705 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:02:42,705 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:02:48,295 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=True ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.8585858585858587].
2023-08-22 07:02:48,295 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=True ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6262626262626263 ,epsilon=0.00018181826363636362 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.8585858585858587].
2023-08-22 07:02:58,636 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:02:58,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:02,827 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:02,828 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:03,988 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:03,988 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:15,008 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:15,008 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:19,646 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:19,647 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:23,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:23,818 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:23,960 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:23,960 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:35,119 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:35,119 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:39,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:39,898 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:43,928 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:43,929 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:44,037 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:44,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:55,183 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:55,183 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:59,951 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:03:59,951 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:04:04,250 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9595959595959597 ,rho=0.09090909090909091 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.4646464646464647].
2023-08-22 07:04:04,251 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7171717171717172, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9595959595959597 ,rho=0.09090909090909091 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.4646464646464647].
2023-08-22 07:04:04,854 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.4040404040404041 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=1.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.4747474747474748].
2023-08-22 07:04:04,854 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.008182 ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.4040404040404041 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=1.0 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.4747474747474748].
2023-08-22 07:04:16,003 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:04:16,003 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8181818181818182 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:04:19,987 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5757575757575758, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8585858585858587].
2023-08-22 07:04:19,987 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5757575757575758, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.8585858585858587].
2023-08-22 07:04:31,804 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.020202020202020204, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:04:31,804 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.020202020202020204, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:04:33,322 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:04:33,322 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:04:36,219 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:04:36,219 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:04:38,362 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.6767676767676768 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 07:04:38,362 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.6767676767676768 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.8585858585858587].
2023-08-22 07:04:51,173 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.25252525252525254].
2023-08-22 07:04:51,173 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.4040404040404041, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.000506 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.25252525252525254].
2023-08-22 07:04:53,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5757575757575758].
2023-08-22 07:04:53,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5757575757575758].
2023-08-22 07:04:56,247 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.38383838383838387, momentum=0.7777777777777778 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.6262626262626263].
2023-08-22 07:04:56,247 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.38383838383838387, momentum=0.7777777777777778 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5353535353535354 ,beta=0.6262626262626263].
2023-08-22 07:05:07,082 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.787878787878788 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8080808080808082].
2023-08-22 07:05:07,082 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.787878787878788 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8080808080808082].
2023-08-22 07:05:20,341 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.42424242424242425].
2023-08-22 07:05:20,342 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.42424242424242425].
2023-08-22 07:05:21,007 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:05:21,007 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:05:35,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:05:35,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:05:40,776 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9595959595959597, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:05:40,776 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9595959595959597, momentum=0.7474747474747475 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:05:40,836 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:05:40,836 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:05:41,483 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:05:41,483 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7575757575757577, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9292929292929294 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:05:55,579 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:05:55,579 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:00,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:00,225 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:01,724 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:01,724 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:02,583 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7474747474747475].
2023-08-22 07:06:02,583 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7474747474747475].
2023-08-22 07:06:15,626 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:15,626 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:35,111 INFO: Applying selection operators for generation 45.
2023-08-22 07:06:35,113 INFO: Applying genetic operators for generation 45.
2023-08-22 07:06:35,118 INFO: Evaluating fitness for for generation 45.
2023-08-22 07:06:35,118 INFO: Will evaluate fitness for 59 individuals.
2023-08-22 07:06:35,686 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=1.0 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:35,686 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=1.0 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:35,732 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:35,732 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:35,758 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.15151515151515152 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.393939393939394].
2023-08-22 07:06:35,758 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.15151515151515152 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.393939393939394].
2023-08-22 07:06:35,779 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:35,779 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:55,668 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:55,668 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:06:55,763 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.37373737373737376].
2023-08-22 07:06:55,763 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.19191919191919193, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.37373737373737376].
2023-08-22 07:07:02,814 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4040404040404041 ,rho=0.25252525252525254 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.686868686868687].
2023-08-22 07:07:02,815 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4040404040404041 ,rho=0.25252525252525254 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.686868686868687].
2023-08-22 07:07:03,279 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:07:03,279 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:07:15,552 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:07:15,553 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:07:15,619 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:07:15,619 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:07:23,523 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.42424242424242425 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.5050505050505051].
2023-08-22 07:07:23,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.0 ,rho=0.42424242424242425 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.5050505050505051].
2023-08-22 07:07:31,220 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8585858585858587].
2023-08-22 07:07:31,220 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8585858585858587].
2023-08-22 07:07:35,474 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.7474747474747475 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.8585858585858587].
2023-08-22 07:07:35,474 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5656565656565657 ,rho=0.7474747474747475 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.8585858585858587].
2023-08-22 07:07:36,306 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:07:36,306 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:07:51,319 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:07:51,320 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:07:53,857 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:07:53,857 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:07:54,520 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:07:54,521 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:07:56,484 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.37373737373737376 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8585858585858587 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.27272727272727276].
2023-08-22 07:07:56,484 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.37373737373737376 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.8585858585858587 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.27272727272727276].
2023-08-22 07:08:11,361 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:11,361 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0065660000000000015 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.15151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:13,916 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:13,916 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:14,768 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:14,768 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:25,021 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:25,021 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:34,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:34,070 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:34,931 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.4141414141414142, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.6767676767676768 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.31313131313131315].
2023-08-22 07:08:34,932 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.4141414141414142, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0036370000000000005 ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.6767676767676768 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.31313131313131315].
2023-08-22 07:08:39,869 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:39,869 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:45,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:45,078 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:53,719 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:53,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:55,014 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:08:55,014 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:00,743 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:00,743 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:05,117 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.6767676767676768 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.7070707070707072].
2023-08-22 07:09:05,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.6767676767676768 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.7070707070707072].
2023-08-22 07:09:13,843 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.8585858585858587].
2023-08-22 07:09:13,843 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5050505050505051 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.8585858585858587].
2023-08-22 07:09:15,441 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:15,441 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:21,023 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:21,023 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:33,523 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4646464646464647, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.15151515151515152 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.797979797979798].
2023-08-22 07:09:33,524 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4646464646464647, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.15151515151515152 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.33333333333333337 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.797979797979798].
2023-08-22 07:09:34,658 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.8585858585858587].
2023-08-22 07:09:34,658 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.8585858585858587].
2023-08-22 07:09:35,695 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:35,695 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:41,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:41,235 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:53,102 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:53,102 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:53,596 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:53,596 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:09:55,753 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.31313131313131315, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8585858585858587].
2023-08-22 07:09:55,753 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.31313131313131315, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.8585858585858587].
2023-08-22 07:10:01,330 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:01,331 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:13,161 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.06060606060606061 ,rho=0.6767676767676768 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:13,161 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.06060606060606061 ,rho=0.6767676767676768 ,epsilon=0.0005555556 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:13,478 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:13,479 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:15,151 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.0, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9191919191919192 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.8585858585858587].
2023-08-22 07:10:15,151 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.0, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9191919191919192 ,epsilon=0.0008888889 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.8585858585858587].
2023-08-22 07:10:22,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:22,328 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:33,276 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:33,276 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:34,985 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=0.009091 ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.9595959595959597 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8585858585858587].
2023-08-22 07:10:34,985 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=True ,weight_decay=0.009091 ,use_ema=True ,ema_momentum=0.15151515151515152 ,rho=0.9595959595959597 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.6363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.8585858585858587].
2023-08-22 07:10:42,708 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:42,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:53,804 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:53,804 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:58,871 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:10:58,871 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:11:03,003 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8585858585858587].
2023-08-22 07:11:03,004 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9696969696969697, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0020210000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.6060606060606061 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8585858585858587].
2023-08-22 07:11:20,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:11:20,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:11:21,013 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.48484848484848486].
2023-08-22 07:11:21,013 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.48484848484848486].
2023-08-22 07:11:31,190 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:11:31,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:11:40,222 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:11:40,223 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:11:51,128 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:11:51,128 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:12:00,494 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:12:00,494 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:12:05,598 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0015160000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.08080808080808081 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.797979797979798].
2023-08-22 07:12:05,598 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0015160000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.08080808080808081 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-1.0 ,initial_accumulator_value=0.17171717171717174 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.797979797979798].
2023-08-22 07:12:49,799 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:12:49,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:09,562 INFO: Applying selection operators for generation 46.
2023-08-22 07:13:09,563 INFO: Applying genetic operators for generation 46.
2023-08-22 07:13:09,569 INFO: Evaluating fitness for for generation 46.
2023-08-22 07:13:09,570 INFO: Will evaluate fitness for 75 individuals.
2023-08-22 07:13:10,138 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:10,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:10,180 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:10,180 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:10,182 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:10,182 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:10,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:10,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:30,135 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:30,135 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:30,166 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:30,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:30,564 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:30,564 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:31,647 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9393939393939394 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.8585858585858587].
2023-08-22 07:13:31,647 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9393939393939394 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.6464646464646465 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.8585858585858587].
2023-08-22 07:13:50,206 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6464646464646465, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.98989898989899 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.8585858585858587].
2023-08-22 07:13:50,206 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6464646464646465, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.98989898989899 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.8585858585858587].
2023-08-22 07:13:50,614 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.6767676767676768 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 07:13:50,614 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.25252525252525254 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.08080808080808081 ,rho=0.6767676767676768 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.8686868686868687 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 07:13:51,057 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.20202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.8585858585858587].
2023-08-22 07:13:51,057 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.20202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9696969696969697 ,beta=0.8585858585858587].
2023-08-22 07:13:59,695 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.29292929292929293 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:13:59,695 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.29292929292929293 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.4141414141414142 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:10,146 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:10,146 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:11,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:11,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:15,980 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:15,980 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:28,195 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.6767676767676768 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 07:14:28,195 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.6767676767676768 ,epsilon=0.0005353535818181818 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.4646464646464647 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 07:14:30,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:30,127 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:31,580 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:31,580 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.030303030303030304 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.37373737373737376 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:36,021 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:36,021 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:51,247 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:51,247 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:56,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:56,095 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:56,859 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:56,859 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:58,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:14:58,659 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:15:11,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:15:11,626 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:15:17,043 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:15:17,043 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:15:17,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:15:17,135 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:15:18,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5353535353535354 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.42424242424242425 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.16161616161616163 ,learning_rate_power=0.0 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 07:15:18,802 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5353535353535354 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.42424242424242425 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.16161616161616163 ,learning_rate_power=0.0 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 07:15:31,666 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:15:31,666 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:15:37,132 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.22222222222222224 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.98989898989899].
2023-08-22 07:15:37,133 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.30303030303030304, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.22222222222222224 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.98989898989899].
2023-08-22 07:15:37,249 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.8585858585858587].
2023-08-22 07:15:37,250 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.8585858585858587].
2023-08-22 07:15:47,328 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:15:47,328 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:15:51,719 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:15:51,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:15:57,378 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.09090909090909091 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.8181818181818182 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.98989898989899].
2023-08-22 07:15:57,378 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.09090909090909091 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.05050505050505051 ,rho=0.8181818181818182 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.98989898989899].
2023-08-22 07:16:07,693 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:16:07,694 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:16:11,728 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7777777777777778 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5656565656565657].
2023-08-22 07:16:11,728 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7777777777777778 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.5656565656565657].
2023-08-22 07:16:23,053 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5252525252525253, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7171717171717172 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.8585858585858587].
2023-08-22 07:16:23,053 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5252525252525253, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.7171717171717172 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.8585858585858587].
2023-08-22 07:16:24,504 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.12121212121212122 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:16:24,504 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.020202020202020204, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.12121212121212122 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:16:27,867 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:16:27,868 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:16:40,626 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5454545454545455, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.18181818181818182].
2023-08-22 07:16:40,627 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5454545454545455, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.18181818181818182].
2023-08-22 07:16:48,106 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.98989898989899 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.14141414141414144].
2023-08-22 07:16:48,106 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.98989898989899 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.14141414141414144].
2023-08-22 07:16:53,349 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:16:53,350 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:17:07,739 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.98989898989899 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.6161616161616162].
2023-08-22 07:17:07,739 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.98989898989899 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.6161616161616162].
2023-08-22 07:17:08,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:17:08,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:17:10,324 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.09090909090909091 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.4646464646464647].
2023-08-22 07:17:10,324 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.009899000000000002 ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.09090909090909091 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.15151515151515152 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.4646464646464647].
2023-08-22 07:17:13,643 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6767676767676768 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8585858585858587].
2023-08-22 07:17:13,643 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.24242424242424243 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.43434343434343436 ,rho=0.6767676767676768 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.8585858585858587].
2023-08-22 07:17:28,763 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.23232323232323235 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8181818181818182].
2023-08-22 07:17:28,763 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5353535353535354 ,rho=0.23232323232323235 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.797979797979798 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.6060606060606061 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8181818181818182].
2023-08-22 07:17:37,225 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:17:37,225 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:17:39,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8585858585858587].
2023-08-22 07:17:39,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.8585858585858587].
2023-08-22 07:17:41,980 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:17:41,980 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:17:56,919 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9191919191919192, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.00030400000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4141414141414142 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 07:17:56,919 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9191919191919192, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.00030400000000000007 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4141414141414142 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.9090909090909092 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 07:17:57,549 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007979798181818182 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.29292929292929293].
2023-08-22 07:17:57,550 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007979798181818182 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.29292929292929293].
2023-08-22 07:18:00,089 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.9595959595959597 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8585858585858587].
2023-08-22 07:18:00,089 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.26262626262626265, momentum=0.888888888888889 ,nesterov=True ,amsgrad=False ,weight_decay=0.005152000000000001 ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.9595959595959597 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.8585858585858587].
2023-08-22 07:18:02,011 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5353535353535354, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=0.009293000000000001 ,use_ema=False ,ema_momentum=0.11111111111111112 ,rho=0.7676767676767677 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8989898989898991].
2023-08-22 07:18:02,011 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5353535353535354, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=False ,weight_decay=0.009293000000000001 ,use_ema=False ,ema_momentum=0.11111111111111112 ,rho=0.7676767676767677 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8989898989898991].
2023-08-22 07:18:15,739 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:18:15,739 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:18:21,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:18:21,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:18:24,768 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.22222222222222224].
2023-08-22 07:18:24,768 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.22222222222222224].
2023-08-22 07:18:28,944 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:18:28,944 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:18:36,712 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:18:36,712 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:18:42,927 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:18:42,927 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:18:50,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:18:50,373 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:18:53,195 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:18:53,195 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:18:56,860 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.6767676767676768 ,nesterov=True ,amsgrad=True ,weight_decay=0.006263000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.25252525252525254 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.37373737373737376].
2023-08-22 07:18:56,860 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.6767676767676768 ,nesterov=True ,amsgrad=True ,weight_decay=0.006263000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.25252525252525254 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.37373737373737376].
2023-08-22 07:19:03,217 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:03,218 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:10,572 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:10,573 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:14,495 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:14,495 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:23,401 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:23,402 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:24,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.6767676767676768 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:24,742 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.6767676767676768 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:30,616 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:30,616 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:34,855 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.5757575757575758 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8585858585858587].
2023-08-22 07:19:34,855 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.5757575757575758 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8585858585858587].
2023-08-22 07:19:43,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:43,447 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:53,498 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:19:53,499 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:20:03,106 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:20:03,106 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:20:03,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:20:03,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:20:13,336 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:20:13,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:20:23,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:20:23,110 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:20:42,336 INFO: Applying selection operators for generation 47.
2023-08-22 07:20:42,337 INFO: Applying genetic operators for generation 47.
2023-08-22 07:20:42,342 INFO: Evaluating fitness for for generation 47.
2023-08-22 07:20:42,342 INFO: Will evaluate fitness for 54 individuals.
2023-08-22 07:20:42,993 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.595959595959596 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 07:20:42,993 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.6565656565656566 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.595959595959596 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8585858585858587].
2023-08-22 07:20:43,046 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8585858585858587, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.0 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.11111111111111112].
2023-08-22 07:20:43,046 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8585858585858587, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.0 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.11111111111111112].
2023-08-22 07:20:43,065 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:20:43,065 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:20:43,082 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:20:43,082 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:03,293 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8282828282828284 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.43434343434343436].
2023-08-22 07:21:03,293 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.005354000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8282828282828284 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.98989898989899 ,beta_2=0.42424242424242425 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.43434343434343436].
2023-08-22 07:21:04,063 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:04,063 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:11,419 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:11,419 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:11,488 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:11,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:24,281 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.001314 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.18181818181818182].
2023-08-22 07:21:24,282 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.001314 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.3434343434343434 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.18181818181818182].
2023-08-22 07:21:31,608 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 07:21:31,608 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5656565656565657 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 07:21:31,922 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.36363636363636365 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.0 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8383838383838385].
2023-08-22 07:21:31,922 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.36363636363636365 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.0 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8383838383838385].
2023-08-22 07:21:32,484 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:32,485 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:44,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:44,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:51,678 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:51,678 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:52,486 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:52,486 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:52,651 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:21:52,651 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:04,995 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:04,995 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:11,726 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:11,726 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:12,289 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.0 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.7777777777777778].
2023-08-22 07:22:12,289 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.0 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.8282828282828284 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.7777777777777778].
2023-08-22 07:22:12,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:12,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:25,059 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9292929292929294].
2023-08-22 07:22:25,059 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9292929292929294].
2023-08-22 07:22:32,646 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:32,646 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:32,800 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:32,800 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:41,121 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:41,121 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:52,729 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:52,729 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:52,879 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8585858585858587].
2023-08-22 07:22:52,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.6262626262626263 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8585858585858587].
2023-08-22 07:22:54,151 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:22:54,151 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:23:01,232 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.009293000000000001 ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6767676767676768 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.8585858585858587].
2023-08-22 07:23:01,232 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.009293000000000001 ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.6767676767676768 ,epsilon=0.0006363636727272727 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.8585858585858587].
2023-08-22 07:23:13,627 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.11111111111111112 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.14141414141414144].
2023-08-22 07:23:13,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.11111111111111112 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.14141414141414144].
2023-08-22 07:23:14,389 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:23:14,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:23:21,071 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:23:21,072 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:23:21,937 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5151515151515152].
2023-08-22 07:23:21,937 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5151515151515152].
2023-08-22 07:23:34,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:23:34,543 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:23:41,146 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:23:41,146 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:23:41,915 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:23:41,915 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:23:48,216 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.2828282828282829 ,rho=0.6767676767676768 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.6363636363636365].
2023-08-22 07:23:48,216 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.2828282828282829 ,rho=0.6767676767676768 ,epsilon=0.0008989899090909091 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.6363636363636365].
2023-08-22 07:23:54,606 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:23:54,606 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:24:01,776 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:24:01,777 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:24:02,139 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:24:02,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:24:14,571 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 07:24:14,571 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 07:24:14,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:24:14,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:24:21,797 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:24:21,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:24:22,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:24:22,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:24:35,624 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.9494949494949496 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6363636363636365].
2023-08-22 07:24:35,624 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.9494949494949496 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.0009595959636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.6363636363636365].
2023-08-22 07:24:37,254 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.8787878787878789 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 07:24:37,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.8787878787878789 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 07:24:42,669 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:24:42,670 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:24:42,801 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.3434343434343435].
2023-08-22 07:24:42,801 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.09090909090909091 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.3434343434343435].
2023-08-22 07:25:02,873 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:25:02,873 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:25:03,702 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:25:03,702 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:25:05,715 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:25:05,715 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:25:22,797 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.4040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7070707070707072].
2023-08-22 07:25:22,798 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.4040404040404041 ,nesterov=True ,amsgrad=False ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7070707070707072].
2023-08-22 07:25:25,610 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:25:25,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:25:43,982 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5353535353535354 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.6767676767676768 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.9393939393939394].
2023-08-22 07:25:43,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5353535353535354 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.6767676767676768 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.9393939393939394].
2023-08-22 07:26:10,563 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6767676767676768 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:26:10,563 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.6767676767676768 ,epsilon=0.0006363636727272727 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:26:37,267 INFO: Applying selection operators for generation 48.
2023-08-22 07:26:37,268 INFO: Applying genetic operators for generation 48.
2023-08-22 07:26:37,274 INFO: Evaluating fitness for for generation 48.
2023-08-22 07:26:37,274 INFO: Will evaluate fitness for 67 individuals.
2023-08-22 07:26:37,870 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.33333333333333337].
2023-08-22 07:26:37,870 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.33333333333333337].
2023-08-22 07:26:37,880 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8585858585858587].
2023-08-22 07:26:37,880 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.787878787878788 ,beta=0.8585858585858587].
2023-08-22 07:26:37,884 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0023240000000000005 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:26:37,885 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0023240000000000005 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.48484848484848486 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:26:37,901 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0.09090909090909091 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.020202020202020204 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.8585858585858587].
2023-08-22 07:26:37,902 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0.09090909090909091 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.020202020202020204 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.8585858585858587].
2023-08-22 07:26:57,139 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:26:57,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:26:58,444 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.11111111111111112].
2023-08-22 07:26:58,444 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.8989898989898991 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.11111111111111112].
2023-08-22 07:27:05,888 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:05,888 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:06,117 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:06,117 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:16,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:16,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:17,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:17,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:25,847 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:25,848 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:26,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.6767676767676768 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:26,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.3535353535353536 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.6767676767676768 ,epsilon=0.000454545509090909 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:37,027 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:37,027 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:37,242 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:37,242 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:47,100 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:47,100 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:54,401 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.29292929292929293 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8585858585858587].
2023-08-22 07:27:54,401 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.29292929292929293 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.4747474747474748 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.8585858585858587].
2023-08-22 07:27:57,602 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:57,602 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:57,761 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:27:57,761 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:07,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:07,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:17,779 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:17,779 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:18,276 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:18,276 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:22,747 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:22,747 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:27,552 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:27,553 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:37,767 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:37,767 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:38,358 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:38,358 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:42,819 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:42,819 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:47,555 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.6767676767676768 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.48484848484848486].
2023-08-22 07:28:47,555 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.6767676767676768 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.48484848484848486].
2023-08-22 07:28:57,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:57,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:28:58,297 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.6767676767676768 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.7171717171717172 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9090909090909092].
2023-08-22 07:28:58,297 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.6767676767676768 ,epsilon=0.00014141422727272727 ,centered=True ,beta_1=0.7171717171717172 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.9090909090909092].
2023-08-22 07:29:03,675 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:29:03,675 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:29:05,156 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:29:05,156 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:29:18,880 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:29:18,880 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:29:23,693 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.17171717171717174, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.686868686868687 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.8383838383838385 ,learning_rate_power=0.0 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 07:29:23,693 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.17171717171717174, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.686868686868687 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.8383838383838385 ,learning_rate_power=0.0 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 07:29:25,114 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:29:25,115 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:29:26,275 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.32323232323232326].
2023-08-22 07:29:26,275 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.32323232323232326].
2023-08-22 07:29:39,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6767676767676768 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.5151515151515152].
2023-08-22 07:29:39,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.14141414141414144, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6767676767676768 ,epsilon=0.0005252525727272728 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.3737373737373737 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.5151515151515152].
2023-08-22 07:29:46,198 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:29:46,198 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:29:47,178 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:29:47,179 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:29:52,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.32323232323232326 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.24242424242424243].
2023-08-22 07:29:52,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7777777777777778, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.32323232323232326 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.23232323232323235 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.24242424242424243].
2023-08-22 07:30:06,342 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:06,343 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:07,320 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6262626262626263 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 07:30:07,320 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6262626262626263 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.24242424242424232 ,initial_accumulator_value=0.6666666666666667 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8585858585858587].
2023-08-22 07:30:07,562 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:07,562 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:20,506 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.6767676767676768].
2023-08-22 07:30:20,507 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.6767676767676768].
2023-08-22 07:30:26,026 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:26,027 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:26,314 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:26,314 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:27,678 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:27,679 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:46,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:46,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:46,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:46,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:47,796 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:47,797 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:30:48,734 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0.696969696969697 ,nesterov=True ,amsgrad=False ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.38383838383838387].
2023-08-22 07:30:48,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0.696969696969697 ,nesterov=True ,amsgrad=False ,weight_decay=0.0009100000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.38383838383838387].
2023-08-22 07:31:06,125 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.17171717171717174, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.26262626262626265 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.393939393939394].
2023-08-22 07:31:06,125 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.17171717171717174, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.26262626262626265 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.393939393939394].
2023-08-22 07:31:07,313 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.9797979797979799 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7777777777777778].
2023-08-22 07:31:07,313 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9191919191919192 ,rho=0.9797979797979799 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7777777777777778].
2023-08-22 07:31:07,778 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8989898989898991 ,nesterov=True ,amsgrad=True ,weight_decay=0.0033340000000000006 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.8585858585858587].
2023-08-22 07:31:07,778 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8989898989898991 ,nesterov=True ,amsgrad=True ,weight_decay=0.0033340000000000006 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00017171725454545453 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.8585858585858587].
2023-08-22 07:31:10,096 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.001213 ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.7575757575757577 ,epsilon=0.0002222223 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.8181818181818182].
2023-08-22 07:31:10,096 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.001213 ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.7575757575757577 ,epsilon=0.0002222223 ,centered=False ,beta_1=0.888888888888889 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.8181818181818182].
2023-08-22 07:31:35,387 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:31:35,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:31:35,496 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:31:35,496 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:31:37,915 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.33333333333333337].
2023-08-22 07:31:37,915 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.5858585858585859 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.33333333333333337].
2023-08-22 07:31:38,064 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:31:38,064 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:31:55,487 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.15151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.001 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:31:55,488 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.30303030303030304, momentum=0.15151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.001 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:31:55,748 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:31:55,748 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:31:57,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:31:57,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:32:15,783 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:32:15,783 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:32:17,882 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:32:17,882 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:32:24,293 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:32:24,293 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:32:44,095 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:32:44,096 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:33:04,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4141414141414142].
2023-08-22 07:33:04,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4141414141414142].
2023-08-22 07:33:24,611 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004243000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.787878787878788].
2023-08-22 07:33:24,612 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.004243000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.0009494949545454545 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.787878787878788].
2023-08-22 07:33:50,041 INFO: Applying selection operators for generation 49.
2023-08-22 07:33:50,042 INFO: Applying genetic operators for generation 49.
2023-08-22 07:33:50,047 INFO: Evaluating fitness for for generation 49.
2023-08-22 07:33:50,047 INFO: Will evaluate fitness for 71 individuals.
2023-08-22 07:33:50,648 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:33:50,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:33:50,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:33:50,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:33:50,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:33:50,650 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:33:50,688 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:33:50,688 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:34:10,515 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:34:10,515 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:34:10,754 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.030303030303030304].
2023-08-22 07:34:10,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.10101010101010088 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.030303030303030304].
2023-08-22 07:34:11,233 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6060606060606061 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-22 07:34:11,234 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.010101010101010102, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6060606060606061 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-22 07:34:11,395 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:34:11,395 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:34:30,094 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0015160000000000002 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.8585858585858587].
2023-08-22 07:34:30,094 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.0015160000000000002 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.43434343434343425 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.8585858585858587].
2023-08-22 07:34:30,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.686868686868687 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.787878787878788].
2023-08-22 07:34:30,389 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.686868686868687 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.787878787878788].
2023-08-22 07:34:31,404 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9595959595959597 ,rho=0.6767676767676768 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.25252525252525254 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.8585858585858587].
2023-08-22 07:34:31,405 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9595959595959597 ,rho=0.6767676767676768 ,epsilon=0.0009393939454545454 ,centered=True ,beta_1=0.25252525252525254 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.8585858585858587].
2023-08-22 07:34:40,477 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:34:40,477 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:34:50,719 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:34:50,719 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:34:50,848 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:34:50,848 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:34:59,001 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:34:59,001 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:00,751 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=True ,weight_decay=0.0026270000000000004 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.010101010101010102].
2023-08-22 07:35:00,751 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=True ,weight_decay=0.0026270000000000004 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.010101010101010102].
2023-08-22 07:35:10,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:10,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:11,726 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:11,727 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:19,102 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:19,102 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:30,395 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.6767676767676768].
2023-08-22 07:35:30,396 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.686868686868687 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.6767676767676768].
2023-08-22 07:35:30,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:30,949 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:32,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=True ,weight_decay=0.007980000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=0.0 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.8585858585858587].
2023-08-22 07:35:32,319 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.10101010101010102, momentum=0.31313131313131315 ,nesterov=True ,amsgrad=True ,weight_decay=0.007980000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=0.0 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.8585858585858587].
2023-08-22 07:35:39,215 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:39,216 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:50,470 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:50,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:50,942 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:50,943 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:52,208 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:35:52,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:36:00,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:36:00,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:36:10,754 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:36:10,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:36:11,444 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8585858585858587].
2023-08-22 07:36:11,444 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.8585858585858587].
2023-08-22 07:36:12,228 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5757575757575758 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9595959595959597 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8686868686868687].
2023-08-22 07:36:12,229 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5757575757575758 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9595959595959597 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8686868686868687].
2023-08-22 07:36:20,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.595959595959596 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8282828282828284].
2023-08-22 07:36:20,452 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8484848484848485, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.595959595959596 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8282828282828284].
2023-08-22 07:36:31,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:36:31,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:36:31,557 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.888888888888889 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.8585858585858587].
2023-08-22 07:36:31,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=1.0, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.888888888888889 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.8585858585858587].
2023-08-22 07:36:31,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:36:31,650 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:36:48,206 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:36:48,207 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:36:51,455 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:36:51,455 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:36:51,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:36:51,759 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:00,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:00,473 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:08,350 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:08,350 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:11,910 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.6767676767676768 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:11,910 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.4646464646464647 ,nesterov=True ,amsgrad=True ,weight_decay=0.007879 ,use_ema=True ,ema_momentum=0.18181818181818182 ,rho=0.6767676767676768 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4747474747474748 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:12,559 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6464646464646465].
2023-08-22 07:37:12,560 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.6666666666666667 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.12121212121212122 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6464646464646465].
2023-08-22 07:37:20,487 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:20,487 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:29,054 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:29,054 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:32,184 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.9595959595959597].
2023-08-22 07:37:32,184 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.9595959595959597].
2023-08-22 07:37:40,572 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:40,572 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:41,055 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.6767676767676768 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.4646464646464647].
2023-08-22 07:37:41,055 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.6767676767676768 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.4646464646464647].
2023-08-22 07:37:49,419 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:49,419 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:51,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:37:51,659 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:00,442 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:00,442 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:02,257 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:02,257 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:09,762 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:09,762 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:11,715 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:11,715 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:21,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:21,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:22,597 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:22,597 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:29,769 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:29,769 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:31,785 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:31,785 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:41,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8282828282828284, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7777777777777778].
2023-08-22 07:38:41,473 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8282828282828284, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.7777777777777778].
2023-08-22 07:38:42,822 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:42,822 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:49,767 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:49,767 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:52,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:38:52,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:39:01,430 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:39:01,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:39:03,038 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:39:03,038 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:39:10,626 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:39:10,626 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:39:12,844 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:39:12,844 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:39:21,328 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 07:39:21,329 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.8585858585858587].
2023-08-22 07:39:32,920 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:39:32,920 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:39:49,312 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:39:49,312 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:39:52,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:39:52,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:40:09,664 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:40:09,664 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:40:12,322 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:40:12,322 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:40:29,496 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:40:29,496 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:40:48,558 INFO: Applying selection operators for generation 50.
2023-08-22 07:40:48,559 INFO: Applying genetic operators for generation 50.
2023-08-22 07:40:48,564 INFO: Evaluating fitness for for generation 50.
2023-08-22 07:40:48,565 INFO: Will evaluate fitness for 66 individuals.
2023-08-22 07:40:49,158 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:40:49,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:40:49,175 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.18181818181818182, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.6767676767676768 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.09090909090909091].
2023-08-22 07:40:49,175 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.18181818181818182, momentum=0.7777777777777778 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.6767676767676768 ,epsilon=0.0009191919272727272 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6767676767676768 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.09090909090909091].
2023-08-22 07:40:49,177 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:40:49,177 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:40:49,181 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:40:49,181 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:08,987 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:08,987 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:09,096 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:09,096 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:10,156 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:10,156 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:18,214 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:18,215 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:28,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:28,772 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:29,102 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:29,102 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:30,438 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:30,439 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:38,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:38,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:48,980 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:48,980 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:49,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:49,535 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:50,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:50,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:41:58,328 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.29292929292929293 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5555555555555556].
2023-08-22 07:41:58,328 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5050505050505051, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.29292929292929293 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.5555555555555556].
2023-08-22 07:42:09,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:09,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:09,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:09,861 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:10,684 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:10,684 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:27,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:27,081 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:29,503 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0.09090909090909091 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.25252525252525254 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.21212121212121213 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 07:42:29,503 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0.09090909090909091 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4747474747474748 ,rho=0.25252525252525254 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.21212121212121213 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.8585858585858587].
2023-08-22 07:42:30,053 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:30,053 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:30,609 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:30,609 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:47,271 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9191919191919192].
2023-08-22 07:42:47,271 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.4141414141414142 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.9191919191919192].
2023-08-22 07:42:50,133 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:50,133 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:51,716 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5252525252525253, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.6060606060606061].
2023-08-22 07:42:51,716 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5252525252525253, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.6060606060606061].
2023-08-22 07:42:57,856 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:42:57,857 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:43:10,130 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:43:10,130 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:43:14,981 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6767676767676768 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.8585858585858587].
2023-08-22 07:43:14,982 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7373737373737375 ,rho=0.6767676767676768 ,epsilon=0.0003333334 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.8585858585858587].
2023-08-22 07:43:17,762 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:43:17,762 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:43:30,200 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:43:30,201 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:43:33,371 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7676767676767677 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.8585858585858587].
2023-08-22 07:43:33,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7676767676767677 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.8585858585858587].
2023-08-22 07:43:38,748 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.8585858585858587].
2023-08-22 07:43:38,748 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.5151515151515152 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.04040404040404041 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.8585858585858587].
2023-08-22 07:43:39,688 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.797979797979798, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.43434343434343436 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.8585858585858587].
2023-08-22 07:43:39,688 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.797979797979798, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.43434343434343436 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.8585858585858587].
2023-08-22 07:43:51,215 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:43:51,215 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:43:54,079 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:43:54,079 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:43:58,180 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:43:58,180 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:43:59,026 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:43:59,027 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:11,346 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:11,346 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:15,084 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:15,085 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:18,380 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:18,380 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:19,066 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:19,066 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:31,398 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:31,398 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:35,258 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:35,258 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:38,418 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:38,418 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:39,047 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.8181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.12121212121212122 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.8989898989898991].
2023-08-22 07:44:39,047 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.8181818181818182 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.12121212121212122 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.29292929292929293 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.8989898989898991].
2023-08-22 07:44:51,427 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:51,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:55,359 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:55,360 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:59,510 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:44:59,510 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:05,759 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:05,760 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:11,394 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:11,394 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:15,511 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.33333333333333337 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.13131313131313133].
2023-08-22 07:45:15,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.33333333333333337 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.393939393939394 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.13131313131313133].
2023-08-22 07:45:19,906 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6060606060606061 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:19,906 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.8787878787878789 ,nesterov=True ,amsgrad=True ,weight_decay=0.006465000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6060606060606061 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.04040404040404041 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:26,642 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.31313131313131315].
2023-08-22 07:45:26,642 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.31313131313131315].
2023-08-22 07:45:32,193 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:32,193 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:35,589 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:35,589 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:39,863 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:39,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:52,524 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6161616161616162].
2023-08-22 07:45:52,524 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.05050505050505051 ,beta=0.6161616161616162].
2023-08-22 07:45:54,436 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:54,436 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:56,520 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:56,521 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:59,866 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:45:59,866 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:46:14,821 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.009596 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.010101010101010102 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.6161616161616162].
2023-08-22 07:46:14,821 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.009596 ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.010101010101010102 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.6161616161616162].
2023-08-22 07:46:21,098 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:46:21,098 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8585858585858587].
2023-08-22 07:46:40,779 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9797979797979799, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.2828282828282829 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.8181818181818182].
2023-08-22 07:46:40,780 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9797979797979799, momentum=0.7373737373737375 ,nesterov=True ,amsgrad=True ,weight_decay=0.0029300000000000007 ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.2828282828282829 ,epsilon=0.0007777778 ,centered=False ,beta_1=0.06060606060606061 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.8181818181818182].
2023-08-22 07:47:10,637 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.29292929292929293].
2023-08-22 07:47:10,637 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.30303030303030304, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6767676767676768 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.030303030303030304 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.29292929292929293].
2023-08-22 07:47:41,229 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.020202020202020204].
2023-08-22 07:47:41,229 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9090909090909092, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.6767676767676768 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.98989898989899 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.020202020202020204].
2023-08-22 07:48:00,337 INFO: Saving the results to the folder specified in the arguments.
2023-08-22 07:48:00,399 INFO: Closing the multiprocessing pool.
2023-08-22 07:48:00,399 INFO: Experiment finished.

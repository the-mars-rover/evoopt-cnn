2023-08-22 08:29:34,592 INFO: Starting experiment with the arguments logged below.
2023-08-22 08:29:34,592 INFO: Namespace(results_path='/mnt/lustre/users/mbornman1/evoopt-cnn/experiments/fashionmnist_pop20_gen40_alexnet_tou5_cxp70_mut30_gmp50_alexnet_epo10_bat1024_sed1', cpu_count=2, seed=1, dataset='fashion_mnist', pop_size=20, ngen=40, model='alexnet', epochs=10, batch_size=1024, tournsize=5, cxpb=0.7, mutpb=0.3, gene_mut_prob=0.5)
2023-08-22 08:29:34,593 INFO: Setting the random number generator seed for this experiment.
2023-08-22 08:29:34,593 INFO: Initializing the multiprocessing pool.
2023-08-22 08:29:34,602 INFO: Running the evolutionary algorithm with the given hyper-parameters. This may take a while. Statistics for every generation will be printed below.
2023-08-22 08:29:34,603 INFO: Setting up DEAP toolbox.
2023-08-22 08:29:34,603 INFO: Registering individual initialization method.
2023-08-22 08:29:34,603 INFO: Registering population initialization method.
2023-08-22 08:29:34,603 INFO: Registering the selection method.
2023-08-22 08:29:34,603 INFO: Registering the evaluation method.
2023-08-22 08:29:34,603 INFO: Registering the genetic operators.
2023-08-22 08:29:34,603 INFO: Setting up the hall of fame and stats we want to keep track of.
2023-08-22 08:29:34,603 INFO: Initializing the initial population.
2023-08-22 08:29:34,609 INFO: Running the evolutionary algorithm.
2023-08-22 08:29:34,609 INFO: Evaluating fitness for the initial generation of individuals.
2023-08-22 08:29:34,610 INFO: Will evaluate fitness for 20 individuals.
2023-08-22 08:29:36,261 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 08:29:36,261 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-22 08:29:36,553 DEBUG: Creating converter from 7 to 5
2023-08-22 08:29:36,553 DEBUG: Creating converter from 7 to 5
2023-08-22 08:29:36,553 DEBUG: Creating converter from 5 to 7
2023-08-22 08:29:36,553 DEBUG: Creating converter from 5 to 7
2023-08-22 08:29:36,553 DEBUG: Creating converter from 7 to 5
2023-08-22 08:29:36,553 DEBUG: Creating converter from 7 to 5
2023-08-22 08:29:36,553 DEBUG: Creating converter from 5 to 7
2023-08-22 08:29:36,553 DEBUG: Creating converter from 5 to 7
2023-08-22 08:29:41,206 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-22 08:29:41,206 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-22 08:29:41,247 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-22 08:29:41,247 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-22 08:30:06,926 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-22 08:30:06,927 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-22 08:30:11,251 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-22 08:30:11,252 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-22 08:30:28,117 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-22 08:30:28,117 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-22 08:30:33,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 08:30:33,075 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 08:30:48,859 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-22 08:30:48,859 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-22 08:30:53,620 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 08:30:53,621 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 08:31:12,421 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-22 08:31:12,421 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-22 08:31:14,503 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 08:31:14,504 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 08:31:32,387 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 08:31:32,387 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 08:31:37,648 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-22 08:31:37,648 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-22 08:31:52,638 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-22 08:31:52,638 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-22 08:31:59,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 08:31:59,101 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 08:32:18,316 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-22 08:32:18,317 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-22 08:32:19,716 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:32:19,716 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:32:41,301 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-22 08:32:41,301 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-22 08:32:44,653 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 08:32:44,653 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-22 08:33:02,128 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-22 08:33:02,128 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-22 08:33:23,194 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-22 08:33:23,194 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-22 08:33:49,148 INFO: Applying selection operators for generation 1.
2023-08-22 08:33:49,148 INFO: Applying genetic operators for generation 1.
2023-08-22 08:33:49,150 INFO: Evaluating fitness for for generation 1.
2023-08-22 08:33:49,150 INFO: Will evaluate fitness for 15 individuals.
2023-08-22 08:33:49,673 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 08:33:49,674 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-22 08:33:49,676 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 08:33:49,676 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-22 08:34:07,446 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.24242424242424243].
2023-08-22 08:34:07,446 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.24242424242424243].
2023-08-22 08:34:09,606 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:34:09,606 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:34:29,108 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006869000000000001 ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.15151515151515152 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:34:29,108 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.33333333333333337, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006869000000000001 ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.15151515151515152 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:34:30,321 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6464646464646465 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6565656565656566 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.7171717171717172 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.6464646464646465].
2023-08-22 08:34:30,321 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6464646464646465 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.6565656565656566 ,epsilon=0.0008282828454545454 ,centered=True ,beta_1=0.7171717171717172 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.6464646464646465].
2023-08-22 08:34:51,001 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-22 08:34:51,002 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-22 08:34:51,799 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 08:34:51,799 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-22 08:35:11,895 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-22 08:35:11,896 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-22 08:35:17,371 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 08:35:17,371 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 08:35:32,131 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:35:32,131 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:35:38,557 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.9595959595959597 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:35:38,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.9595959595959597 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:35:52,960 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 08:35:52,960 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 08:36:00,177 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 08:36:00,177 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 08:36:12,768 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:36:12,768 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=True ,ema_momentum=0.787878787878788 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.8080808080808082 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:36:34,369 INFO: Applying selection operators for generation 2.
2023-08-22 08:36:34,369 INFO: Applying genetic operators for generation 2.
2023-08-22 08:36:34,371 INFO: Evaluating fitness for for generation 2.
2023-08-22 08:36:34,371 INFO: Will evaluate fitness for 15 individuals.
2023-08-22 08:36:34,886 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.12121212121212122, momentum=0.26262626262626265 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.4040404040404041].
2023-08-22 08:36:34,886 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.12121212121212122, momentum=0.26262626262626265 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4040404040404041 ,epsilon=0.0006868687181818181 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.4040404040404041].
2023-08-22 08:36:34,896 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:36:34,897 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:36:54,711 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.9595959595959597 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 08:36:54,712 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.9595959595959597 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-22 08:36:55,737 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.48484848484848486, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:36:55,737 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.48484848484848486, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.43434343434343436 ,rho=0.6565656565656566 ,epsilon=0.0007474747727272727 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.7171717171717172 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:37:14,871 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.4141414141414142, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9393939393939394 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:37:14,871 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.4141414141414142, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9393939393939394 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:37:15,774 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:37:15,774 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:37:36,764 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.23232323232323235 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 08:37:36,764 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.595959595959596 ,rho=0.23232323232323235 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 08:37:37,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9595959595959597 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 08:37:37,533 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9595959595959597 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 08:37:57,561 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.36363636363636365 ,rho=0.25252525252525254 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.25252525252525254].
2023-08-22 08:37:57,561 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.36363636363636365 ,rho=0.25252525252525254 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.25252525252525254].
2023-08-22 08:37:58,930 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:37:58,930 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:38:18,302 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:38:18,302 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:38:19,329 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6262626262626263, momentum=0.787878787878788 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=1.0 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:38:19,330 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6262626262626263, momentum=0.787878787878788 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=1.0 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:38:38,037 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:38:38,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:38:39,437 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.9595959595959597 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.7171717171717172].
2023-08-22 08:38:39,437 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.9595959595959597 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.7171717171717172].
2023-08-22 08:38:58,015 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:38:58,016 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:39:18,589 INFO: Applying selection operators for generation 3.
2023-08-22 08:39:18,589 INFO: Applying genetic operators for generation 3.
2023-08-22 08:39:18,591 INFO: Evaluating fitness for for generation 3.
2023-08-22 08:39:18,591 INFO: Will evaluate fitness for 19 individuals.
2023-08-22 08:39:19,086 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:39:19,087 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:39:19,139 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9595959595959597 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 08:39:19,139 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9595959595959597 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 08:39:39,334 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.8181818181818182, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.6767676767676768].
2023-08-22 08:39:39,334 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.8181818181818182, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.6767676767676768].
2023-08-22 08:39:41,075 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:39:41,075 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:40:01,813 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.5151515151515152 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8686868686868687].
2023-08-22 08:40:01,813 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.5151515151515152 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8686868686868687].
2023-08-22 08:40:02,264 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:40:02,265 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:40:22,598 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.23232323232323235 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:40:22,599 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.23232323232323235 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:40:23,221 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:40:23,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:40:43,283 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:40:43,284 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:40:44,512 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:40:44,512 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:41:03,697 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.12121212121212122 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:41:03,697 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.12121212121212122 ,epsilon=4.040413636363636e-05 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:41:04,097 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0034350000000000006 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.05050505050505051].
2023-08-22 08:41:04,097 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0034350000000000006 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.05050505050505051].
2023-08-22 08:41:23,018 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:41:23,019 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:41:24,754 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:41:24,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:41:42,356 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8787878787878789].
2023-08-22 08:41:42,356 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8787878787878789].
2023-08-22 08:41:44,809 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:41:44,809 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:42:02,754 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7171717171717172].
2023-08-22 08:42:02,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7171717171717172].
2023-08-22 08:42:06,137 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9595959595959597 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 08:42:06,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.9595959595959597 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-22 08:42:22,164 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:42:22,164 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:42:41,555 INFO: Applying selection operators for generation 4.
2023-08-22 08:42:41,556 INFO: Applying genetic operators for generation 4.
2023-08-22 08:42:41,557 INFO: Evaluating fitness for for generation 4.
2023-08-22 08:42:41,557 INFO: Will evaluate fitness for 17 individuals.
2023-08-22 08:42:42,063 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.22222222222222224, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.9090909090909092].
2023-08-22 08:42:42,063 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.22222222222222224, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.16161616161616163 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.9090909090909092].
2023-08-22 08:42:42,081 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.32323232323232326].
2023-08-22 08:42:42,082 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.19191919191919193 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.32323232323232326].
2023-08-22 08:43:02,974 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:43:02,974 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:43:09,613 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:43:09,613 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:43:25,016 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.17171717171717174 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.7171717171717172].
2023-08-22 08:43:25,016 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.17171717171717174 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.7171717171717172].
2023-08-22 08:43:29,061 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 08:43:29,061 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.4040404040404041].
2023-08-22 08:43:43,862 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:43:43,863 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:43:48,411 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7171717171717172].
2023-08-22 08:43:48,411 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7171717171717172].
2023-08-22 08:44:04,009 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.020202020202020204, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.22222222222222224 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.787878787878788].
2023-08-22 08:44:04,009 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.020202020202020204, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.22222222222222224 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.787878787878788].
2023-08-22 08:44:08,959 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:44:08,959 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:44:23,537 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.8787878787878789].
2023-08-22 08:44:23,537 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7474747474747475, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.005152000000000001 ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.8787878787878789].
2023-08-22 08:44:29,189 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:44:29,189 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:44:46,426 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:44:46,427 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:44:49,181 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:44:49,181 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-22 08:45:06,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.8787878787878789].
2023-08-22 08:45:06,543 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.8787878787878789].
2023-08-22 08:45:08,571 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8787878787878789].
2023-08-22 08:45:08,571 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8787878787878789].
2023-08-22 08:45:26,611 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7171717171717172].
2023-08-22 08:45:26,611 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.6565656565656566 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.7171717171717172].
2023-08-22 08:45:48,477 INFO: Applying selection operators for generation 5.
2023-08-22 08:45:48,477 INFO: Applying genetic operators for generation 5.
2023-08-22 08:45:48,478 INFO: Evaluating fitness for for generation 5.
2023-08-22 08:45:48,478 INFO: Will evaluate fitness for 8 individuals.
2023-08-22 08:45:48,994 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8787878787878789].
2023-08-22 08:45:48,994 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8787878787878789].
2023-08-22 08:45:49,002 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=0.009293000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.5555555555555556 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.24242424242424243].
2023-08-22 08:45:49,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=0.009293000000000001 ,use_ema=False ,ema_momentum=0.21212121212121213 ,rho=0.5555555555555556 ,epsilon=0.0004747475272727272 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.8282828282828284 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.24242424242424243].
2023-08-22 08:46:10,335 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.43434343434343436 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.7171717171717172].
2023-08-22 08:46:10,335 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.010101010101010102 ,rho=0.43434343434343436 ,epsilon=2.020211818181818e-05 ,centered=False ,beta_1=0.5454545454545455 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.2929292929292928 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.7171717171717172].
2023-08-22 08:46:10,648 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.23232323232323235, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.36363636363636365].
2023-08-22 08:46:10,648 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.23232323232323235, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.36363636363636365].
2023-08-22 08:46:32,859 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8787878787878789].
2023-08-22 08:46:32,859 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8787878787878789].
2023-08-22 08:46:33,184 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:46:33,184 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:46:53,157 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:46:53,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:46:53,622 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:46:53,622 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:47:12,565 INFO: Applying selection operators for generation 6.
2023-08-22 08:47:12,566 INFO: Applying genetic operators for generation 6.
2023-08-22 08:47:12,567 INFO: Evaluating fitness for for generation 6.
2023-08-22 08:47:12,567 INFO: Will evaluate fitness for 16 individuals.
2023-08-22 08:47:13,093 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:47:13,093 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:47:13,094 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.24242424242424243].
2023-08-22 08:47:13,094 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.30303030303030304, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.5555555555555556 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.4444444444444445 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.24242424242424243].
2023-08-22 08:47:31,410 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:47:31,411 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:47:31,495 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8787878787878789].
2023-08-22 08:47:31,495 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8787878787878789].
2023-08-22 08:47:51,322 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.23232323232323235, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.14141414141414144 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.7171717171717172].
2023-08-22 08:47:51,323 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.23232323232323235, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=0.003940000000000001 ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.14141414141414144 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.7171717171717172].
2023-08-22 08:47:51,451 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:47:51,451 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:48:11,943 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:48:11,944 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:48:13,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8787878787878789].
2023-08-22 08:48:13,773 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.42424242424242425, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8787878787878789].
2023-08-22 08:48:30,441 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:48:30,441 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:48:33,765 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:48:33,765 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:48:48,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:48:48,899 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9494949494949496, momentum=0.6666666666666667 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.010101010101010102 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.888888888888889 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:48:52,158 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:48:52,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:49:11,214 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.20202020202020204 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.9090909090909092].
2023-08-22 08:49:11,214 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.20202020202020204 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.9090909090909092].
2023-08-22 08:49:12,615 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.8383838383838385 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 08:49:12,615 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5454545454545455 ,rho=0.8383838383838385 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.686868686868687 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 08:49:31,395 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:49:31,396 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:49:34,497 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:49:34,497 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:49:53,914 INFO: Applying selection operators for generation 7.
2023-08-22 08:49:53,914 INFO: Applying genetic operators for generation 7.
2023-08-22 08:49:53,916 INFO: Evaluating fitness for for generation 7.
2023-08-22 08:49:53,916 INFO: Will evaluate fitness for 15 individuals.
2023-08-22 08:49:54,429 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.8181818181818182 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8787878787878789].
2023-08-22 08:49:54,429 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.8181818181818182 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.18181818181818182 ,l1_regularization_strength=0.7474747474747475 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.8787878787878789].
2023-08-22 08:49:54,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:49:54,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:50:14,908 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.13131313131313133].
2023-08-22 08:50:14,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.9494949494949496 ,epsilon=8.080817272727271e-05 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.13131313131313133].
2023-08-22 08:50:16,110 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:50:16,111 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:50:36,101 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:50:36,102 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 08:50:36,678 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7373737373737375, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.7070707070707072 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 08:50:36,678 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7373737373737375, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.5555555555555556 ,rho=0.7070707070707072 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.16161616161616163].
2023-08-22 08:50:56,248 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:50:56,249 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:50:59,547 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:50:59,548 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:51:16,707 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:51:16,707 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:51:19,661 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:51:19,661 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:51:35,134 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0019200000000000003 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.9393939393939394].
2023-08-22 08:51:35,134 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0019200000000000003 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.9393939393939394].
2023-08-22 08:51:40,239 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.4545454545454546, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.797979797979798 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.22222222222222224].
2023-08-22 08:51:40,239 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.4545454545454546, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.797979797979798 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.22222222222222224].
2023-08-22 08:51:57,431 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:51:57,431 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:52:01,282 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8484848484848485, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.24242424242424243].
2023-08-22 08:52:01,282 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8484848484848485, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.14141414141414144 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.24242424242424243].
2023-08-22 08:52:17,436 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:52:17,436 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:52:35,605 INFO: Applying selection operators for generation 8.
2023-08-22 08:52:35,606 INFO: Applying genetic operators for generation 8.
2023-08-22 08:52:35,608 INFO: Evaluating fitness for for generation 8.
2023-08-22 08:52:35,608 INFO: Will evaluate fitness for 14 individuals.
2023-08-22 08:52:36,136 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:52:36,137 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:52:36,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.10101010101010102 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.98989898989899 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.8787878787878789].
2023-08-22 08:52:36,140 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.48484848484848486, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.07070707070707072 ,rho=0.10101010101010102 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.98989898989899 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.8787878787878789].
2023-08-22 08:52:57,096 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5353535353535354, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.4747474747474748].
2023-08-22 08:52:57,097 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5353535353535354, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.4747474747474748].
2023-08-22 08:52:58,143 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8787878787878789].
2023-08-22 08:52:58,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.8787878787878789].
2023-08-22 08:53:18,303 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.7171717171717172].
2023-08-22 08:53:18,303 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.7171717171717172].
2023-08-22 08:53:24,470 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:53:24,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:53:40,076 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.24242424242424243].
2023-08-22 08:53:40,076 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.24242424242424243].
2023-08-22 08:53:44,551 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=True ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.595959595959596 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.21212121212121213 ,beta_2=0.696969696969697 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.06060606060606061].
2023-08-22 08:53:44,551 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5757575757575758, momentum=0.14141414141414144 ,nesterov=True ,amsgrad=True ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.595959595959596 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.21212121212121213 ,beta_2=0.696969696969697 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.06060606060606061].
2023-08-22 08:54:00,327 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.09090909090909091, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.29292929292929293 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.5151515151515152].
2023-08-22 08:54:00,327 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.09090909090909091, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.29292929292929293 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.08080808080808081 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.26262626262626254 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.5151515151515152].
2023-08-22 08:54:07,688 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:54:07,689 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:54:22,271 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.888888888888889 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.7171717171717172].
2023-08-22 08:54:22,271 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.5252525252525253 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.888888888888889 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.7171717171717172].
2023-08-22 08:54:27,861 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.23232323232323235 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.595959595959596 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.43434343434343436].
2023-08-22 08:54:27,862 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6666666666666667, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.23232323232323235 ,epsilon=0.0007575757818181818 ,centered=True ,beta_1=0.48484848484848486 ,beta_2=0.595959595959596 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.43434343434343436].
2023-08-22 08:54:43,961 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:54:43,962 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:55:02,349 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:55:02,349 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:55:20,061 INFO: Applying selection operators for generation 9.
2023-08-22 08:55:20,061 INFO: Applying genetic operators for generation 9.
2023-08-22 08:55:20,062 INFO: Evaluating fitness for for generation 9.
2023-08-22 08:55:20,062 INFO: Will evaluate fitness for 17 individuals.
2023-08-22 08:55:20,580 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.98989898989899].
2023-08-22 08:55:20,580 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.98989898989899].
2023-08-22 08:55:20,584 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:55:20,584 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:55:38,857 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:55:38,857 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:55:38,898 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:55:38,899 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:55:57,408 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.19191919191919193, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.06060606060606061 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.24242424242424243].
2023-08-22 08:55:57,408 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.19191919191919193, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.06060606060606061 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.5656565656565657 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.10101010101010102 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.24242424242424243].
2023-08-22 08:55:59,258 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:55:59,258 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:56:17,644 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.4545454545454546, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 08:56:17,644 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.4545454545454546, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9090909090909092 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.5151515151515152 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.31313131313131315].
2023-08-22 08:56:19,435 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:56:19,436 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:56:35,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:56:35,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7575757575757577, momentum=0.7676767676767677 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0002222223 ,centered=True ,beta_1=0.3535353535353536 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:56:39,530 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:56:39,531 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:56:57,872 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:56:57,872 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:57:00,069 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7777777777777778, momentum=0.9090909090909092 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9393939393939394 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:57:00,069 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7777777777777778, momentum=0.9090909090909092 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9393939393939394 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:57:16,680 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:57:16,680 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:57:20,404 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:57:20,404 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.38383838383838387 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.8484848484848485 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:57:36,145 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:57:36,145 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:57:38,354 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.7171717171717172].
2023-08-22 08:57:38,354 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.7171717171717172].
2023-08-22 08:57:54,536 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:57:54,536 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.8787878787878789].
2023-08-22 08:58:14,434 INFO: Applying selection operators for generation 10.
2023-08-22 08:58:14,435 INFO: Applying genetic operators for generation 10.
2023-08-22 08:58:14,436 INFO: Evaluating fitness for for generation 10.
2023-08-22 08:58:14,437 INFO: Will evaluate fitness for 16 individuals.
2023-08-22 08:58:14,958 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.24242424242424243].
2023-08-22 08:58:14,959 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.004243000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.24242424242424243].
2023-08-22 08:58:14,960 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:58:14,960 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:58:33,731 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 08:58:33,732 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 08:58:37,061 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.5252525252525253 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.8282828282828284].
2023-08-22 08:58:37,061 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.5252525252525253 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.8282828282828284].
2023-08-22 08:58:54,588 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:58:54,588 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:58:55,718 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:58:55,719 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:59:14,346 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:59:14,347 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 08:59:14,979 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:59:14,980 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:59:34,265 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.5555555555555556 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.797979797979798].
2023-08-22 08:59:34,265 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.33333333333333337, momentum=0.33333333333333337 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.21212121212121213 ,rho=0.5555555555555556 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.13131313131313133 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.010101010101010102 ,beta=0.797979797979798].
2023-08-22 08:59:35,152 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:59:35,152 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:59:53,879 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.8383838383838385].
2023-08-22 08:59:53,880 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9595959595959597, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.8383838383838385].
2023-08-22 08:59:57,955 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 08:59:57,955 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 09:00:16,885 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.04040404040404041 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.010101010101010102].
2023-08-22 09:00:16,885 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.04040404040404041 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.010101010101010102].
2023-08-22 09:00:17,052 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.8787878787878789].
2023-08-22 09:00:17,052 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.32323232323232326, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.8787878787878789].
2023-08-22 09:00:35,499 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:00:35,499 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:00:37,224 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.494949494949495, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.24242424242424243 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.19191919191919193].
2023-08-22 09:00:37,224 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.494949494949495, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.24242424242424243 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.9494949494949496 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.19191919191919193].
2023-08-22 09:00:56,918 INFO: Applying selection operators for generation 11.
2023-08-22 09:00:56,919 INFO: Applying genetic operators for generation 11.
2023-08-22 09:00:56,920 INFO: Evaluating fitness for for generation 11.
2023-08-22 09:00:56,920 INFO: Will evaluate fitness for 17 individuals.
2023-08-22 09:00:57,585 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:00:57,585 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:00:57,585 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.3535353535353536, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.24242424242424243].
2023-08-22 09:00:57,586 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.3535353535353536, momentum=0.5454545454545455 ,nesterov=False ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.8484848484848485 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.24242424242424243].
2023-08-22 09:01:17,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 09:01:17,908 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 09:01:20,698 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:01:20,699 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:01:39,293 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 09:01:39,293 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 09:01:43,808 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:01:43,808 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:01:58,325 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:01:58,326 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:02:04,899 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:02:04,899 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:02:18,967 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:02:18,968 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:02:23,657 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:02:23,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:02:39,399 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.9797979797979799 ,nesterov=True ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.24242424242424243].
2023-08-22 09:02:39,399 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.9797979797979799 ,nesterov=True ,amsgrad=True ,weight_decay=0.0006070000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6363636363636365 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=0.24242424242424243].
2023-08-22 09:02:44,081 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:02:44,082 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:03:01,422 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 09:03:01,423 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.24242424242424243].
2023-08-22 09:03:05,027 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.5555555555555556 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.24242424242424243].
2023-08-22 09:03:05,028 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.5555555555555556 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.24242424242424243].
2023-08-22 09:03:22,438 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.11111111111111112, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.25252525252525254 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.98989898989899].
2023-08-22 09:03:22,439 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.11111111111111112, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.25252525252525254 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.98989898989899].
2023-08-22 09:03:27,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:03:27,474 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:03:40,941 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:03:40,941 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:03:58,925 INFO: Applying selection operators for generation 12.
2023-08-22 09:03:58,925 INFO: Applying genetic operators for generation 12.
2023-08-22 09:03:58,928 INFO: Evaluating fitness for for generation 12.
2023-08-22 09:03:58,928 INFO: Will evaluate fitness for 17 individuals.
2023-08-22 09:03:59,590 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:03:59,591 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:03:59,593 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:03:59,594 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:04:20,483 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.23232323232323235 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.494949494949495 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.010101010101010102].
2023-08-22 09:04:20,484 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.23232323232323235 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.494949494949495 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.010101010101010102].
2023-08-22 09:04:22,774 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.42424242424242425 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:04:22,774 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5050505050505051, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=0.005253000000000001 ,use_ema=True ,ema_momentum=0.888888888888889 ,rho=0.42424242424242425 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:04:42,923 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.7171717171717172].
2023-08-22 09:04:42,923 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.31313131313131315 ,beta=0.7171717171717172].
2023-08-22 09:04:46,226 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.4646464646464647, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.6565656565656566].
2023-08-22 09:04:46,226 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.4646464646464647, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.08080808080808081 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.30303030303030304 ,beta=0.6565656565656566].
2023-08-22 09:05:05,704 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.5353535353535354 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=1.0].
2023-08-22 09:05:05,705 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.5353535353535354 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=1.0].
2023-08-22 09:05:07,265 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:05:07,265 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:05:27,533 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.6262626262626263].
2023-08-22 09:05:27,533 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.6262626262626263].
2023-08-22 09:05:28,837 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=0.008586 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0008585858727272726 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.29292929292929293].
2023-08-22 09:05:28,837 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.393939393939394 ,nesterov=True ,amsgrad=True ,weight_decay=0.008586 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0008585858727272726 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.29292929292929293].
2023-08-22 09:05:51,108 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:05:51,109 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:05:51,168 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:05:51,168 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:06:11,517 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=0.009596 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.24242424242424243].
2023-08-22 09:06:11,517 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=0.009596 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.11111111111111112 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.43434343434343436 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.24242424242424243].
2023-08-22 09:06:13,757 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.26262626262626265 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4646464646464647 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=1.0].
2023-08-22 09:06:13,757 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5151515151515152, momentum=0.26262626262626265 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4646464646464647 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8383838383838385 ,beta=1.0].
2023-08-22 09:06:33,657 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:06:33,658 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:06:36,100 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3535353535353536, momentum=0.6262626262626263 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.8585858585858587 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.24242424242424243].
2023-08-22 09:06:36,100 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3535353535353536, momentum=0.6262626262626263 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.8585858585858587 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.24242424242424243].
2023-08-22 09:06:53,004 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.010101010101010102 ,rho=0.6060606060606061 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 09:06:53,004 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.010101010101010102 ,rho=0.6060606060606061 ,epsilon=0.0008080808272727272 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 09:07:15,122 INFO: Applying selection operators for generation 13.
2023-08-22 09:07:15,122 INFO: Applying genetic operators for generation 13.
2023-08-22 09:07:15,123 INFO: Evaluating fitness for for generation 13.
2023-08-22 09:07:15,123 INFO: Will evaluate fitness for 16 individuals.
2023-08-22 09:07:15,654 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5252525252525253, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.29292929292929293].
2023-08-22 09:07:15,654 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5252525252525253, momentum=0.5858585858585859 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.29292929292929293].
2023-08-22 09:07:15,786 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:07:15,787 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:07:34,522 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:07:34,522 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:07:46,001 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:07:46,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:07:53,833 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:07:53,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:08:06,909 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:08:06,909 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:08:14,398 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:08:14,399 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:08:25,816 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:08:25,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:08:37,295 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:08:37,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:08:46,148 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8787878787878789].
2023-08-22 09:08:46,148 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.8787878787878789].
2023-08-22 09:08:57,702 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:08:57,703 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:09:07,286 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7171717171717172].
2023-08-22 09:09:07,286 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.7171717171717172].
2023-08-22 09:09:18,725 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:09:18,725 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:09:27,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.6262626262626263].
2023-08-22 09:09:27,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.030303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.6262626262626263].
2023-08-22 09:09:39,188 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:09:39,188 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:09:50,739 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 09:09:50,740 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=0.009394000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5050505050505051 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 09:10:14,519 INFO: Applying selection operators for generation 14.
2023-08-22 09:10:14,520 INFO: Applying genetic operators for generation 14.
2023-08-22 09:10:14,521 INFO: Evaluating fitness for for generation 14.
2023-08-22 09:10:14,521 INFO: Will evaluate fitness for 12 individuals.
2023-08-22 09:10:15,183 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:10:15,183 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:10:15,189 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:10:15,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.8787878787878789].
2023-08-22 09:10:35,421 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.393939393939394 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8787878787878789].
2023-08-22 09:10:35,422 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.23232323232323235 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.393939393939394 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.8787878787878789].
2023-08-22 09:10:36,220 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:10:36,220 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:10:54,934 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0.06060606060606061 ,nesterov=False ,amsgrad=False ,weight_decay=0.001819 ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.08080808080808081 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.8787878787878789].
2023-08-22 09:10:54,934 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7373737373737375, momentum=0.06060606060606061 ,nesterov=False ,amsgrad=False ,weight_decay=0.001819 ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.08080808080808081 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.5353535353535354 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.2828282828282829 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.8787878787878789].
2023-08-22 09:10:55,533 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:10:55,533 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:11:13,957 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5151515151515152 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:11:13,957 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4141414141414142, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5151515151515152 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:11:18,141 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:11:18,141 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:11:36,875 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9292929292929294, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6363636363636365 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.24242424242424243].
2023-08-22 09:11:36,875 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9292929292929294, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6363636363636365 ,epsilon=0.0004848485363636363 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.24242424242424243].
2023-08-22 09:11:45,351 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:11:45,351 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7676767676767677 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:12:00,297 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.3535353535353536, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=True ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.7373737373737375].
2023-08-22 09:12:00,298 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.3535353535353536, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=True ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.7373737373737375].
2023-08-22 09:12:03,874 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.8686868686868687 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6161616161616162].
2023-08-22 09:12:03,875 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.5151515151515152, momentum=0.10101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.8686868686868687 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6161616161616162].
2023-08-22 09:12:25,360 INFO: Applying selection operators for generation 15.
2023-08-22 09:12:25,361 INFO: Applying genetic operators for generation 15.
2023-08-22 09:12:25,362 INFO: Evaluating fitness for for generation 15.
2023-08-22 09:12:25,362 INFO: Will evaluate fitness for 14 individuals.
2023-08-22 09:12:25,898 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:12:25,899 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:12:26,024 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6767676767676768].
2023-08-22 09:12:26,024 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.32323232323232326 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.6767676767676768].
2023-08-22 09:12:44,903 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:12:44,904 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:12:49,740 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:12:49,740 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:13:03,388 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:13:03,388 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.23232323232323235 ,epsilon=0.00011111119999999999 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:13:09,208 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:13:09,209 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:13:21,825 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.7171717171717172].
2023-08-22 09:13:21,825 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.7171717171717172].
2023-08-22 09:13:28,143 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.31313131313131315, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.3434343434343435 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.7575757575757577].
2023-08-22 09:13:28,143 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.31313131313131315, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.3434343434343435 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.7575757575757577].
2023-08-22 09:13:44,828 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.3535353535353536, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.3434343434343435 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.494949494949495 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.24242424242424243].
2023-08-22 09:13:44,828 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.3535353535353536, momentum=0.21212121212121213 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.31313131313131315 ,rho=0.3434343434343435 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.494949494949495 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.24242424242424243].
2023-08-22 09:13:49,433 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:13:49,433 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:14:08,151 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:14:08,151 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:14:08,452 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:14:08,453 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:14:26,813 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 09:14:26,813 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.7171717171717172].
2023-08-22 09:14:46,579 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.13131313131313133, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.23232323232323235 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.17171717171717174].
2023-08-22 09:14:46,579 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.13131313131313133, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6363636363636365 ,rho=0.23232323232323235 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.17171717171717174].
2023-08-22 09:15:06,570 INFO: Applying selection operators for generation 16.
2023-08-22 09:15:06,570 INFO: Applying genetic operators for generation 16.
2023-08-22 09:15:06,572 INFO: Evaluating fitness for for generation 16.
2023-08-22 09:15:06,572 INFO: Will evaluate fitness for 17 individuals.
2023-08-22 09:15:07,107 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:15:07,108 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:15:07,220 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.11111111111111112 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.10101010101010102].
2023-08-22 09:15:07,221 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7474747474747475, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.11111111111111112 ,epsilon=0.0008989899090909091 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.10101010101010102].
2023-08-22 09:15:25,869 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:15:25,869 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:15:30,124 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.24242424242424243].
2023-08-22 09:15:30,124 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.24242424242424243].
2023-08-22 09:15:44,269 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:15:44,269 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:15:51,305 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:15:51,305 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:16:02,608 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.6767676767676768 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.4040404040404041].
2023-08-22 09:16:02,609 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.31313131313131315 ,rho=0.6767676767676768 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.6363636363636365 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.4040404040404041].
2023-08-22 09:16:10,017 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:16:10,017 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:16:20,969 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:16:20,969 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:16:29,257 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:16:29,258 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:16:39,827 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.4747474747474748, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.001 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.24242424242424243].
2023-08-22 09:16:39,827 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.4747474747474748, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.001 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.24242424242424243].
2023-08-22 09:16:48,129 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:16:48,129 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:16:58,726 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=0.01 ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.29292929292929293 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.6262626262626263].
2023-08-22 09:16:58,727 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=0.01 ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.29292929292929293 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.6262626262626263].
2023-08-22 09:17:09,570 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:17:09,570 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:17:16,900 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:17:16,900 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:17:28,254 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:17:28,254 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:17:35,226 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:17:35,227 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:17:53,677 INFO: Applying selection operators for generation 17.
2023-08-22 09:17:53,677 INFO: Applying genetic operators for generation 17.
2023-08-22 09:17:53,679 INFO: Evaluating fitness for for generation 17.
2023-08-22 09:17:53,679 INFO: Will evaluate fitness for 14 individuals.
2023-08-22 09:17:54,215 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:17:54,215 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:17:54,328 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:17:54,329 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:18:12,581 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:18:12,581 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:18:13,055 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:18:13,056 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:18:30,868 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:18:30,868 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:18:31,754 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.3434343434343435 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:18:31,754 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.4444444444444445, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.3434343434343435 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:18:49,943 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.09090909090909091, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.5757575757575758 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.393939393939394].
2023-08-22 09:18:49,943 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.09090909090909091, momentum=0.030303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.5757575757575758 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.393939393939394].
2023-08-22 09:18:53,159 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:18:53,159 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:19:12,471 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:19:12,471 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:19:14,561 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.05050505050505051 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.29292929292929293].
2023-08-22 09:19:14,561 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0005858586272727272 ,centered=False ,beta_1=0.05050505050505051 ,beta_2=0.8989898989898991 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.29292929292929293].
2023-08-22 09:19:31,070 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.6363636363636365].
2023-08-22 09:19:31,071 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.393939393939394, momentum=0.07070707070707072 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.36363636363636365 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.6363636363636365].
2023-08-22 09:19:40,326 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:19:40,326 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:19:56,625 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:19:56,625 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:20:26,958 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.24242424242424243].
2023-08-22 09:20:26,959 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6161616161616162 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.24242424242424243].
2023-08-22 09:20:50,113 INFO: Applying selection operators for generation 18.
2023-08-22 09:20:50,113 INFO: Applying genetic operators for generation 18.
2023-08-22 09:20:50,114 INFO: Evaluating fitness for for generation 18.
2023-08-22 09:20:50,114 INFO: Will evaluate fitness for 16 individuals.
2023-08-22 09:20:50,634 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7777777777777778, momentum=0.9595959595959597 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6767676767676768].
2023-08-22 09:20:50,634 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7777777777777778, momentum=0.9595959595959597 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.6767676767676768].
2023-08-22 09:20:51,334 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:20:51,334 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:21:11,814 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:21:11,814 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:21:16,234 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.888888888888889 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:21:16,234 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.888888888888889 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:21:30,660 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:21:30,660 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:21:43,498 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:21:43,498 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:21:49,903 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:21:49,903 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:22:15,064 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.24242424242424243].
2023-08-22 09:22:15,064 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.22222222222222224, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.24242424242424243].
2023-08-22 09:22:18,179 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:22:18,179 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:22:36,543 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:22:36,543 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:22:42,734 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:22:42,735 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:22:55,281 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:22:55,281 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:23:05,171 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:23:05,172 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:23:14,713 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:23:14,714 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:23:26,937 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:23:26,938 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:23:46,059 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.24242424242424243].
2023-08-22 09:23:46,059 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=0.008384 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00031313138181818175 ,centered=True ,beta_1=0.16161616161616163 ,beta_2=0.8787878787878789 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.33333333333333337 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.24242424242424243].
2023-08-22 09:24:15,630 INFO: Applying selection operators for generation 19.
2023-08-22 09:24:15,630 INFO: Applying genetic operators for generation 19.
2023-08-22 09:24:15,632 INFO: Evaluating fitness for for generation 19.
2023-08-22 09:24:15,632 INFO: Will evaluate fitness for 18 individuals.
2023-08-22 09:24:16,220 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:24:16,221 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:24:17,281 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:24:17,281 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:24:35,303 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:24:35,304 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:24:44,338 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.43434343434343436, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.98989898989899 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:24:44,338 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.43434343434343436, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.98989898989899 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:24:55,706 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001819 ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.37373737373737376 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.24242424242424243].
2023-08-22 09:24:55,706 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.001819 ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.37373737373737376 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.24242424242424243].
2023-08-22 09:25:05,517 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.5757575757575758].
2023-08-22 09:25:05,518 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.5757575757575758].
2023-08-22 09:25:25,762 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:25:25,762 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:25:28,005 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.7676767676767677].
2023-08-22 09:25:28,005 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.27272727272727276 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.7676767676767677].
2023-08-22 09:25:47,140 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:25:47,141 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:25:49,307 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:25:49,307 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:26:08,625 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.6464646464646465 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:26:08,625 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.24242424242424243, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.24242424242424243 ,rho=0.6464646464646465 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.27272727272727276 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:26:10,638 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8585858585858587, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.31313131313131315 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.8484848484848485].
2023-08-22 09:26:10,638 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8585858585858587, momentum=0.13131313131313133 ,nesterov=False ,amsgrad=True ,weight_decay=0.0067680000000000014 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.31313131313131315 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.4545454545454546 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.8484848484848485].
2023-08-22 09:26:27,233 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:26:27,233 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:26:31,576 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:26:31,576 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:26:51,245 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:26:51,245 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:26:51,771 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:26:51,771 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:27:11,167 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.24242424242424243].
2023-08-22 09:27:11,167 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.24242424242424243].
2023-08-22 09:27:13,980 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.25252525252525254, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.24242424242424243].
2023-08-22 09:27:13,981 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.25252525252525254, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.24242424242424243].
2023-08-22 09:27:37,883 INFO: Applying selection operators for generation 20.
2023-08-22 09:27:37,883 INFO: Applying genetic operators for generation 20.
2023-08-22 09:27:37,885 INFO: Evaluating fitness for for generation 20.
2023-08-22 09:27:37,885 INFO: Will evaluate fitness for 17 individuals.
2023-08-22 09:27:38,573 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8080808080808082].
2023-08-22 09:27:38,573 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.00024242431818181817 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.8080808080808082].
2023-08-22 09:27:38,864 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9595959595959597, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:27:38,864 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9595959595959597, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.18181818181818182 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:27:57,206 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.24242424242424243].
2023-08-22 09:27:57,206 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5656565656565657 ,epsilon=0.000454545509090909 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.24242424242424243].
2023-08-22 09:27:59,202 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:27:59,202 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:28:17,273 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:28:17,273 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:28:18,778 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.24242424242424243].
2023-08-22 09:28:18,778 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.21212121212121213, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9090909090909092 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.24242424242424243].
2023-08-22 09:28:36,474 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.14141414141414144 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.24242424242424243].
2023-08-22 09:28:36,474 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.16161616161616163 ,rho=0.14141414141414144 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.24242424242424243].
2023-08-22 09:28:38,293 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.5757575757575758].
2023-08-22 09:28:38,293 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.5757575757575758].
2023-08-22 09:28:55,247 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:28:55,247 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:28:58,568 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.5757575757575758].
2023-08-22 09:28:58,569 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.5757575757575758].
2023-08-22 09:29:16,873 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:29:16,873 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:29:29,482 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.3434343434343435 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.7171717171717172].
2023-08-22 09:29:29,482 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.37373737373737376 ,rho=0.3434343434343435 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.11111111111111112 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.7171717171717172].
2023-08-22 09:29:39,154 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7676767676767677 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:29:39,154 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7676767676767677 ,epsilon=0.0006868687181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:29:59,332 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8080808080808082, momentum=0.4444444444444445 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.30303030303030304 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.29292929292929293].
2023-08-22 09:29:59,332 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8080808080808082, momentum=0.4444444444444445 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.30303030303030304 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.33333333333333337 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.29292929292929293].
2023-08-22 09:29:59,962 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.37373737373737376, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.4444444444444445 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.6464646464646465].
2023-08-22 09:29:59,962 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.37373737373737376, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=0.0014150000000000002 ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.4444444444444445 ,epsilon=0.00035353541818181815 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.6464646464646465].
2023-08-22 09:30:22,028 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:30:22,028 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:30:30,789 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:30:30,789 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:30:54,166 INFO: Applying selection operators for generation 21.
2023-08-22 09:30:54,166 INFO: Applying genetic operators for generation 21.
2023-08-22 09:30:54,168 INFO: Evaluating fitness for for generation 21.
2023-08-22 09:30:54,168 INFO: Will evaluate fitness for 16 individuals.
2023-08-22 09:30:56,020 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:30:56,021 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:30:57,248 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:30:57,248 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:31:21,592 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:31:21,593 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:31:23,260 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.07070707070707072 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.24242424242424243].
2023-08-22 09:31:23,260 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=True ,ema_momentum=0.8282828282828284 ,rho=0.07070707070707072 ,epsilon=0.000676767709090909 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.15151515151515152 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.04040404040404041 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.24242424242424243].
2023-08-22 09:31:41,586 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:31:41,586 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.42424242424242425, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.00034343440909090904 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:31:46,789 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:31:46,790 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:32:01,572 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:32:01,573 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:32:10,484 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:32:10,485 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:32:20,737 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:32:20,738 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:32:32,675 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:32:32,676 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.3535353535353536, momentum=0.13131313131313133 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:32:40,061 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.5757575757575758].
2023-08-22 09:32:40,062 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.5757575757575758].
2023-08-22 09:32:53,376 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:32:53,376 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:33:02,877 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.24242424242424243].
2023-08-22 09:33:02,877 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=9.09091818181818e-05 ,centered=True ,beta_1=0.595959595959596 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.24242424242424243].
2023-08-22 09:33:14,266 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:33:14,266 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:33:21,356 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5757575757575758, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.15151515151515152 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.24242424242424243].
2023-08-22 09:33:21,357 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5757575757575758, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.15151515151515152 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.24242424242424243].
2023-08-22 09:33:36,408 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0.31313131313131315 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.43434343434343436 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.6161616161616162].
2023-08-22 09:33:36,408 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0.31313131313131315 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.43434343434343436 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.10101010101010102 ,beta=0.6161616161616162].
2023-08-22 09:33:59,158 INFO: Applying selection operators for generation 22.
2023-08-22 09:33:59,159 INFO: Applying genetic operators for generation 22.
2023-08-22 09:33:59,161 INFO: Evaluating fitness for for generation 22.
2023-08-22 09:33:59,161 INFO: Will evaluate fitness for 17 individuals.
2023-08-22 09:33:59,859 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:33:59,860 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:34:00,500 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.24242424242424243].
2023-08-22 09:34:00,500 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.42424242424242425 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9494949494949496 ,beta=0.24242424242424243].
2023-08-22 09:34:18,994 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7070707070707072, momentum=0.9393939393939394 ,nesterov=False ,amsgrad=False ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.18181818181818182].
2023-08-22 09:34:18,994 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7070707070707072, momentum=0.9393939393939394 ,nesterov=False ,amsgrad=False ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.5757575757575758 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.13131313131313133 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.18181818181818182].
2023-08-22 09:34:25,278 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:34:25,278 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:34:43,313 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.42424242424242425 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:34:43,313 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.42424242424242425 ,epsilon=0.0008484848636363636 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.11111111111111105 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.9696969696969697 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:34:45,368 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:34:45,368 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:35:02,510 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:35:02,510 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:35:06,519 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:35:06,519 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:35:21,281 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:35:21,281 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:35:25,603 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:35:25,603 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:35:41,384 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.24242424242424243].
2023-08-22 09:35:41,384 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.24242424242424243].
2023-08-22 09:35:51,874 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9494949494949496, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.8484848484848485 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.24242424242424243].
2023-08-22 09:35:51,874 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9494949494949496, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.8484848484848485 ,epsilon=0.0006262626636363636 ,centered=False ,beta_1=0.07070707070707072 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.24242424242424243].
2023-08-22 09:36:00,097 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:36:00,097 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:36:21,952 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.98989898989899 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.9191919191919192].
2023-08-22 09:36:21,953 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.98989898989899 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.9191919191919192].
2023-08-22 09:36:22,039 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=1.0 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.38383838383838387].
2023-08-22 09:36:22,039 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=6.060615454545454e-05 ,centered=False ,beta_1=1.0 ,beta_2=0.11111111111111112 ,learning_rate_power=-0.010101010101010055 ,initial_accumulator_value=0.030303030303030304 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.38383838383838387].
2023-08-22 09:36:44,096 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:36:44,097 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:36:54,308 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.24242424242424243].
2023-08-22 09:36:54,309 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7373737373737375, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0008484848636363636 ,centered=False ,beta_1=0.5858585858585859 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.24242424242424243].
2023-08-22 09:37:13,817 INFO: Applying selection operators for generation 23.
2023-08-22 09:37:13,818 INFO: Applying genetic operators for generation 23.
2023-08-22 09:37:13,820 INFO: Evaluating fitness for for generation 23.
2023-08-22 09:37:13,820 INFO: Will evaluate fitness for 20 individuals.
2023-08-22 09:37:14,695 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:37:14,696 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:37:14,998 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:37:14,998 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.12121212121212122, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:37:34,127 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:37:34,128 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:37:41,968 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0.32323232323232326 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:37:41,968 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9292929292929294, momentum=0.32323232323232326 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:37:57,842 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.9292929292929294, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.24242424242424243].
2023-08-22 09:37:57,842 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.9292929292929294, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7676767676767677 ,beta=0.24242424242424243].
2023-08-22 09:38:18,283 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:38:18,283 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:38:33,117 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:38:33,118 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:38:49,556 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:38:49,557 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:38:55,264 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:38:55,265 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:39:15,009 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:39:15,009 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:39:15,394 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.7171717171717172 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.5555555555555556].
2023-08-22 09:39:15,394 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=0.0017180000000000001 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.7171717171717172 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.5555555555555556].
2023-08-22 09:39:33,627 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.8181818181818182 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.787878787878788 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.6565656565656566].
2023-08-22 09:39:33,628 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0045460000000000006 ,use_ema=True ,ema_momentum=0.25252525252525254 ,rho=0.8181818181818182 ,epsilon=0.0004242424818181818 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.787878787878788 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.6565656565656566].
2023-08-22 09:39:43,375 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:39:43,375 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:39:53,514 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8787878787878789].
2023-08-22 09:39:53,514 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.26262626262626265 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.8787878787878789].
2023-08-22 09:40:10,062 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:40:10,062 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.37373737373737376, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009697 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:40:13,360 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=0.008182 ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.24242424242424243].
2023-08-22 09:40:13,361 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0.30303030303030304 ,nesterov=True ,amsgrad=True ,weight_decay=0.008182 ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.24242424242424243].
2023-08-22 09:40:34,210 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.8585858585858587 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:40:34,210 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9797979797979799, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.8585858585858587 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.18181818181818182 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:40:36,697 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:40:36,698 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:40:55,644 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.595959595959596 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.24242424242424243].
2023-08-22 09:40:55,644 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.007778000000000001 ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.595959595959596 ,epsilon=0.0009393939454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.38383838383838387 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.24242424242424243].
2023-08-22 09:41:09,169 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-22 09:41:09,170 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.7272727272727273].
2023-08-22 09:41:31,408 INFO: Applying selection operators for generation 24.
2023-08-22 09:41:31,409 INFO: Applying genetic operators for generation 24.
2023-08-22 09:41:31,410 INFO: Evaluating fitness for for generation 24.
2023-08-22 09:41:31,410 INFO: Will evaluate fitness for 14 individuals.
2023-08-22 09:41:32,052 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.4141414141414142, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4747474747474748].
2023-08-22 09:41:32,052 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.4141414141414142, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=False ,weight_decay=0.008687 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5555555555555556 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.4747474747474748].
2023-08-22 09:41:35,216 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.25252525252525254 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.3535353535353536].
2023-08-22 09:41:35,217 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.25252525252525254 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.3535353535353536].
2023-08-22 09:41:52,162 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:41:52,162 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.09090909090909091 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:42:07,413 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:42:07,413 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.7070707070707072 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:42:12,226 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:42:12,226 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:42:31,052 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:42:31,052 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:42:34,335 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.393939393939394 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.32323232323232326].
2023-08-22 09:42:34,335 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.393939393939394 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.2222222222222222 ,initial_accumulator_value=0.595959595959596 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.32323232323232326].
2023-08-22 09:42:54,665 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:42:54,666 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:43:01,887 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:43:01,887 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:43:14,783 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:43:14,783 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:43:29,488 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.9494949494949496].
2023-08-22 09:43:29,488 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.9494949494949496].
2023-08-22 09:43:35,021 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:43:35,021 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:43:56,702 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:43:56,702 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:43:57,244 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0.9191919191919192 ,nesterov=False ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.010101010101010102].
2023-08-22 09:43:57,244 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0.9191919191919192 ,nesterov=False ,amsgrad=True ,weight_decay=0.0036370000000000005 ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.3434343434343435 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.010101010101010102].
2023-08-22 09:44:24,586 INFO: Applying selection operators for generation 25.
2023-08-22 09:44:24,586 INFO: Applying genetic operators for generation 25.
2023-08-22 09:44:24,587 INFO: Evaluating fitness for for generation 25.
2023-08-22 09:44:24,587 INFO: Will evaluate fitness for 14 individuals.
2023-08-22 09:44:25,631 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.3434343434343435 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.8787878787878789].
2023-08-22 09:44:25,631 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6363636363636365 ,rho=0.3434343434343435 ,epsilon=0.0005050505545454545 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6363636363636365 ,beta=0.8787878787878789].
2023-08-22 09:44:26,426 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:44:26,426 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:44:48,029 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:44:48,029 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:44:54,867 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.31313131313131315 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.10101010101010102].
2023-08-22 09:44:54,867 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.494949494949495, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.31313131313131315 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.2727272727272727 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.10101010101010102].
2023-08-22 09:45:07,766 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:45:07,766 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:45:21,494 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:45:21,495 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:45:41,484 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:45:41,484 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:45:44,205 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.4646464646464647].
2023-08-22 09:45:44,206 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.595959595959596 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.4646464646464647].
2023-08-22 09:46:05,058 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:46:05,059 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:46:12,583 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:46:12,583 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:46:33,107 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:46:33,107 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:46:33,722 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:46:33,722 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:46:56,144 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:46:56,145 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:47:15,853 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:47:15,853 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:47:33,868 INFO: Applying selection operators for generation 26.
2023-08-22 09:47:33,868 INFO: Applying genetic operators for generation 26.
2023-08-22 09:47:33,870 INFO: Evaluating fitness for for generation 26.
2023-08-22 09:47:33,870 INFO: Will evaluate fitness for 18 individuals.
2023-08-22 09:47:35,406 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=1.0 ,beta_2=0.696969696969697 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.6363636363636365].
2023-08-22 09:47:35,406 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=1.0 ,beta_2=0.696969696969697 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.6363636363636365].
2023-08-22 09:47:35,969 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7272727272727273 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.9494949494949496].
2023-08-22 09:47:35,969 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7272727272727273 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=False ,beta_1=0.9595959595959597 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.9494949494949496].
2023-08-22 09:47:55,614 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.393939393939394].
2023-08-22 09:47:55,614 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.393939393939394].
2023-08-22 09:48:04,562 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006061000000000001 ,use_ema=False ,ema_momentum=0.11111111111111112 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.24242424242424243].
2023-08-22 09:48:04,562 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9191919191919192, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.006061000000000001 ,use_ema=False ,ema_momentum=0.11111111111111112 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.24242424242424243].
2023-08-22 09:48:23,190 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.5656565656565657 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.696969696969697 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.26262626262626265].
2023-08-22 09:48:23,190 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7676767676767677, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.5656565656565657 ,epsilon=0.00046464651818181813 ,centered=True ,beta_1=0.888888888888889 ,beta_2=0.696969696969697 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.26262626262626265].
2023-08-22 09:48:27,294 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.4646464646464647].
2023-08-22 09:48:27,295 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.888888888888889 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8080808080808082 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9393939393939394 ,beta=0.4646464646464647].
2023-08-22 09:48:57,319 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.797979797979798 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.24242424242424243].
2023-08-22 09:48:57,319 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5858585858585859, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.7474747474747475 ,rho=0.797979797979798 ,epsilon=0.00010101019090909089 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.24242424242424243].
2023-08-22 09:49:03,885 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:49:03,885 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:49:23,082 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8787878787878789, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.24242424242424243].
2023-08-22 09:49:23,082 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8787878787878789, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6767676767676768 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.030303030303030304 ,beta=0.24242424242424243].
2023-08-22 09:49:42,033 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:49:42,033 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:49:45,630 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:49:45,631 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:50:12,942 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.17171717171717174 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.7676767676767677].
2023-08-22 09:50:12,942 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.26262626262626265, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.13131313131313133 ,rho=0.17171717171717174 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.8282828282828283 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.7676767676767677].
2023-08-22 09:50:13,687 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:50:13,687 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:50:34,527 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.24242424242424243].
2023-08-22 09:50:34,527 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.6262626262626263, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.9494949494949496 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8585858585858587 ,beta=0.24242424242424243].
2023-08-22 09:50:44,345 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.8484848484848485 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.24242424242424243].
2023-08-22 09:50:44,345 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.8484848484848485 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.24242424242424243].
2023-08-22 09:51:04,832 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:51:04,833 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:51:20,300 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.4545454545454546].
2023-08-22 09:51:20,301 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.696969696969697 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.4545454545454546].
2023-08-22 09:51:55,931 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:51:55,932 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:52:49,179 INFO: Applying selection operators for generation 27.
2023-08-22 09:52:49,179 INFO: Applying genetic operators for generation 27.
2023-08-22 09:52:49,180 INFO: Evaluating fitness for for generation 27.
2023-08-22 09:52:49,180 INFO: Will evaluate fitness for 18 individuals.
2023-08-22 09:52:53,130 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:52:53,130 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:53:00,975 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 09:53:00,975 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 09:53:21,768 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:53:21,768 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:53:38,673 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:53:38,673 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:53:47,365 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.37373737373737376, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.36363636363636365 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.24242424242424243].
2023-08-22 09:53:47,365 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.37373737373737376, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.36363636363636365 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.19191919191919193 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.24242424242424243].
2023-08-22 09:54:02,390 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.00020300000000000003 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9292929292929294 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:54:02,390 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.00020300000000000003 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9292929292929294 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.9494949494949496 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:54:08,416 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:54:08,416 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:54:23,900 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:54:23,901 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:54:34,259 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=1.0 ,beta_2=0.696969696969697 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.6363636363636365].
2023-08-22 09:54:34,259 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=1.0 ,beta_2=0.696969696969697 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.6363636363636365].
2023-08-22 09:55:00,509 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0.9393939393939394 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.3434343434343435].
2023-08-22 09:55:00,510 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0.9393939393939394 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.0007878788090909091 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.3434343434343435].
2023-08-22 09:55:03,665 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:55:03,666 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:55:28,568 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.24242424242424243].
2023-08-22 09:55:28,568 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7373737373737375 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.24242424242424243].
2023-08-22 09:55:40,546 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:55:40,546 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:55:53,361 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:55:53,361 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:56:03,561 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:56:03,562 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:56:12,648 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:56:12,648 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:56:28,200 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:56:28,200 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:56:55,328 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:56:55,329 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:57:26,893 INFO: Applying selection operators for generation 28.
2023-08-22 09:57:26,893 INFO: Applying genetic operators for generation 28.
2023-08-22 09:57:26,894 INFO: Evaluating fitness for for generation 28.
2023-08-22 09:57:26,894 INFO: Will evaluate fitness for 13 individuals.
2023-08-22 09:57:28,816 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:57:28,816 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:57:29,583 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 09:57:29,583 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 09:57:48,705 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.18181818181818182 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.24242424242424243].
2023-08-22 09:57:48,705 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.18181818181818182 ,epsilon=1.010110909090909e-05 ,centered=True ,beta_1=0.36363636363636365 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.24242424242424243].
2023-08-22 09:58:00,724 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:58:00,724 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:58:07,779 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.5050505050505051].
2023-08-22 09:58:07,779 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0004949495454545454 ,centered=True ,beta_1=0.17171717171717174 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.5050505050505051].
2023-08-22 09:58:26,358 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:58:26,359 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:58:26,978 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.2828282828282829].
2023-08-22 09:58:26,979 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.003839000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7272727272727273 ,initial_accumulator_value=0.48484848484848486 ,l1_regularization_strength=0.0 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.494949494949495 ,beta=0.2828282828282829].
2023-08-22 09:58:49,623 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.5252525252525253 ,nesterov=False ,amsgrad=True ,weight_decay=0.009798000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.24242424242424243].
2023-08-22 09:58:49,624 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.5252525252525253 ,nesterov=False ,amsgrad=True ,weight_decay=0.009798000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.04040404040404041 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.24242424242424243].
2023-08-22 09:58:55,202 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 09:58:55,202 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 09:59:22,633 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:59:22,633 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 09:59:32,245 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:59:32,246 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 09:59:44,857 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.010101010101010102 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.24242424242424243].
2023-08-22 09:59:44,857 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.010101010101010102 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.24242424242424243].
2023-08-22 10:00:01,461 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.24242424242424243].
2023-08-22 10:00:01,461 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.020202020202020204 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.24242424242424243].
2023-08-22 10:00:29,000 INFO: Applying selection operators for generation 29.
2023-08-22 10:00:29,000 INFO: Applying genetic operators for generation 29.
2023-08-22 10:00:29,002 INFO: Evaluating fitness for for generation 29.
2023-08-22 10:00:29,002 INFO: Will evaluate fitness for 14 individuals.
2023-08-22 10:00:31,579 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:00:31,579 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:00:39,711 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6060606060606061, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.27272727272727276].
2023-08-22 10:00:39,712 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6060606060606061, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.25252525252525254 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.5454545454545454 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.38383838383838387 ,beta=0.27272727272727276].
2023-08-22 10:00:54,835 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 10:00:54,835 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 10:01:16,966 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:01:16,966 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:01:17,253 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:01:17,254 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:01:41,707 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.24242424242424243].
2023-08-22 10:01:41,707 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.393939393939394 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.23232323232323235 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.24242424242424243].
2023-08-22 10:02:00,575 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004445000000000001 ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.48484848484848486 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.21212121212121213].
2023-08-22 10:02:00,575 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004445000000000001 ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.48484848484848486 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.21212121212121213].
2023-08-22 10:02:26,818 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:02:26,818 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:02:51,730 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:02:51,731 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:03:00,056 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:03:00,056 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:03:27,102 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7474747474747475, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.8787878787878789].
2023-08-22 10:03:27,103 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7474747474747475, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.22222222222222224 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.8787878787878789].
2023-08-22 10:03:42,335 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:03:42,336 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:04:11,566 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:04:11,566 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:04:34,837 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.33333333333333337 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.787878787878788].
2023-08-22 10:04:34,837 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.9191919191919192 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.33333333333333337 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.787878787878788].
2023-08-22 10:05:21,384 INFO: Applying selection operators for generation 30.
2023-08-22 10:05:21,384 INFO: Applying genetic operators for generation 30.
2023-08-22 10:05:21,385 INFO: Evaluating fitness for for generation 30.
2023-08-22 10:05:21,385 INFO: Will evaluate fitness for 17 individuals.
2023-08-22 10:05:23,781 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:05:23,781 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:05:33,781 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:05:33,781 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:05:55,269 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:05:55,270 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:06:20,454 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:06:20,455 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:06:21,609 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:06:21,609 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:06:47,381 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:06:47,382 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:07:01,583 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:07:01,583 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:07:11,430 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:07:11,430 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:07:41,803 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:07:41,804 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:07:42,097 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7676767676767677 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:07:42,097 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.7676767676767677 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:08:08,713 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:08:08,713 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:08:35,324 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.797979797979798, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.33333333333333337 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.24242424242424243].
2023-08-22 10:08:35,325 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.797979797979798, momentum=0.8585858585858587 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.33333333333333337 ,epsilon=0.0001313132181818182 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.24242424242424243].
2023-08-22 10:08:37,008 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.16161616161616163, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.98989898989899 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8484848484848485].
2023-08-22 10:08:37,008 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.16161616161616163, momentum=0.8484848484848485 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.98989898989899 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.8484848484848485].
2023-08-22 10:09:06,405 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.4545454545454546, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.696969696969697 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.04040404040404041].
2023-08-22 10:09:06,406 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.4545454545454546, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0004050000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.06060606060606061 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.5555555555555556 ,beta_2=0.696969696969697 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.04040404040404041].
2023-08-22 10:09:26,658 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:09:26,659 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:09:58,836 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:09:58,836 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:10:54,664 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:10:54,664 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:11:30,504 INFO: Applying selection operators for generation 31.
2023-08-22 10:11:30,505 INFO: Applying genetic operators for generation 31.
2023-08-22 10:11:30,506 INFO: Evaluating fitness for for generation 31.
2023-08-22 10:11:30,506 INFO: Will evaluate fitness for 15 individuals.
2023-08-22 10:11:39,589 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:11:39,590 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:11:39,752 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.8484848484848485 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:11:39,753 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5050505050505051 ,rho=0.8484848484848485 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:12:14,890 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.01 ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.5252525252525253 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 10:12:14,891 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.01 ,use_ema=False ,ema_momentum=0.20202020202020204 ,rho=0.5252525252525253 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8585858585858587].
2023-08-22 10:13:04,463 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:13:04,463 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:13:33,544 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.9292929292929294 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.24242424242424243].
2023-08-22 10:13:33,544 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7676767676767677 ,rho=0.9292929292929294 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.25252525252525254 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.020202020202020204 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.24242424242424243].
2023-08-22 10:14:21,809 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:14:21,810 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:14:31,358 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:14:31,358 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:15:25,018 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:15:25,019 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:15:31,195 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.22222222222222224, momentum=0.42424242424242425 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.14141414141414144 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.6060606060606061].
2023-08-22 10:15:31,195 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.22222222222222224, momentum=0.42424242424242425 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.14141414141414144 ,epsilon=0.00025252532727272723 ,centered=True ,beta_1=0.8383838383838385 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.6060606060606061].
2023-08-22 10:16:05,321 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:16:05,321 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:16:55,793 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.38383838383838387 ,rho=0.8080808080808082 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.24242424242424243].
2023-08-22 10:16:55,794 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0.9595959595959597 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.38383838383838387 ,rho=0.8080808080808082 ,epsilon=0.0007373737636363636 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.898989898989899 ,initial_accumulator_value=0.8484848484848485 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.24242424242424243].
2023-08-22 10:17:04,253 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.38383838383838387, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.0 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=1.0].
2023-08-22 10:17:04,254 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.38383838383838387, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8585858585858587 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.0 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=1.0].
2023-08-22 10:18:04,108 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:18:04,109 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:18:33,139 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0007070707363636364 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.5858585858585859].
2023-08-22 10:18:33,139 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0007070707363636364 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.18181818181818182 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.5858585858585859].
2023-08-22 10:18:45,185 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:18:45,185 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:19:34,607 INFO: Applying selection operators for generation 32.
2023-08-22 10:19:34,607 INFO: Applying genetic operators for generation 32.
2023-08-22 10:19:34,609 INFO: Evaluating fitness for for generation 32.
2023-08-22 10:19:34,609 INFO: Will evaluate fitness for 15 individuals.
2023-08-22 10:19:35,135 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:19:35,135 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:19:35,156 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:19:35,156 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:20:12,877 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.2828282828282829 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.24242424242424243].
2023-08-22 10:20:12,877 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.18181818181818182 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.2828282828282829 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9595959595959597 ,beta=0.24242424242424243].
2023-08-22 10:20:16,310 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:20:16,310 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:20:57,486 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:20:57,487 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:21:03,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.3434343434343435 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.24242424242424243].
2023-08-22 10:21:03,835 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7676767676767677, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.5252525252525253 ,rho=0.3434343434343435 ,epsilon=0.0009898989909090908 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8181818181818182 ,beta=0.24242424242424243].
2023-08-22 10:21:30,701 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:21:30,702 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:22:01,127 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:22:01,127 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.686868686868687 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.19191919191919193 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.5252525252525253 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:22:14,899 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.24242424242424243].
2023-08-22 10:22:14,900 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4747474747474748, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007980000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.48484848484848486 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.08080808080808081 ,l1_regularization_strength=0.6363636363636365 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.24242424242424243].
2023-08-22 10:22:52,449 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:22:52,450 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:23:23,808 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:23:23,809 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:23:26,231 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:23:26,231 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:24:02,651 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:24:02,651 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:24:20,929 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:24:20,929 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:24:40,306 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.2828282828282829 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.888888888888889 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.24242424242424243].
2023-08-22 10:24:40,306 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.0, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.2828282828282829 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.888888888888889 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.09090909090909091 ,beta=0.24242424242424243].
2023-08-22 10:25:19,975 INFO: Applying selection operators for generation 33.
2023-08-22 10:25:19,975 INFO: Applying genetic operators for generation 33.
2023-08-22 10:25:19,977 INFO: Evaluating fitness for for generation 33.
2023-08-22 10:25:19,977 INFO: Will evaluate fitness for 15 individuals.
2023-08-22 10:25:23,325 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004142000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.7575757575757577].
2023-08-22 10:25:23,326 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004142000000000001 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6464646464646465 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.7575757575757577].
2023-08-22 10:25:23,774 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:25:23,774 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:26:14,235 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:26:14,235 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:26:30,778 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.24242424242424243].
2023-08-22 10:26:30,778 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6767676767676768, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.5252525252525253 ,beta_2=0.6565656565656566 ,learning_rate_power=-0.7171717171717171 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.24242424242424243].
2023-08-22 10:26:56,565 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0.5050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.48484848484848486].
2023-08-22 10:26:56,566 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0.5050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.787878787878788 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.1717171717171716 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.48484848484848486].
2023-08-22 10:28:05,176 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:28:05,176 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:28:54,247 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:28:54,248 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:29:12,570 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:29:12,570 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:30:06,843 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:30:06,844 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:30:31,694 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.11111111111111112 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:30:31,694 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6666666666666667 ,rho=0.11111111111111112 ,epsilon=0.00014141422727272727 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.020202020202020204 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:31:04,636 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.37373737373737376 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.24242424242424243].
2023-08-22 10:31:04,637 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.37373737373737376 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.24242424242424243].
2023-08-22 10:32:05,109 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:32:05,110 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:32:08,810 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:32:08,810 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6565656565656566, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:33:05,969 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:33:05,970 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:33:28,480 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:33:28,481 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:35:39,960 INFO: Applying selection operators for generation 34.
2023-08-22 10:35:39,961 INFO: Applying genetic operators for generation 34.
2023-08-22 10:35:39,963 INFO: Evaluating fitness for for generation 34.
2023-08-22 10:35:39,963 INFO: Will evaluate fitness for 16 individuals.
2023-08-22 10:35:48,852 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:35:48,852 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:36:16,622 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.6161616161616162 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.38383838383838387 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:36:16,622 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.6161616161616162 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.33333333333333337 ,rho=0.38383838383838387 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:36:29,720 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:36:29,720 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:37:15,971 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:37:15,972 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:38:02,208 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:38:02,209 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:38:49,445 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.9595959595959597, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.7171717171717172 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6060606060606061].
2023-08-22 10:38:49,446 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.9595959595959597, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.008788 ,use_ema=True ,ema_momentum=0.16161616161616163 ,rho=0.7171717171717172 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6060606060606061].
2023-08-22 10:38:59,661 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:38:59,661 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:40:11,212 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.3434343434343435 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.17171717171717174].
2023-08-22 10:40:11,213 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.3434343434343435 ,epsilon=0.00044444449999999996 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.17171717171717174].
2023-08-22 10:40:31,272 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:40:31,272 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:41:35,820 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:41:35,821 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:41:55,764 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:41:55,764 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:42:27,497 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7777777777777778, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.24242424242424243].
2023-08-22 10:42:27,497 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7777777777777778, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.5151515151515152 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.6161616161616162 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.18181818181818182 ,beta=0.24242424242424243].
2023-08-22 10:42:50,808 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:42:50,808 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:42:56,953 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:42:56,953 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:43:13,054 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9494949494949496, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.25252525252525254 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.48484848484848486].
2023-08-22 10:43:13,054 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9494949494949496, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.007374000000000001 ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.25252525252525254 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.48484848484848486].
2023-08-22 10:43:21,348 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:43:21,348 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:43:53,726 INFO: Applying selection operators for generation 35.
2023-08-22 10:43:53,727 INFO: Applying genetic operators for generation 35.
2023-08-22 10:43:53,728 INFO: Evaluating fitness for for generation 35.
2023-08-22 10:43:53,728 INFO: Will evaluate fitness for 13 individuals.
2023-08-22 10:44:05,701 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8484848484848485].
2023-08-22 10:44:05,701 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.6161616161616162 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8484848484848485].
2023-08-22 10:44:05,722 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.797979797979798, momentum=0.696969696969697 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.0 ,rho=0.3434343434343435 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.24242424242424243].
2023-08-22 10:44:05,722 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.797979797979798, momentum=0.696969696969697 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.0 ,rho=0.3434343434343435 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.9090909090909092 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.24242424242424243].
2023-08-22 10:44:48,534 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:44:48,534 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:45:06,845 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:45:06,845 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:45:32,638 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.24242424242424243 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.98989898989899].
2023-08-22 10:45:32,638 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8181818181818182, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.24242424242424243 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.98989898989899].
2023-08-22 10:45:52,637 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:45:52,637 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:46:13,601 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.12121212121212122, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.5454545454545455 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.9797979797979799].
2023-08-22 10:46:13,602 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.12121212121212122, momentum=0.37373737373737376 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.5454545454545455 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.8080808080808081 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.9797979797979799].
2023-08-22 10:47:02,627 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:47:02,628 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:47:07,379 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:47:07,379 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:47:58,227 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.696969696969697 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.08080808080808081].
2023-08-22 10:47:58,227 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.009798000000000001 ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.8484848484848485 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.14141414141414144 ,beta_2=0.696969696969697 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.595959595959596 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.08080808080808081].
2023-08-22 10:48:04,432 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6060606060606061 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 10:48:04,432 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.6060606060606061 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.05050505050505051 ,learning_rate_power=-0.8787878787878788 ,initial_accumulator_value=0.787878787878788 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.24242424242424243].
2023-08-22 10:48:48,705 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:48:48,705 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:49:55,271 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:49:55,272 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:50:54,057 INFO: Applying selection operators for generation 36.
2023-08-22 10:50:54,058 INFO: Applying genetic operators for generation 36.
2023-08-22 10:50:54,060 INFO: Evaluating fitness for for generation 36.
2023-08-22 10:50:54,060 INFO: Will evaluate fitness for 12 individuals.
2023-08-22 10:51:05,111 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:51:05,111 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:51:11,267 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:51:11,267 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:52:03,748 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.696969696969697 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:52:03,749 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.00046464651818181813 ,centered=False ,beta_1=0.15151515151515152 ,beta_2=0.696969696969697 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:52:31,303 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.5555555555555556 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:52:31,303 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.13131313131313133 ,rho=0.5555555555555556 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:52:42,962 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:52:42,962 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:53:30,820 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:53:30,821 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:54:10,716 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:54:10,716 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:54:44,206 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:54:44,207 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:55:00,136 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:55:00,136 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.10101010101010102 ,l1_regularization_strength=0.05050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 10:55:35,960 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:55:35,961 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:55:39,005 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.5353535353535354 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7373737373737375].
2023-08-22 10:55:39,005 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.5353535353535354 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.37373737373737376 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.25252525252525254 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.7373737373737375].
2023-08-22 10:56:17,145 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5858585858585859 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.24242424242424243].
2023-08-22 10:56:17,145 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5858585858585859 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.24242424242424243].
2023-08-22 10:57:02,934 INFO: Applying selection operators for generation 37.
2023-08-22 10:57:02,935 INFO: Applying genetic operators for generation 37.
2023-08-22 10:57:02,936 INFO: Evaluating fitness for for generation 37.
2023-08-22 10:57:02,936 INFO: Will evaluate fitness for 11 individuals.
2023-08-22 10:57:09,156 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.010101010101010102].
2023-08-22 10:57:09,156 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.25252525252525254, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.38383838383838387 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.4040404040404041 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.010101010101010102].
2023-08-22 10:57:17,357 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:57:17,357 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:58:01,038 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.48484848484848486].
2023-08-22 10:58:01,039 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.48484848484848486].
2023-08-22 10:58:48,941 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.3434343434343435 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.696969696969697 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.98989898989899].
2023-08-22 10:58:48,942 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.3434343434343435 ,epsilon=0.0005959596363636363 ,centered=False ,beta_1=0.3434343434343435 ,beta_2=0.696969696969697 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.98989898989899 ,l1_regularization_strength=0.5050505050505051 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.98989898989899].
2023-08-22 10:59:13,054 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:59:13,055 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:59:30,221 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 10:59:30,222 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:00:19,858 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:00:19,858 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7474747474747475 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:00:29,054 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:00:29,054 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0003838384454545454 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:00:58,395 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5858585858585859 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.24242424242424243].
2023-08-22 11:00:58,395 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.5858585858585859 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.24242424242424243].
2023-08-22 11:01:13,100 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:01:13,100 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:01:47,336 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:01:47,336 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:02:13,634 INFO: Applying selection operators for generation 38.
2023-08-22 11:02:13,634 INFO: Applying genetic operators for generation 38.
2023-08-22 11:02:13,635 INFO: Evaluating fitness for for generation 38.
2023-08-22 11:02:13,635 INFO: Will evaluate fitness for 17 individuals.
2023-08-22 11:02:18,794 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.48484848484848486].
2023-08-22 11:02:18,794 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.48484848484848486].
2023-08-22 11:02:22,547 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:02:22,547 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:02:54,898 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:02:54,899 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:03:03,973 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.13131313131313133 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.4646464646464647 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.13131313131313133].
2023-08-22 11:03:03,973 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0016170000000000002 ,use_ema=True ,ema_momentum=0.7777777777777778 ,rho=0.13131313131313133 ,epsilon=0.0006565656909090909 ,centered=True ,beta_1=0.4646464646464647 ,beta_2=0.5656565656565657 ,learning_rate_power=-0.202020202020202 ,initial_accumulator_value=0.6565656565656566 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.13131313131313133].
2023-08-22 11:03:39,335 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:03:39,336 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:04:26,370 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.09090909090909091].
2023-08-22 11:04:26,370 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.09090909090909091].
2023-08-22 11:04:30,980 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:04:30,980 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:04:59,674 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:04:59,674 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:05:19,792 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:05:19,792 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:05:44,577 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:05:44,578 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0007474747727272727 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.9494949494949496 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:06:21,357 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:06:21,357 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:06:53,349 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.48484848484848486].
2023-08-22 11:06:53,349 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.29292929292929293 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.19191919191919193 ,learning_rate_power=-0.48484848484848475 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.48484848484848486].
2023-08-22 11:06:56,496 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:06:56,496 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:07:32,795 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:07:32,795 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:08:29,838 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.4545454545454546 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.3535353535353536].
2023-08-22 11:08:29,839 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.4141414141414142, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.12121212121212122 ,rho=0.4545454545454546 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.3535353535353536].
2023-08-22 11:08:35,625 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:08:35,626 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:09:16,920 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:09:16,921 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:09:57,245 INFO: Applying selection operators for generation 39.
2023-08-22 11:09:57,245 INFO: Applying genetic operators for generation 39.
2023-08-22 11:09:57,247 INFO: Evaluating fitness for for generation 39.
2023-08-22 11:09:57,247 INFO: Will evaluate fitness for 15 individuals.
2023-08-22 11:10:00,689 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.10101010101010102 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.6666666666666667].
2023-08-22 11:10:00,689 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.10101010101010102 ,epsilon=0.0005252525727272728 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.6060606060606061 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8080808080808082 ,beta=0.6666666666666667].
2023-08-22 11:10:09,741 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:10:09,742 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:10:54,304 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:10:54,305 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:11:09,099 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:11:09,099 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:11:48,618 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5555555555555556, momentum=0.6262626262626263 ,nesterov=False ,amsgrad=False ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9595959595959597 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:11:48,618 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5555555555555556, momentum=0.6262626262626263 ,nesterov=False ,amsgrad=False ,weight_decay=0.004041 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.9595959595959597 ,epsilon=0.00041414147272727267 ,centered=False ,beta_1=0.6666666666666667 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:12:21,710 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.888888888888889 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 11:12:21,710 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3434343434343435 ,rho=0.888888888888889 ,epsilon=0.0007070707363636364 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.24242424242424243].
2023-08-22 11:13:19,752 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.3434343434343435 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.494949494949495].
2023-08-22 11:13:19,753 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.8383838383838385, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.3434343434343435 ,epsilon=0.00032323239090909086 ,centered=False ,beta_1=0.686868686868687 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.17171717171717174 ,beta=0.494949494949495].
2023-08-22 11:14:02,958 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-22 11:14:02,958 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.38383838383838387, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.686868686868687 ,beta=0.24242424242424243].
2023-08-22 11:14:31,376 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.696969696969697 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.48484848484848486].
2023-08-22 11:14:31,377 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.010101010101010102 ,nesterov=True ,amsgrad=True ,weight_decay=0.0025260000000000005 ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.696969696969697 ,learning_rate_power=-0.3535353535353535 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=1.0 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.48484848484848486].
2023-08-22 11:14:54,070 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:14:54,071 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:15:34,582 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.48484848484848486].
2023-08-22 11:15:34,582 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.48484848484848486].
2023-08-22 11:16:07,115 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.3434343434343435 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.24242424242424243].
2023-08-22 11:16:07,116 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.16161616161616163, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.3434343434343435 ,epsilon=0.0003636364272727272 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.24242424242424243].
2023-08-22 11:16:33,028 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:16:33,028 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:17:18,411 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:17:18,411 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.050505050505050386 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:17:46,560 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:17:46,560 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.4545454545454546 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:18:46,998 INFO: Applying selection operators for generation 40.
2023-08-22 11:18:46,999 INFO: Applying genetic operators for generation 40.
2023-08-22 11:18:47,000 INFO: Evaluating fitness for for generation 40.
2023-08-22 11:18:47,000 INFO: Will evaluate fitness for 18 individuals.
2023-08-22 11:18:54,156 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:18:54,156 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:18:54,337 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:18:54,338 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:19:33,224 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:19:33,224 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:20:05,819 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:20:05,819 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:20:12,872 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:20:12,872 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:20:54,766 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:20:54,766 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:20:56,655 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:20:56,655 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:21:34,791 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:21:34,791 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:21:36,442 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:21:36,442 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:22:13,034 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.3434343434343435 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.24242424242424243].
2023-08-22 11:22:13,034 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.3434343434343435 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.24242424242424243].
2023-08-22 11:22:31,297 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.3434343434343435 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.24242424242424243].
2023-08-22 11:22:31,298 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.494949494949495 ,rho=0.3434343434343435 ,epsilon=0.00015151523636363636 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.9696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.08080808080808081 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.24242424242424243].
2023-08-22 11:23:27,297 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:23:27,297 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:23:59,516 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:23:59,516 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:24:22,828 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:24:22,829 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:24:31,595 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:24:31,596 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:25:01,159 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.696969696969697 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.24242424242424243].
2023-08-22 11:25:01,160 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.696969696969697 ,learning_rate_power=-0.3232323232323232 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.24242424242424243].
2023-08-22 11:25:55,008 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.32323232323232326 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.7575757575757577].
2023-08-22 11:25:55,008 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0.32323232323232326 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.696969696969697 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.888888888888889 ,beta=0.7575757575757577].
2023-08-22 11:26:48,664 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:26:48,665 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.16161616161616163, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9494949494949496 ,rho=0.3434343434343435 ,epsilon=0.0009090909181818181 ,centered=False ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.24242424242424243].
2023-08-22 11:27:13,151 INFO: Saving the results to the folder specified in the arguments.
2023-08-22 11:27:13,155 INFO: Closing the multiprocessing pool.
2023-08-22 11:27:13,155 INFO: Experiment finished.

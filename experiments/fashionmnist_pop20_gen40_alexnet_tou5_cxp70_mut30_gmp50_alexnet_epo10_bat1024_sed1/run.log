2023-08-21 20:05:24,488 INFO: Starting experiment with the arguments logged below.
2023-08-21 20:05:24,489 INFO: Namespace(results_path='/mnt/lustre/users/mbornman1/evoopt-cnn/experiments/fashionmnist_pop20_gen40_alexnet_tou5_cxp70_mut30_gmp50_alexnet_epo10_bat1024_sed1', cpu_count=2, seed=1, dataset='fashion_mnist', pop_size=20, ngen=40, model='alexnet', epochs=10, batch_size=1024, tournsize=5, cxpb=0.5, mutpb=0.2, gene_mut_prob=0.5)
2023-08-21 20:05:24,489 INFO: Setting the random number generator seed for this experiment.
2023-08-21 20:05:24,489 INFO: Initializing the multiprocessing pool.
2023-08-21 20:05:24,616 INFO: Running the evolutionary algorithm with the given hyper-parameters. This may take a while. Statistics for every generation will be printed below.
2023-08-21 20:05:24,616 INFO: Setting up DEAP toolbox.
2023-08-21 20:05:24,616 INFO: Registering individual initialization method.
2023-08-21 20:05:24,616 INFO: Registering population initialization method.
2023-08-21 20:05:24,616 INFO: Registering the selection method.
2023-08-21 20:05:24,617 INFO: Registering the evaluation method.
2023-08-21 20:05:24,617 INFO: Registering the genetic operators.
2023-08-21 20:05:24,617 INFO: Setting up the hall of fame and stats we want to keep track of.
2023-08-21 20:05:24,617 INFO: Initializing the initial population.
2023-08-21 20:05:24,623 INFO: Running the evolutionary algorithm.
2023-08-21 20:05:24,623 INFO: Evaluating fitness for the initial generation of individuals.
2023-08-21 20:05:24,623 INFO: Will evaluate fitness for 20 individuals.
2023-08-21 20:05:38,896 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-21 20:05:38,896 DEBUG: Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2023-08-21 20:05:41,701 DEBUG: Creating converter from 7 to 5
2023-08-21 20:05:41,701 DEBUG: Creating converter from 7 to 5
2023-08-21 20:05:41,701 DEBUG: Creating converter from 5 to 7
2023-08-21 20:05:41,701 DEBUG: Creating converter from 5 to 7
2023-08-21 20:05:41,701 DEBUG: Creating converter from 7 to 5
2023-08-21 20:05:41,701 DEBUG: Creating converter from 7 to 5
2023-08-21 20:05:41,701 DEBUG: Creating converter from 5 to 7
2023-08-21 20:05:41,701 DEBUG: Creating converter from 5 to 7
2023-08-21 20:05:59,675 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-21 20:05:59,676 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.006364000000000001 ,use_ema=False ,ema_momentum=0.8383838383838385 ,rho=0.48484848484848486 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.505050505050505 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.9797979797979799 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.0].
2023-08-21 20:05:59,677 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-21 20:05:59,677 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6464646464646465, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007576000000000001 ,use_ema=False ,ema_momentum=0.7575757575757577 ,rho=0.04040404040404041 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.4646464646464647 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.8989898989898991].
2023-08-21 20:06:29,613 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-21 20:06:29,613 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3434343434343435, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8383838383838385 ,rho=0.696969696969697 ,epsilon=1.010110909090909e-05 ,centered=False ,beta_1=0.8787878787878789 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.4545454545454545 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.030303030303030304 ,l2_regularization_strength=0.6767676767676768 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9797979797979799].
2023-08-21 20:06:34,339 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-21 20:06:34,340 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.05050505050505051 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.8282828282828284 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.6464646464646465 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-21 20:06:52,191 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-21 20:06:52,191 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6363636363636365, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.37373737373737376 ,rho=0.020202020202020204 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.23232323232323235 ,beta_2=0.8080808080808082 ,learning_rate_power=-0.07070707070707061 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.15151515151515152 ,l2_regularization_strength=0.9595959595959597 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.9292929292929294].
2023-08-21 20:06:57,472 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:06:57,472 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:07:14,293 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-21 20:07:14,293 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-21 20:07:19,420 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:07:19,420 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:07:39,660 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-21 20:07:39,661 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-21 20:07:41,185 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-21 20:07:41,185 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.10101010101010102, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=True ,ema_momentum=0.797979797979798 ,rho=0.23232323232323235 ,epsilon=0.00044444449999999996 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.797979797979798 ,initial_accumulator_value=0.32323232323232326 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.21212121212121213 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.3434343434343435].
2023-08-21 20:08:00,998 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-21 20:08:00,998 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.010101010101010102, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.25252525252525254 ,rho=0.4444444444444445 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.24242424242424243 ,l2_regularization_strength=0.6363636363636365 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.8585858585858587].
2023-08-21 20:08:05,680 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-21 20:08:05,680 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-21 20:08:22,580 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-21 20:08:22,580 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.37373737373737376, momentum=0.6464646464646465 ,nesterov=True ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.20202020202020204 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.7272727272727273 ,beta_2=0.17171717171717174 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.5454545454545455 ,l1_regularization_strength=0.27272727272727276 ,l2_regularization_strength=0.3434343434343435 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.12121212121212122].
2023-08-21 20:08:28,413 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:08:28,413 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:08:49,689 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-21 20:08:49,689 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7070707070707072, momentum=0.4444444444444445 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.17171717171717174 ,rho=0.21212121212121213 ,epsilon=0.0002121212909090909 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.5757575757575757 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.43434343434343436].
2023-08-21 20:08:50,311 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-21 20:08:50,311 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.30303030303030304, momentum=0.7575757575757577 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.20202020202020204 ,rho=0.9595959595959597 ,epsilon=0.0001313132181818182 ,centered=False ,beta_1=0.48484848484848486 ,beta_2=0.696969696969697 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.7070707070707072 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.9191919191919192 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.4040404040404041].
2023-08-21 20:09:13,337 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-21 20:09:13,338 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.26262626262626265, momentum=0.8383838383838385 ,nesterov=True ,amsgrad=True ,weight_decay=0.00010200000000000001 ,use_ema=False ,ema_momentum=0.5757575757575758 ,rho=0.5050505050505051 ,epsilon=0.00040404046363636356 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.08080808080808081 ,learning_rate_power=-0.5959595959595959 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.5858585858585859 ,l2_regularization_strength=0.14141414141414144 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.27272727272727276].
2023-08-21 20:09:17,390 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-21 20:09:17,390 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.14141414141414144, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.5252525252525253 ,epsilon=9.09091818181818e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.16161616161616163 ,learning_rate_power=-0.5656565656565656 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.787878787878788 ,l2_regularization_strength=0.7575757575757577 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.09090909090909091].
2023-08-21 20:09:35,656 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-21 20:09:35,656 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0.4545454545454546 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.10101010101010102 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.9696969696969697 ,beta_2=0.5757575757575758 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.8282828282828284 ,l2_shrinkage_regularization_strength=0.43434343434343436 ,beta=0.29292929292929293].
2023-08-21 20:09:58,421 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-21 20:09:58,421 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.393939393939394, momentum=0.05050505050505051 ,nesterov=True ,amsgrad=False ,weight_decay=0.007475000000000002 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.12121212121212122 ,epsilon=0.0006969697272727273 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9797979797979798 ,initial_accumulator_value=0.31313131313131315 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.09090909090909091 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.7070707070707072].
2023-08-21 20:10:26,457 INFO: Applying selection operators for generation 1.
2023-08-21 20:10:26,457 INFO: Applying genetic operators for generation 1.
2023-08-21 20:10:26,458 INFO: Evaluating fitness for for generation 1.
2023-08-21 20:10:26,458 INFO: Will evaluate fitness for 9 individuals.
2023-08-21 20:10:26,962 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.10101010101010102 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.7676767676767677].
2023-08-21 20:10:26,963 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.10101010101010102 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.4444444444444444 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.7676767676767677].
2023-08-21 20:10:26,994 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-21 20:10:26,995 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.6262626262626263, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=True ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.030303030303030304 ,epsilon=0.0002929293636363636 ,centered=False ,beta_1=0.7070707070707072 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.7676767676767676 ,initial_accumulator_value=0.11111111111111112 ,l1_regularization_strength=0.7070707070707072 ,l2_regularization_strength=0.32323232323232326 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.8686868686868687].
2023-08-21 20:10:47,466 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:10:47,466 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:10:50,577 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-21 20:10:50,577 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-21 20:11:06,714 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-21 20:11:06,715 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.5858585858585859, momentum=0.8989898989898991 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.494949494949495 ,rho=0.43434343434343436 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.33333333333333337 ,beta_2=0.13131313131313133 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.9393939393939394 ,l1_regularization_strength=0.6565656565656566 ,l2_regularization_strength=0.26262626262626265 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.5555555555555556].
2023-08-21 20:11:12,134 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6464646464646465 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.13131313131313133 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.05050505050505051].
2023-08-21 20:11:12,134 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6464646464646465 ,nesterov=False ,amsgrad=True ,weight_decay=0.005758000000000001 ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.13131313131313133 ,epsilon=0.0008282828454545454 ,centered=False ,beta_1=0.7171717171717172 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.05050505050505051].
2023-08-21 20:11:30,002 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.15151515151515152 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-21 20:11:30,002 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.33333333333333337, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0047480000000000005 ,use_ema=True ,ema_momentum=0.6060606060606061 ,rho=0.15151515151515152 ,epsilon=0.0003939394545454545 ,centered=False ,beta_1=0.36363636363636365 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.7878787878787878 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.29292929292929293 ,l2_regularization_strength=0.010101010101010102 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.25252525252525254].
2023-08-21 20:11:35,226 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-21 20:11:35,227 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5050505050505051, momentum=0.8686868686868687 ,nesterov=False ,amsgrad=True ,weight_decay=0.009495 ,use_ema=True ,ema_momentum=0.27272727272727276 ,rho=0.06060606060606061 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.20202020202020204 ,l2_regularization_strength=0.5353535353535354 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.32323232323232326].
2023-08-21 20:11:53,127 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:11:53,127 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=0.0003939394545454545 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.393939393939394 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:12:14,758 INFO: Applying selection operators for generation 2.
2023-08-21 20:12:14,758 INFO: Applying genetic operators for generation 2.
2023-08-21 20:12:14,760 INFO: Evaluating fitness for for generation 2.
2023-08-21 20:12:14,760 INFO: Will evaluate fitness for 16 individuals.
2023-08-21 20:12:15,271 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.888888888888889 ,epsilon=0.0002828283545454545 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.27272727272727276].
2023-08-21 20:12:15,271 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0.04040404040404041 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.888888888888889 ,epsilon=0.0002828283545454545 ,centered=False ,beta_1=0.9696969696969697 ,beta_2=0.29292929292929293 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.27272727272727276].
2023-08-21 20:12:15,296 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.494949494949495 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8181818181818182].
2023-08-21 20:12:15,296 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.494949494949495 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8181818181818182].
2023-08-21 20:12:35,835 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:12:35,835 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:12:36,423 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.26262626262626265].
2023-08-21 20:12:36,423 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.26262626262626265].
2023-08-21 20:12:58,565 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.9494949494949496 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.5454545454545455].
2023-08-21 20:12:58,565 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.9494949494949496 ,epsilon=0.00016161624545454545 ,centered=False ,beta_1=0.04040404040404041 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.6666666666666666 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.48484848484848486 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.5454545454545455].
2023-08-21 20:12:59,203 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:12:59,203 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:13:18,363 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:13:18,364 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:13:20,974 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:13:20,974 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.6565656565656566 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:13:37,944 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:13:37,944 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:13:43,241 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:13:43,241 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:13:57,273 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:13:57,273 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:14:04,058 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.494949494949495 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.15151515151515152].
2023-08-21 20:14:04,059 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.494949494949495 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.08080808080808081 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.4141414141414142 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.15151515151515152].
2023-08-21 20:14:18,154 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.43434343434343436].
2023-08-21 20:14:18,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.38383838383838376 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.43434343434343436].
2023-08-21 20:14:26,832 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6262626262626263].
2023-08-21 20:14:26,833 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7575757575757577 ,beta=0.6262626262626263].
2023-08-21 20:14:38,953 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:14:38,953 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.6565656565656566 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9494949494949496 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.7272727272727273 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.6464646464646465].
2023-08-21 20:14:47,607 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:14:47,607 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:15:07,726 INFO: Applying selection operators for generation 3.
2023-08-21 20:15:07,726 INFO: Applying genetic operators for generation 3.
2023-08-21 20:15:07,727 INFO: Evaluating fitness for for generation 3.
2023-08-21 20:15:07,727 INFO: Will evaluate fitness for 15 individuals.
2023-08-21 20:15:08,228 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.494949494949495 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8181818181818182].
2023-08-21 20:15:08,228 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.494949494949495 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8181818181818182].
2023-08-21 20:15:08,277 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.5050505050505051].
2023-08-21 20:15:08,277 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9090909090909092 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.494949494949495 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.5050505050505051].
2023-08-21 20:15:28,806 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.6565656565656566 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.9797979797979799].
2023-08-21 20:15:28,806 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.31313131313131315, momentum=0.16161616161616163 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.6565656565656566 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.22222222222222224 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.2525252525252525 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.9797979797979799].
2023-08-21 20:15:29,051 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.696969696969697].
2023-08-21 20:15:29,051 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.494949494949495, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=0.006869000000000001 ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.696969696969697].
2023-08-21 20:15:50,070 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:15:50,070 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:15:51,199 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:15:51,200 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:16:11,155 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:16:11,155 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:16:11,880 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.8181818181818182, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6464646464646465 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.6262626262626263].
2023-08-21 20:16:11,880 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.8181818181818182, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.3535353535353536 ,rho=0.6464646464646465 ,epsilon=0.00041414147272727267 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.22222222222222224 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.6262626262626263].
2023-08-21 20:16:30,278 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.5151515151515152 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8686868686868687].
2023-08-21 20:16:30,279 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.10101010101010102 ,rho=0.5151515151515152 ,epsilon=0.0009292929363636363 ,centered=False ,beta_1=0.8686868686868687 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.8282828282828284 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.8686868686868687].
2023-08-21 20:16:35,393 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.494949494949495 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:16:35,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.494949494949495 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:16:52,428 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8181818181818182].
2023-08-21 20:16:52,429 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8585858585858587 ,rho=0.6565656565656566 ,epsilon=0.00016161624545454545 ,centered=True ,beta_1=0.38383838383838387 ,beta_2=0.07070707070707072 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4646464646464647 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.7070707070707072 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.8181818181818182].
2023-08-21 20:16:56,226 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.26262626262626265].
2023-08-21 20:16:56,226 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.8080808080808082 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.19191919191919182 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.26262626262626265].
2023-08-21 20:17:13,347 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:17:13,348 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:17:16,903 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:17:16,904 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:17:33,637 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:17:33,637 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:17:53,854 INFO: Applying selection operators for generation 4.
2023-08-21 20:17:53,854 INFO: Applying genetic operators for generation 4.
2023-08-21 20:17:53,856 INFO: Evaluating fitness for for generation 4.
2023-08-21 20:17:53,856 INFO: Will evaluate fitness for 12 individuals.
2023-08-21 20:17:54,347 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.43434343434343436, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=0.0022230000000000006 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.6464646464646465 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.6767676767676768].
2023-08-21 20:17:54,347 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.43434343434343436, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=0.0022230000000000006 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.6464646464646465 ,epsilon=0.00031313138181818175 ,centered=False ,beta_1=0.6060606060606061 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.6767676767676768].
2023-08-21 20:17:54,386 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:17:54,386 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:18:14,073 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:18:14,073 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:18:14,845 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.6767676767676768 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.5454545454545455].
2023-08-21 20:18:14,845 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.6767676767676768 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.8989898989898991 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.5454545454545455].
2023-08-21 20:18:36,290 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:18:36,290 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:18:36,874 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:18:36,874 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:18:56,311 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:18:56,312 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:18:57,473 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:18:57,473 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:19:16,044 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.494949494949495 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:19:16,044 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5151515151515152, momentum=0.494949494949495 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:19:18,004 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:19:18,004 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:19:36,746 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7272727272727273, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.5454545454545455].
2023-08-21 20:19:36,746 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7272727272727273, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.00018181826363636362 ,centered=False ,beta_1=0.3535353535353536 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8383838383838383 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.5454545454545455].
2023-08-21 20:19:37,426 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.797979797979798].
2023-08-21 20:19:37,426 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.09090909090909091, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.00025252532727272723 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.797979797979798].
2023-08-21 20:20:04,978 INFO: Applying selection operators for generation 5.
2023-08-21 20:20:04,978 INFO: Applying genetic operators for generation 5.
2023-08-21 20:20:04,979 INFO: Evaluating fitness for for generation 5.
2023-08-21 20:20:04,979 INFO: Will evaluate fitness for 9 individuals.
2023-08-21 20:20:05,484 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.6767676767676768].
2023-08-21 20:20:05,484 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.6767676767676768, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.13131313131313133 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4646464646464647 ,beta=0.6767676767676768].
2023-08-21 20:20:05,507 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.6464646464646465 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6767676767676768].
2023-08-21 20:20:05,508 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.2828282828282829, momentum=0.5050505050505051 ,nesterov=True ,amsgrad=True ,weight_decay=0.0021220000000000006 ,use_ema=True ,ema_momentum=0.9292929292929294 ,rho=0.6464646464646465 ,epsilon=0.00012121220909090907 ,centered=False ,beta_1=0.6565656565656566 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.4040404040404041 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.6767676767676768].
2023-08-21 20:20:26,774 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:20:26,775 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:20:28,889 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:20:28,889 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:20:47,403 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.05050505050505051].
2023-08-21 20:20:47,403 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0.020202020202020204 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=7.070716363636363e-05 ,centered=False ,beta_1=0.787878787878788 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.6262626262626263 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.05050505050505051].
2023-08-21 20:20:49,554 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:20:49,555 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:21:09,260 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:21:09,260 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:21:10,840 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0.5656565656565657 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.6060606060606061 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.8989898989898991].
2023-08-21 20:21:10,841 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6767676767676768, momentum=0.5656565656565657 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.6060606060606061 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.8989898989898991].
2023-08-21 20:21:30,391 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:21:30,391 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:21:49,597 INFO: Applying selection operators for generation 6.
2023-08-21 20:21:49,597 INFO: Applying genetic operators for generation 6.
2023-08-21 20:21:49,599 INFO: Evaluating fitness for for generation 6.
2023-08-21 20:21:49,599 INFO: Will evaluate fitness for 15 individuals.
2023-08-21 20:21:50,098 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:21:50,099 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:21:50,112 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.020202020202020204, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.6464646464646465 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4040404040404041].
2023-08-21 20:21:50,112 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.020202020202020204, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=False ,weight_decay=0.007071000000000001 ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.6464646464646465 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.4141414141414142 ,beta_2=0.020202020202020204 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.23232323232323235 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.12121212121212122 ,beta=0.4040404040404041].
2023-08-21 20:22:10,741 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.05050505050505051].
2023-08-21 20:22:10,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.38383838383838387 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.05050505050505051].
2023-08-21 20:22:13,463 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9595959595959597 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.05050505050505051].
2023-08-21 20:22:13,463 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.9595959595959597 ,epsilon=0.0003636364272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.05050505050505051].
2023-08-21 20:22:31,844 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.10101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.4545454545454546].
2023-08-21 20:22:31,844 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.10101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.006061000000000001 ,use_ema=True ,ema_momentum=1.0 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.23232323232323235 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.4545454545454546].
2023-08-21 20:22:36,870 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:22:36,871 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:22:54,421 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:22:54,421 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:22:57,575 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:22:57,575 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:23:14,355 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.05050505050505051].
2023-08-21 20:23:14,355 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.05050505050505051].
2023-08-21 20:23:20,647 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.98989898989899 ,rho=0.37373737373737376 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:23:20,647 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3434343434343435, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=0.98989898989899 ,rho=0.37373737373737376 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6464646464646465 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:23:35,320 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.6767676767676768].
2023-08-21 20:23:35,320 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.6767676767676768].
2023-08-21 20:23:43,843 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:23:43,844 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:23:55,701 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:23:55,702 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:24:03,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:24:03,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.11111111111111112 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 20:24:15,735 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:24:15,735 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.10101010101010102 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.787878787878788 ,learning_rate_power=-0.14141414141414133 ,initial_accumulator_value=0.010101010101010102 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:24:36,160 INFO: Applying selection operators for generation 7.
2023-08-21 20:24:36,160 INFO: Applying genetic operators for generation 7.
2023-08-21 20:24:36,161 INFO: Evaluating fitness for for generation 7.
2023-08-21 20:24:36,161 INFO: Will evaluate fitness for 10 individuals.
2023-08-21 20:24:36,661 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:24:36,661 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:24:36,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:24:36,803 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:24:57,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:24:57,299 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:24:57,655 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.4646464646464647 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.33333333333333337].
2023-08-21 20:24:57,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9292929292929294, momentum=0.4545454545454546 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.4646464646464647 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.6262626262626263 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.26262626262626265 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.33333333333333337].
2023-08-21 20:25:18,408 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9494949494949496, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=1.0 ,rho=0.19191919191919193 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.686868686868687].
2023-08-21 20:25:18,408 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9494949494949496, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.007879 ,use_ema=False ,ema_momentum=1.0 ,rho=0.19191919191919193 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.5656565656565657 ,l1_regularization_strength=0.686868686868687 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9292929292929294 ,beta=0.686868686868687].
2023-08-21 20:25:20,842 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=1.0 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.5151515151515152].
2023-08-21 20:25:20,843 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=1.0 ,epsilon=7.070716363636363e-05 ,centered=True ,beta_1=0.7070707070707072 ,beta_2=0.4040404040404041 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.06060606060606061 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6464646464646465 ,beta=0.5151515151515152].
2023-08-21 20:25:40,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:25:40,898 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:25:42,194 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.27272727272727276 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.05050505050505051].
2023-08-21 20:25:42,194 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0.27272727272727276 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.9191919191919192 ,beta_2=0.7474747474747475 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.12121212121212122 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.13131313131313133 ,beta=0.05050505050505051].
2023-08-21 20:26:01,488 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:26:01,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:26:22,126 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:26:22,126 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:26:42,651 INFO: Applying selection operators for generation 8.
2023-08-21 20:26:42,651 INFO: Applying genetic operators for generation 8.
2023-08-21 20:26:42,653 INFO: Evaluating fitness for for generation 8.
2023-08-21 20:26:42,653 INFO: Will evaluate fitness for 12 individuals.
2023-08-21 20:26:43,155 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.6767676767676768].
2023-08-21 20:26:43,156 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.6767676767676768].
2023-08-21 20:26:43,315 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:26:43,315 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:27:02,815 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:27:02,815 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.2828282828282829, momentum=0.020202020202020204 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9090909090909092 ,rho=0.6464646464646465 ,epsilon=0.0008686868818181818 ,centered=False ,beta_1=0.696969696969697 ,beta_2=0.2828282828282829 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5757575757575758 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.6767676767676768].
2023-08-21 20:27:04,300 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:27:04,301 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:27:22,479 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:27:22,479 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:27:25,568 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:27:25,568 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:27:43,166 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:27:43,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:27:46,612 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:27:46,612 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:28:04,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0.787878787878788 ,nesterov=False ,amsgrad=True ,weight_decay=0.0035360000000000005 ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.05050505050505051].
2023-08-21 20:28:04,103 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8585858585858587, momentum=0.787878787878788 ,nesterov=False ,amsgrad=True ,weight_decay=0.0035360000000000005 ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.5858585858585859 ,learning_rate_power=-0.33333333333333326 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.31313131313131315 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.05050505050505051].
2023-08-21 20:28:07,446 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8686868686868687 ,rho=0.7272727272727273 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.25252525252525254].
2023-08-21 20:28:07,447 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.9696969696969697, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8686868686868687 ,rho=0.7272727272727273 ,epsilon=0.0007777778 ,centered=True ,beta_1=0.6666666666666667 ,beta_2=0.9393939393939394 ,learning_rate_power=-0.8585858585858586 ,initial_accumulator_value=0.7575757575757577 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4545454545454546 ,beta=0.25252525252525254].
2023-08-21 20:28:25,523 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:28:25,523 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:28:27,099 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.797979797979798 ,epsilon=0.0002828283545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.6565656565656566].
2023-08-21 20:28:27,099 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6565656565656566, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.797979797979798 ,epsilon=0.0002828283545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.22222222222222224 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.6565656565656566].
2023-08-21 20:28:49,715 INFO: Applying selection operators for generation 9.
2023-08-21 20:28:49,716 INFO: Applying genetic operators for generation 9.
2023-08-21 20:28:49,717 INFO: Evaluating fitness for for generation 9.
2023-08-21 20:28:49,717 INFO: Will evaluate fitness for 9 individuals.
2023-08-21 20:28:50,216 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.686868686868687 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.6666666666666667].
2023-08-21 20:28:50,216 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.686868686868687 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.6666666666666667].
2023-08-21 20:28:50,379 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:28:50,379 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:29:11,093 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.5353535353535354, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.3434343434343435 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.4747474747474748].
2023-08-21 20:29:11,093 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.5353535353535354, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.3434343434343435 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.8686868686868687 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.4747474747474748].
2023-08-21 20:29:11,158 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:29:11,158 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:29:32,149 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0007878788090909091 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8080808080808082].
2023-08-21 20:29:32,149 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.98989898989899, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=0.05050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0007878788090909091 ,centered=True ,beta_1=0.05050505050505051 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.8888888888888888 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8080808080808082].
2023-08-21 20:29:39,703 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:29:39,704 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:29:56,067 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:29:56,067 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:30:00,310 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:30:00,310 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:30:17,240 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:30:17,240 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:30:37,624 INFO: Applying selection operators for generation 10.
2023-08-21 20:30:37,624 INFO: Applying genetic operators for generation 10.
2023-08-21 20:30:37,626 INFO: Evaluating fitness for for generation 10.
2023-08-21 20:30:37,626 INFO: Will evaluate fitness for 11 individuals.
2023-08-21 20:30:38,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005253000000000001 ,use_ema=False ,ema_momentum=1.0 ,rho=0.888888888888889 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.686868686868687].
2023-08-21 20:30:38,140 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005253000000000001 ,use_ema=False ,ema_momentum=1.0 ,rho=0.888888888888889 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6161616161616161 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7272727272727273 ,beta=0.686868686868687].
2023-08-21 20:30:38,281 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.7272727272727273 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.7474747474747475].
2023-08-21 20:30:38,281 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8484848484848485, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.7272727272727273 ,epsilon=0.0005959596363636363 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.7474747474747475].
2023-08-21 20:31:01,377 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:31:01,378 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:31:01,650 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:31:01,650 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:31:21,981 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:31:21,982 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:31:22,717 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:31:22,717 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:31:42,594 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:31:42,595 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:31:43,771 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.030303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.05050505050505051].
2023-08-21 20:31:43,771 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.030303030303030304 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0006565656909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.7575757575757577 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5656565656565657 ,beta=0.05050505050505051].
2023-08-21 20:32:03,686 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:32:03,686 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:32:06,782 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.9494949494949496, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9191919191919192].
2023-08-21 20:32:06,782 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.9494949494949496, momentum=0.5858585858585859 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.6262626262626263 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.020202020202020204 ,beta_2=0.3434343434343435 ,learning_rate_power=-0.31313131313131304 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.2828282828282829 ,beta=0.9191919191919192].
2023-08-21 20:32:24,361 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:32:24,361 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:32:44,351 INFO: Applying selection operators for generation 11.
2023-08-21 20:32:44,351 INFO: Applying genetic operators for generation 11.
2023-08-21 20:32:44,353 INFO: Evaluating fitness for for generation 11.
2023-08-21 20:32:44,353 INFO: Will evaluate fitness for 11 individuals.
2023-08-21 20:32:44,858 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:32:44,858 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:32:45,014 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.7575757575757577].
2023-08-21 20:32:45,014 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6767676767676768 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9595959595959597 ,beta_2=0.5151515151515152 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5050505050505051 ,beta=0.7575757575757577].
2023-08-21 20:33:05,848 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:33:05,848 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:33:06,737 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:33:06,737 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:33:26,454 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006970000000000001 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.98989898989899].
2023-08-21 20:33:26,454 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.006970000000000001 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.09090909090909091 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.8787878787878789 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.98989898989899].
2023-08-21 20:33:27,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:33:27,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:33:48,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:33:48,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:33:49,487 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=0.0 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.05050505050505051].
2023-08-21 20:33:49,488 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.010101010101010102, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=0.0 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.4444444444444445 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.36363636363636365 ,beta=0.05050505050505051].
2023-08-21 20:34:10,154 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.5858585858585859 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.05050505050505051].
2023-08-21 20:34:10,155 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.5858585858585859 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.05050505050505051].
2023-08-21 20:34:12,211 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.10101010101010102 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.7373737373737375].
2023-08-21 20:34:12,211 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.30303030303030304 ,rho=0.10101010101010102 ,epsilon=0.00012121220909090907 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.5555555555555556 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.7373737373737375].
2023-08-21 20:34:33,049 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:34:33,049 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:34:53,459 INFO: Applying selection operators for generation 12.
2023-08-21 20:34:53,459 INFO: Applying genetic operators for generation 12.
2023-08-21 20:34:53,460 INFO: Evaluating fitness for for generation 12.
2023-08-21 20:34:53,460 INFO: Will evaluate fitness for 11 individuals.
2023-08-21 20:34:53,970 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:34:53,970 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:34:54,122 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:34:54,123 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:35:14,541 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:35:14,541 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:35:15,064 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:35:15,064 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:35:35,073 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6060606060606061 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.05050505050505051].
2023-08-21 20:35:35,073 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.6060606060606061 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.19191919191919193 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8282828282828284 ,beta=0.05050505050505051].
2023-08-21 20:35:36,458 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:35:36,458 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:35:56,493 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:35:56,494 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:35:57,440 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:35:57,440 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:36:17,087 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.000506 ,use_ema=False ,ema_momentum=1.0 ,rho=0.38383838383838387 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.05050505050505051].
2023-08-21 20:36:17,087 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8282828282828284, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.000506 ,use_ema=False ,ema_momentum=1.0 ,rho=0.38383838383838387 ,epsilon=0.0003737374363636363 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.8686868686868687 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.21212121212121213 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.11111111111111112 ,beta=0.05050505050505051].
2023-08-21 20:36:18,420 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:36:18,421 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:36:39,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:36:39,544 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:36:59,524 INFO: Applying selection operators for generation 13.
2023-08-21 20:36:59,524 INFO: Applying genetic operators for generation 13.
2023-08-21 20:36:59,526 INFO: Evaluating fitness for for generation 13.
2023-08-21 20:36:59,526 INFO: Will evaluate fitness for 8 individuals.
2023-08-21 20:37:00,025 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:37:00,025 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:37:00,190 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:37:00,190 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:37:21,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:37:21,140 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:37:21,598 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:37:21,598 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:37:41,829 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:37:41,829 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:37:42,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.98989898989899 ,rho=0.19191919191919193 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.4646464646464647 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.494949494949495].
2023-08-21 20:37:42,625 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.98989898989899 ,rho=0.19191919191919193 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.4646464646464647 ,beta_2=0.4545454545454546 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.3535353535353536 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7474747474747475 ,beta=0.494949494949495].
2023-08-21 20:38:02,482 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.48484848484848486].
2023-08-21 20:38:02,482 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005556000000000001 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.12121212121212122 ,learning_rate_power=-0.06060606060606055 ,initial_accumulator_value=0.43434343434343436 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.48484848484848486].
2023-08-21 20:38:05,818 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001213 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.05050505050505051].
2023-08-21 20:38:05,818 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.29292929292929293, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.001213 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.6464646464646465 ,beta_2=0.31313131313131315 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.4747474747474748 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.393939393939394 ,beta=0.05050505050505051].
2023-08-21 20:38:29,253 INFO: Applying selection operators for generation 14.
2023-08-21 20:38:29,253 INFO: Applying genetic operators for generation 14.
2023-08-21 20:38:29,254 INFO: Evaluating fitness for for generation 14.
2023-08-21 20:38:29,254 INFO: Will evaluate fitness for 10 individuals.
2023-08-21 20:38:29,762 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:38:29,763 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:38:29,914 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:38:29,915 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:38:50,498 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:38:50,499 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:38:50,977 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.11111111111111112 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.05050505050505051].
2023-08-21 20:38:50,977 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.6464646464646465 ,rho=0.11111111111111112 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.6161616161616162 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.05050505050505051].
2023-08-21 20:39:11,225 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:39:11,225 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:39:15,141 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:39:15,141 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:39:31,773 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:39:31,774 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:39:36,077 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:39:36,078 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:39:52,823 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.7272727272727273 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.05050505050505051].
2023-08-21 20:39:52,823 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.6767676767676768, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.8585858585858587 ,rho=0.7272727272727273 ,epsilon=0.0009595959636363636 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.05050505050505051].
2023-08-21 20:40:16,125 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.14141414141414144].
2023-08-21 20:40:16,125 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.42424242424242425 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9191919191919192 ,rho=0.7575757575757577 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.3434343434343435 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.14141414141414144].
2023-08-21 20:40:38,672 INFO: Applying selection operators for generation 15.
2023-08-21 20:40:38,673 INFO: Applying genetic operators for generation 15.
2023-08-21 20:40:38,674 INFO: Evaluating fitness for for generation 15.
2023-08-21 20:40:38,674 INFO: Will evaluate fitness for 11 individuals.
2023-08-21 20:40:39,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:40:39,295 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:40:39,550 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.05050505050505051].
2023-08-21 20:40:39,551 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.18181818181818182 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.05050505050505051].
2023-08-21 20:41:00,199 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:41:00,200 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:41:00,711 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009091 ,use_ema=False ,ema_momentum=0.30303030303030304 ,rho=0.6565656565656566 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7676767676767677].
2023-08-21 20:41:00,711 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.009091 ,use_ema=False ,ema_momentum=0.30303030303030304 ,rho=0.6565656565656566 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.6565656565656566 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.7676767676767677].
2023-08-21 20:41:27,147 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:41:27,147 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:41:33,834 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:41:33,834 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:41:49,332 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:41:49,332 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:41:58,140 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:41:58,140 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:42:10,309 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:42:10,309 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:42:22,894 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.8080808080808082, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.05050505050505051].
2023-08-21 20:42:22,894 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.8080808080808082, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003738000000000001 ,use_ema=False ,ema_momentum=0.7171717171717172 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.23232323232323235 ,beta=0.05050505050505051].
2023-08-21 20:42:31,034 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:42:31,034 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:42:52,066 INFO: Applying selection operators for generation 16.
2023-08-21 20:42:52,067 INFO: Applying genetic operators for generation 16.
2023-08-21 20:42:52,069 INFO: Evaluating fitness for for generation 16.
2023-08-21 20:42:52,069 INFO: Will evaluate fitness for 12 individuals.
2023-08-21 20:42:52,606 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7272727272727273, momentum=0.5757575757575758 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.8484848484848485 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.4646464646464647].
2023-08-21 20:42:52,606 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7272727272727273, momentum=0.5757575757575758 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7777777777777778 ,rho=0.8484848484848485 ,epsilon=0.00026262633636363634 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.10101010101010102 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.595959595959596 ,beta=0.4646464646464647].
2023-08-21 20:42:52,893 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:42:52,893 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:43:17,127 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.797979797979798 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.010101010101010102].
2023-08-21 20:43:17,128 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.43434343434343436, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.797979797979798 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.7373737373737375 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.27272727272727276 ,l1_regularization_strength=0.04040404040404041 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.010101010101010102].
2023-08-21 20:43:22,740 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:43:22,741 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:43:44,329 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:43:44,330 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:43:45,125 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:43:45,126 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:44:05,627 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:44:05,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:44:08,387 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.787878787878788 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.8686868686868687].
2023-08-21 20:44:08,388 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.787878787878788 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.6161616161616162 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.9595959595959596 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.17171717171717174 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.19191919191919193 ,beta=0.8686868686868687].
2023-08-21 20:44:26,850 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=1.0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.05050505050505051].
2023-08-21 20:44:26,850 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=1.0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=3.030312727272727e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.6767676767676767 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8787878787878789 ,beta=0.05050505050505051].
2023-08-21 20:44:30,574 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:44:30,574 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:44:49,926 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:44:49,926 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:44:52,299 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:44:52,299 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:45:15,253 INFO: Applying selection operators for generation 17.
2023-08-21 20:45:15,254 INFO: Applying genetic operators for generation 17.
2023-08-21 20:45:15,254 INFO: Evaluating fitness for for generation 17.
2023-08-21 20:45:15,254 INFO: Will evaluate fitness for 14 individuals.
2023-08-21 20:45:15,844 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:45:15,845 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:45:16,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:45:16,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:45:37,408 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:45:37,409 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:45:40,288 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:45:40,288 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:45:58,353 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:45:58,353 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:46:05,056 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:46:05,056 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:46:19,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:46:19,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:46:29,244 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:46:29,245 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:46:40,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:46:40,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:46:54,505 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:46:54,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:47:01,963 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:47:01,963 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:47:19,760 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:47:19,761 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:47:23,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:47:23,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:47:44,866 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:47:44,867 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:48:05,534 INFO: Applying selection operators for generation 18.
2023-08-21 20:48:05,534 INFO: Applying genetic operators for generation 18.
2023-08-21 20:48:05,536 INFO: Evaluating fitness for for generation 18.
2023-08-21 20:48:05,536 INFO: Will evaluate fitness for 14 individuals.
2023-08-21 20:48:06,186 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:48:06,186 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:48:07,289 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.393939393939394 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.05050505050505051].
2023-08-21 20:48:07,289 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.393939393939394 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.05050505050505051].
2023-08-21 20:48:27,481 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:48:27,482 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:48:36,133 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:48:36,133 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:48:48,651 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:48:48,652 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:48:58,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.8080808080808082 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.5151515151515152 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:48:58,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.8080808080808082 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.5151515151515152 ,epsilon=0.0009494949545454545 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.6262626262626263 ,initial_accumulator_value=0.5555555555555556 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:49:09,553 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0.18181818181818182 ,nesterov=False ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=False ,ema_momentum=1.0 ,rho=0.2828282828282829 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.05050505050505051].
2023-08-21 20:49:09,553 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6363636363636365, momentum=0.18181818181818182 ,nesterov=False ,amsgrad=True ,weight_decay=0.0008090000000000001 ,use_ema=False ,ema_momentum=1.0 ,rho=0.2828282828282829 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.4949494949494949 ,initial_accumulator_value=0.05050505050505051 ,l1_regularization_strength=0.6262626262626263 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.26262626262626265 ,beta=0.05050505050505051].
2023-08-21 20:49:23,371 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.9292929292929294, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6363636363636365 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.05050505050505051].
2023-08-21 20:49:23,372 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.9292929292929294, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.3535353535353536 ,rho=0.6363636363636365 ,epsilon=0.0004848485363636363 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.30303030303030304 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.21212121212121213 ,beta=0.05050505050505051].
2023-08-21 20:49:35,311 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:49:35,312 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:49:53,493 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:49:53,493 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:49:57,043 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.7373737373737375].
2023-08-21 20:49:57,043 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=0.0007080000000000002 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.3434343434343435 ,beta_2=0.6262626262626263 ,learning_rate_power=-0.404040404040404 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.3535353535353536 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.7373737373737375].
2023-08-21 20:50:18,604 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6161616161616162].
2023-08-21 20:50:18,605 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8282828282828284 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.8282828282828284 ,learning_rate_power=-0.04040404040404033 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.6161616161616162].
2023-08-21 20:50:22,850 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:50:22,850 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:50:44,500 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.8484848484848485, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.8686868686868687 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:50:44,500 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.8484848484848485, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0020210000000000002 ,use_ema=True ,ema_momentum=0.7272727272727273 ,rho=0.8686868686868687 ,epsilon=3.030312727272727e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.21212121212121204 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:51:08,760 INFO: Applying selection operators for generation 19.
2023-08-21 20:51:08,761 INFO: Applying genetic operators for generation 19.
2023-08-21 20:51:08,762 INFO: Evaluating fitness for for generation 19.
2023-08-21 20:51:08,762 INFO: Will evaluate fitness for 11 individuals.
2023-08-21 20:51:09,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.05050505050505051].
2023-08-21 20:51:09,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.797979797979798, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0005757576181818182 ,centered=True ,beta_1=0.4040404040404041 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.05050505050505051].
2023-08-21 20:51:09,848 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:51:09,848 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:51:32,985 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.31313131313131315, momentum=0.37373737373737376 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.7272727272727273 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.7575757575757577].
2023-08-21 20:51:32,986 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.31313131313131315, momentum=0.37373737373737376 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4444444444444445 ,rho=0.7272727272727273 ,epsilon=0.0004747475272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.4444444444444445 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.12121212121212122 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.7575757575757577].
2023-08-21 20:51:33,104 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:51:33,104 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:51:55,734 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:51:55,734 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:51:57,373 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:51:57,373 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:52:17,166 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:52:17,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:52:22,635 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.393939393939394 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:52:22,635 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8181818181818182 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.393939393939394 ,learning_rate_power=-0.3939393939393939 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:52:37,980 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.05050505050505051].
2023-08-21 20:52:37,981 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.05050505050505051].
2023-08-21 20:52:44,507 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:52:44,507 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:52:58,876 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.17171717171717174, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=False ,ema_momentum=1.0 ,rho=0.8484848484848485 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.4141414141414142].
2023-08-21 20:52:58,877 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.17171717171717174, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0031320000000000007 ,use_ema=False ,ema_momentum=1.0 ,rho=0.8484848484848485 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.27272727272727276 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.4141414141414142].
2023-08-21 20:53:32,645 INFO: Applying selection operators for generation 20.
2023-08-21 20:53:32,645 INFO: Applying genetic operators for generation 20.
2023-08-21 20:53:32,646 INFO: Evaluating fitness for for generation 20.
2023-08-21 20:53:32,646 INFO: Will evaluate fitness for 17 individuals.
2023-08-21 20:53:33,210 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.8484848484848485 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:53:33,210 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.888888888888889, momentum=0.3434343434343435 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.686868686868687 ,rho=0.8484848484848485 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.33333333333333337 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.3434343434343435 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:53:33,945 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:53:33,945 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:53:57,949 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:53:57,950 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:53:58,229 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:53:58,230 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:54:18,885 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:54:18,886 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:54:23,567 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:54:23,567 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:54:40,049 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7777777777777778, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.10101010101010102 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.05050505050505051].
2023-08-21 20:54:40,050 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7777777777777778, momentum=0.11111111111111112 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.10101010101010102 ,epsilon=0.0005656566090909091 ,centered=True ,beta_1=0.10101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9393939393939394 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.05050505050505051].
2023-08-21 20:54:46,486 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.393939393939394 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.3434343434343435].
2023-08-21 20:54:46,486 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.393939393939394 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.4747474747474748 ,beta_2=0.14141414141414144 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.3434343434343435].
2023-08-21 20:55:07,978 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.05050505050505051].
2023-08-21 20:55:07,978 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0004242424818181818 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4141414141414142 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.05050505050505051].
2023-08-21 20:55:13,654 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:55:13,655 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:55:33,002 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:55:33,002 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:55:39,907 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:55:39,907 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:55:53,683 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:55:53,683 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:56:07,194 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:56:07,194 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:56:14,498 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:56:14,499 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:56:32,670 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.98989898989899].
2023-08-21 20:56:32,670 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0008181818363636363 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.16161616161616163 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.98989898989899].
2023-08-21 20:56:36,196 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:56:36,196 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:56:58,085 INFO: Applying selection operators for generation 21.
2023-08-21 20:56:58,085 INFO: Applying genetic operators for generation 21.
2023-08-21 20:56:58,087 INFO: Evaluating fitness for for generation 21.
2023-08-21 20:56:58,087 INFO: Will evaluate fitness for 13 individuals.
2023-08-21 20:56:58,627 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:56:58,627 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:56:58,923 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.7272727272727273 ,epsilon=0.0007878788090909091 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:56:58,923 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.18181818181818182, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.00010200000000000001 ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.7272727272727273 ,epsilon=0.0007878788090909091 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.6666666666666667 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:57:19,625 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:57:19,625 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:57:25,577 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:57:25,578 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:57:41,047 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:57:41,048 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:57:46,384 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:57:46,385 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:58:02,293 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:58:02,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:58:07,037 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.05050505050505051].
2023-08-21 20:58:07,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.09090909090909091 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6565656565656566 ,beta=0.05050505050505051].
2023-08-21 20:58:23,243 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=0.4545454545454546 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.05050505050505051].
2023-08-21 20:58:23,243 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.48484848484848486 ,rho=0.4545454545454546 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.888888888888889 ,l1_regularization_strength=0.4545454545454546 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.05050505050505051].
2023-08-21 20:58:30,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:58:30,338 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:58:46,813 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:58:46,813 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:58:51,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:58:51,519 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:59:07,686 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:59:07,686 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:59:28,372 INFO: Applying selection operators for generation 22.
2023-08-21 20:59:28,372 INFO: Applying genetic operators for generation 22.
2023-08-21 20:59:28,373 INFO: Evaluating fitness for for generation 22.
2023-08-21 20:59:28,373 INFO: Will evaluate fitness for 9 individuals.
2023-08-21 20:59:28,905 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:59:28,905 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:59:29,007 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:59:29,008 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:59:49,519 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:59:49,519 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:59:49,803 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 20:59:49,804 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:00:10,101 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.05050505050505051].
2023-08-21 21:00:10,101 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.7373737373737375 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.05050505050505051].
2023-08-21 21:00:10,592 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.4747474747474748].
2023-08-21 21:00:10,592 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.20202020202020204 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.4747474747474748].
2023-08-21 21:00:31,388 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:00:31,388 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:00:33,024 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:00:33,024 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:00:52,661 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:00:52,661 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:01:12,862 INFO: Applying selection operators for generation 23.
2023-08-21 21:01:12,863 INFO: Applying genetic operators for generation 23.
2023-08-21 21:01:12,864 INFO: Evaluating fitness for for generation 23.
2023-08-21 21:01:12,864 INFO: Will evaluate fitness for 7 individuals.
2023-08-21 21:01:13,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:01:13,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:01:13,505 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:01:13,505 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:01:34,096 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.05050505050505051].
2023-08-21 21:01:34,096 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.6262626262626263, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6666666666666667 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.8585858585858587 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.08080808080808081 ,beta=0.05050505050505051].
2023-08-21 21:01:34,304 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:01:34,304 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:01:54,660 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:01:54,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:01:55,142 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:01:55,142 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:02:15,660 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5757575757575758, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.4141414141414142].
2023-08-21 21:02:15,661 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5757575757575758, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4444444444444445 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.797979797979798 ,beta=0.4141414141414142].
2023-08-21 21:02:34,261 INFO: Applying selection operators for generation 24.
2023-08-21 21:02:34,261 INFO: Applying genetic operators for generation 24.
2023-08-21 21:02:34,262 INFO: Evaluating fitness for for generation 24.
2023-08-21 21:02:34,262 INFO: Will evaluate fitness for 13 individuals.
2023-08-21 21:02:34,787 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.05050505050505051].
2023-08-21 21:02:34,787 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.3535353535353536, momentum=0.05050505050505051 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.18181818181818182 ,beta_2=0.20202020202020204 ,learning_rate_power=-0.16161616161616155 ,initial_accumulator_value=0.37373737373737376 ,l1_regularization_strength=0.6767676767676768 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.05050505050505051].
2023-08-21 21:02:34,909 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.05050505050505051].
2023-08-21 21:02:34,909 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.008687 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.16161616161616163 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.98989898989899 ,beta=0.05050505050505051].
2023-08-21 21:02:55,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:02:55,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:03:06,561 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:03:06,561 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:03:16,008 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:03:16,008 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:03:27,307 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:03:27,307 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:03:37,057 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:03:37,057 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:03:48,590 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:03:48,590 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:03:57,783 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:03:57,784 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:04:09,619 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:04:09,619 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:04:18,527 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:04:18,527 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:04:30,622 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:04:30,622 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:04:39,416 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7373737373737375, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.494949494949495 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 21:04:39,417 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7373737373737375, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.494949494949495 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5555555555555556 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.14141414141414144 ,beta=0.05050505050505051].
2023-08-21 21:05:02,628 INFO: Applying selection operators for generation 25.
2023-08-21 21:05:02,628 INFO: Applying genetic operators for generation 25.
2023-08-21 21:05:02,630 INFO: Evaluating fitness for for generation 25.
2023-08-21 21:05:02,630 INFO: Will evaluate fitness for 14 individuals.
2023-08-21 21:05:03,288 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.05050505050505051].
2023-08-21 21:05:03,288 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0.16161616161616163 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9696969696969697 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.7575757575757577 ,beta_2=0.696969696969697 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.020202020202020204 ,beta=0.05050505050505051].
2023-08-21 21:05:03,294 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.05050505050505051].
2023-08-21 21:05:03,294 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5656565656565657, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.00032323239090909086 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6161616161616162 ,beta=0.05050505050505051].
2023-08-21 21:05:25,430 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:05:25,430 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:05:27,331 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:05:27,331 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:05:46,407 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:05:46,407 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:05:48,032 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:05:48,032 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:06:07,288 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.25252525252525254, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.05050505050505051].
2023-08-21 21:06:07,289 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.25252525252525254, momentum=0.6060606060606061 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.22222222222222224 ,beta=0.05050505050505051].
2023-08-21 21:06:08,662 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:06:08,663 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:06:29,855 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.7272727272727273, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.8282828282828284].
2023-08-21 21:06:29,855 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.7272727272727273, momentum=0.8787878787878789 ,nesterov=False ,amsgrad=False ,weight_decay=0.0076770000000000015 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0004949495454545454 ,centered=False ,beta_1=0.5050505050505051 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.4444444444444445 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.37373737373737376 ,beta=0.8282828282828284].
2023-08-21 21:06:30,898 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:06:30,899 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:06:52,350 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.7272727272727273 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.696969696969697].
2023-08-21 21:06:52,351 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.8484848484848485 ,rho=0.7272727272727273 ,epsilon=0.0008383838545454545 ,centered=True ,beta_1=0.7474747474747475 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9696969696969697 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.696969696969697].
2023-08-21 21:07:01,662 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:07:01,662 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:07:16,380 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:07:16,380 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:07:37,290 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.33333333333333337].
2023-08-21 21:07:37,290 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.4545454545454546 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.33333333333333337].
2023-08-21 21:08:01,253 INFO: Applying selection operators for generation 26.
2023-08-21 21:08:01,253 INFO: Applying genetic operators for generation 26.
2023-08-21 21:08:01,255 INFO: Evaluating fitness for for generation 26.
2023-08-21 21:08:01,255 INFO: Will evaluate fitness for 10 individuals.
2023-08-21 21:08:01,779 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0.2828282828282829 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.4141414141414142].
2023-08-21 21:08:01,779 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.0, momentum=0.2828282828282829 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0009090909181818181 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.8484848484848485 ,initial_accumulator_value=0.7171717171717172 ,l1_regularization_strength=0.7171717171717172 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3434343434343435 ,beta=0.4141414141414142].
2023-08-21 21:08:01,907 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.23232323232323235, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.8484848484848485 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.7575757575757577].
2023-08-21 21:08:01,907 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.23232323232323235, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.8484848484848485 ,epsilon=0.0007171717454545454 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.8080808080808082 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8686868686868687 ,beta=0.7575757575757577].
2023-08-21 21:08:26,175 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.7272727272727273 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.05050505050505051].
2023-08-21 21:08:26,175 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.686868686868687, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.7171717171717172 ,rho=0.7272727272727273 ,epsilon=0.0007373737636363636 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.3535353535353536 ,beta=0.05050505050505051].
2023-08-21 21:08:27,246 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.9494949494949496 ,nesterov=False ,amsgrad=False ,weight_decay=0.002829000000000001 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.05050505050505051].
2023-08-21 21:08:27,247 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.7272727272727273, momentum=0.9494949494949496 ,nesterov=False ,amsgrad=False ,weight_decay=0.002829000000000001 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0006464646818181818 ,centered=True ,beta_1=0.8181818181818182 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9292929292929293 ,initial_accumulator_value=0.4545454545454546 ,l1_regularization_strength=0.6464646464646465 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7070707070707072 ,beta=0.05050505050505051].
2023-08-21 21:08:45,843 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:08:45,844 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:08:49,785 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8080808080808082 ,rho=0.4444444444444445 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.393939393939394 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:08:49,785 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.787878787878788, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.8080808080808082 ,rho=0.4444444444444445 ,epsilon=0.0008787878909090909 ,centered=True ,beta_1=0.30303030303030304 ,beta_2=0.393939393939394 ,learning_rate_power=-0.13131313131313127 ,initial_accumulator_value=0.5858585858585859 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:09:06,649 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:09:06,649 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:09:13,434 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.29292929292929293 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:09:13,435 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.29292929292929293 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7676767676767677 ,l1_regularization_strength=0.07070707070707072 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:09:27,243 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7676767676767677, momentum=0.4040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.0015160000000000002 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.7272727272727273 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.05050505050505051].
2023-08-21 21:09:27,243 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7676767676767677, momentum=0.4040404040404041 ,nesterov=False ,amsgrad=False ,weight_decay=0.0015160000000000002 ,use_ema=False ,ema_momentum=0.7676767676767677 ,rho=0.7272727272727273 ,epsilon=6.060615454545454e-05 ,centered=True ,beta_1=0.5555555555555556 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.30303030303030304 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6666666666666667 ,beta=0.05050505050505051].
2023-08-21 21:09:52,033 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.5252525252525253 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:09:52,034 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.0033340000000000006 ,use_ema=False ,ema_momentum=0.07070707070707072 ,rho=0.5252525252525253 ,epsilon=0.00015151523636363636 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:10:15,674 INFO: Applying selection operators for generation 27.
2023-08-21 21:10:15,674 INFO: Applying genetic operators for generation 27.
2023-08-21 21:10:15,675 INFO: Evaluating fitness for for generation 27.
2023-08-21 21:10:15,675 INFO: Will evaluate fitness for 10 individuals.
2023-08-21 21:10:16,209 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5252525252525253, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:10:16,209 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5252525252525253, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.004849000000000001 ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.00035353541818181815 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.4747474747474748 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9191919191919192 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:10:16,318 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:10:16,318 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:10:37,672 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.595959595959596, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.10101010101010102 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:10:37,672 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.595959595959596, momentum=0.22222222222222224 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.10101010101010102 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5151515151515152 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:10:40,144 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:10:40,144 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:10:57,924 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.7272727272727273 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.5656565656565657].
2023-08-21 21:10:57,925 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.10101010101010102 ,rho=0.7272727272727273 ,epsilon=0.0006161616545454546 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.26262626262626265 ,learning_rate_power=-0.23232323232323226 ,initial_accumulator_value=0.494949494949495 ,l1_regularization_strength=0.8383838383838385 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.5656565656565657].
2023-08-21 21:11:00,935 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.19191919191919193 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.05050505050505051].
2023-08-21 21:11:00,936 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.12121212121212122, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.8787878787878789 ,rho=0.19191919191919193 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.6565656565656566 ,beta_2=0.5050505050505051 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5252525252525253 ,beta=0.05050505050505051].
2023-08-21 21:11:21,774 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:11:21,774 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:11:22,705 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:11:22,705 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:11:42,539 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:11:42,539 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:12:03,228 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:12:03,228 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:12:23,872 INFO: Applying selection operators for generation 28.
2023-08-21 21:12:23,872 INFO: Applying genetic operators for generation 28.
2023-08-21 21:12:23,873 INFO: Evaluating fitness for for generation 28.
2023-08-21 21:12:23,873 INFO: Will evaluate fitness for 11 individuals.
2023-08-21 21:12:24,401 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:12:24,401 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:12:24,526 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:12:24,526 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:12:45,162 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.07070707070707072 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.0 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.05050505050505051].
2023-08-21 21:12:45,163 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.07070707070707072 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.0 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.5353535353535354 ,l1_regularization_strength=0.14141414141414144 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.05050505050505051].
2023-08-21 21:12:45,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:12:45,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:13:06,152 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:13:06,152 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:13:08,960 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:13:08,960 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:13:26,986 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:13:26,986 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:13:30,704 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.05050505050505051].
2023-08-21 21:13:30,704 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.32323232323232326 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.606060606060606 ,initial_accumulator_value=0.14141414141414144 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.15151515151515152 ,beta=0.05050505050505051].
2023-08-21 21:13:48,185 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9494949494949496, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.05050505050505051].
2023-08-21 21:13:48,185 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9494949494949496, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0006262626636363636 ,centered=True ,beta_1=0.07070707070707072 ,beta_2=0.5454545454545455 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.797979797979798 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=1.0 ,beta=0.05050505050505051].
2023-08-21 21:13:52,067 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.98989898989899 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.9191919191919192].
2023-08-21 21:13:52,067 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.98989898989899 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.797979797979798 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.4040404040404041 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.24242424242424243 ,l1_regularization_strength=0.36363636363636365 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5555555555555556 ,beta=0.9191919191919192].
2023-08-21 21:14:12,267 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:14:12,268 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:14:32,374 INFO: Applying selection operators for generation 29.
2023-08-21 21:14:32,374 INFO: Applying genetic operators for generation 29.
2023-08-21 21:14:32,375 INFO: Evaluating fitness for for generation 29.
2023-08-21 21:14:32,375 INFO: Will evaluate fitness for 9 individuals.
2023-08-21 21:14:32,936 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.888888888888889 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8484848484848485].
2023-08-21 21:14:32,937 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.07070707070707072, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.888888888888889 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.38383838383838387 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.8686868686868687 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.37373737373737376 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.8484848484848485].
2023-08-21 21:14:33,271 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:14:33,272 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:14:54,690 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:14:54,690 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:14:56,668 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:14:56,669 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:15:16,768 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:15:16,768 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:15:17,876 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:15:17,876 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:15:38,234 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:15:38,234 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:15:38,560 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.05050505050505051].
2023-08-21 21:15:38,560 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0009797979818181818 ,centered=True ,beta_1=0.6767676767676768 ,beta_2=0.38383838383838387 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.05050505050505051].
2023-08-21 21:15:59,766 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:15:59,766 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:16:20,709 INFO: Applying selection operators for generation 30.
2023-08-21 21:16:20,709 INFO: Applying genetic operators for generation 30.
2023-08-21 21:16:20,710 INFO: Evaluating fitness for for generation 30.
2023-08-21 21:16:20,710 INFO: Will evaluate fitness for 12 individuals.
2023-08-21 21:16:21,245 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:16:21,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:16:21,486 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:16:21,486 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:16:42,031 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:16:42,031 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:16:44,022 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:16:44,023 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:17:03,266 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:17:03,266 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:17:05,479 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.9292929292929294, momentum=0.29292929292929293 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.30303030303030304 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.05050505050505051].
2023-08-21 21:17:05,479 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.9292929292929294, momentum=0.29292929292929293 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.26262626262626265 ,rho=0.30303030303030304 ,epsilon=0.0005151515636363636 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5656565656565657 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7777777777777778 ,beta=0.05050505050505051].
2023-08-21 21:17:23,988 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:17:23,989 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:17:30,166 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7272727272727273 ,rho=0.7272727272727273 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:17:30,166 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.7272727272727273 ,rho=0.7272727272727273 ,epsilon=0.0008181818363636363 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.030303030303030276 ,initial_accumulator_value=0.7272727272727273 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:17:44,671 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:17:44,671 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:17:55,280 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:17:55,280 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:18:05,414 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:18:05,415 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:18:18,192 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:18:18,192 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:18:39,419 INFO: Applying selection operators for generation 31.
2023-08-21 21:18:39,419 INFO: Applying genetic operators for generation 31.
2023-08-21 21:18:39,421 INFO: Evaluating fitness for for generation 31.
2023-08-21 21:18:39,421 INFO: Will evaluate fitness for 17 individuals.
2023-08-21 21:18:40,330 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:18:40,330 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:18:40,379 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:18:40,380 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:19:01,166 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:19:01,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.787878787878788, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.26262626262626265 ,rho=0.13131313131313133 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:19:01,708 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:19:01,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:19:21,961 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.6262626262626263].
2023-08-21 21:19:21,962 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.595959595959596, momentum=0.0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.24242424242424243 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.20202020202020204 ,beta=0.6262626262626263].
2023-08-21 21:19:24,210 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.4444444444444445 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.05050505050505051].
2023-08-21 21:19:24,210 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.6464646464646465 ,rho=0.4444444444444445 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.5252525252525253 ,l1_regularization_strength=0.9595959595959597 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.05050505050505051].
2023-08-21 21:19:43,925 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:19:43,925 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:19:49,875 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.3535353535353536, momentum=0.25252525252525254 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.04040404040404041 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.05050505050505051].
2023-08-21 21:19:49,875 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.3535353535353536, momentum=0.25252525252525254 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.04040404040404041 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.14141414141414144 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.6464646464646464 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5757575757575758 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.42424242424242425 ,beta=0.05050505050505051].
2023-08-21 21:20:04,812 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:20:04,813 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:20:15,659 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008384 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.7272727272727273 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-21 21:20:15,659 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.008384 ,use_ema=False ,ema_momentum=0.6767676767676768 ,rho=0.7272727272727273 ,epsilon=0.0005454545909090909 ,centered=True ,beta_1=0.5050505050505051 ,beta_2=0.21212121212121213 ,learning_rate_power=-0.28282828282828276 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.27272727272727276 ,beta=0.8585858585858587].
2023-08-21 21:20:26,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0.7474747474747475 ,nesterov=False ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.4747474747474748 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.05050505050505051].
2023-08-21 21:20:26,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8686868686868687, momentum=0.7474747474747475 ,nesterov=False ,amsgrad=True ,weight_decay=0.0027280000000000004 ,use_ema=False ,ema_momentum=0.22222222222222224 ,rho=0.4747474747474748 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.696969696969697 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4141414141414142 ,beta=0.05050505050505051].
2023-08-21 21:20:41,557 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.05050505050505051].
2023-08-21 21:20:41,558 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.5050505050505051 ,rho=0.7272727272727273 ,epsilon=0.0002020202818181818 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.9797979797979799 ,learning_rate_power=-0.41414141414141414 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.05050505050505051].
2023-08-21 21:20:51,718 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.05050505050505051].
2023-08-21 21:20:51,718 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.7272727272727273 ,beta_2=0.9494949494949496 ,learning_rate_power=-0.7373737373737373 ,initial_accumulator_value=0.42424242424242425 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9191919191919192 ,beta=0.05050505050505051].
2023-08-21 21:21:08,011 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:21:08,011 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:21:13,011 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:21:13,011 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=4.040413636363636e-05 ,centered=True ,beta_1=0.5858585858585859 ,beta_2=0.010101010101010102 ,learning_rate_power=-0.5151515151515151 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:21:30,794 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:21:30,795 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:21:32,094 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:21:32,094 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:21:52,773 INFO: Applying selection operators for generation 32.
2023-08-21 21:21:52,773 INFO: Applying genetic operators for generation 32.
2023-08-21 21:21:52,774 INFO: Evaluating fitness for for generation 32.
2023-08-21 21:21:52,774 INFO: Will evaluate fitness for 13 individuals.
2023-08-21 21:21:53,409 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0.6060606060606061 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.494949494949495].
2023-08-21 21:21:53,409 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0.6060606060606061 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.0008787878909090909 ,centered=False ,beta_1=0.494949494949495 ,beta_2=0.6363636363636365 ,learning_rate_power=-0.1212121212121211 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.494949494949495].
2023-08-21 21:21:53,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:21:53,543 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:22:16,119 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:22:16,119 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:22:17,403 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:22:17,403 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:22:38,390 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:22:38,390 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:22:39,337 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.4545454545454546 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.05050505050505051].
2023-08-21 21:22:39,337 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7070707070707072, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0009100000000000001 ,use_ema=False ,ema_momentum=0.6161616161616162 ,rho=0.4545454545454546 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.36363636363636365 ,learning_rate_power=-0.4242424242424242 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.32323232323232326 ,beta=0.05050505050505051].
2023-08-21 21:23:01,398 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:23:01,399 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:23:02,607 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:23:02,607 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9292929292929294 ,l1_regularization_strength=0.32323232323232326 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:23:22,904 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:23:22,904 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:23:27,811 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:23:27,811 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.8181818181818182, momentum=0.3535353535353536 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.4646464646464647 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.26262626262626265 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.26262626262626265 ,l1_regularization_strength=0.010101010101010102 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:23:43,925 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:23:43,925 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:23:54,325 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.01 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.7272727272727273 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.030303030303030304].
2023-08-21 21:23:54,326 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.01 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.7272727272727273 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.303030303030303 ,initial_accumulator_value=0.9191919191919192 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.030303030303030304].
2023-08-21 21:24:06,165 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.6262626262626263 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.6262626262626263].
2023-08-21 21:24:06,166 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9696969696969697 ,rho=0.6262626262626263 ,epsilon=0.0001919192727272727 ,centered=False ,beta_1=0.8181818181818182 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.7070707070707071 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.2828282828282829 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5151515151515152 ,beta=0.6262626262626263].
2023-08-21 21:24:31,404 INFO: Applying selection operators for generation 33.
2023-08-21 21:24:31,404 INFO: Applying genetic operators for generation 33.
2023-08-21 21:24:31,406 INFO: Evaluating fitness for for generation 33.
2023-08-21 21:24:31,406 INFO: Will evaluate fitness for 14 individuals.
2023-08-21 21:24:32,202 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:24:32,203 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:24:32,606 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:24:32,606 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:24:53,660 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:24:53,660 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:24:59,532 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:24:59,532 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:25:15,037 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:25:15,037 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:25:23,132 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:25:23,132 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:25:42,597 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.001819 ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.05050505050505051].
2023-08-21 21:25:42,597 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.001819 ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=0.00043434349090909084 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.9595959595959597 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.6363636363636365 ,l1_regularization_strength=0.42424242424242425 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.05050505050505051].
2023-08-21 21:25:48,171 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7676767676767677].
2023-08-21 21:25:48,172 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9191919191919192, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.393939393939394 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4040404040404041 ,beta=0.7676767676767677].
2023-08-21 21:26:08,323 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.686868686868687 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.05050505050505051].
2023-08-21 21:26:08,323 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.4646464646464647 ,rho=0.686868686868687 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.696969696969697 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9797979797979799 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.04040404040404041 ,beta=0.05050505050505051].
2023-08-21 21:26:13,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:26:13,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:26:33,656 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:26:33,657 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:26:38,944 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.010101010101010102 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.43434343434343436].
2023-08-21 21:26:38,944 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.010101010101010102 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.43434343434343436].
2023-08-21 21:26:54,549 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:26:54,550 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:27:16,535 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:27:16,535 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:27:36,842 INFO: Applying selection operators for generation 34.
2023-08-21 21:27:36,842 INFO: Applying genetic operators for generation 34.
2023-08-21 21:27:36,844 INFO: Evaluating fitness for for generation 34.
2023-08-21 21:27:36,844 INFO: Will evaluate fitness for 9 individuals.
2023-08-21 21:27:37,795 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:27:37,795 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:27:38,288 INFO: Building the Keras optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.7272727272727273 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.05050505050505051].
2023-08-21 21:27:38,289 INFO: Building Adagrad optimizer to use for [Base=Adagrad, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.4141414141414142 ,rho=0.7272727272727273 ,epsilon=0.0005757576181818182 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.030303030303030304 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5757575757575758 ,beta=0.05050505050505051].
2023-08-21 21:27:58,666 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004647000000000001 ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.8282828282828284 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.05050505050505051].
2023-08-21 21:27:58,666 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.05050505050505051, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.004647000000000001 ,use_ema=False ,ema_momentum=0.23232323232323235 ,rho=0.8282828282828284 ,epsilon=0.0005050505545454545 ,centered=True ,beta_1=0.5454545454545455 ,beta_2=0.06060606060606061 ,learning_rate_power=-0.1515151515151515 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.24242424242424243 ,beta=0.05050505050505051].
2023-08-21 21:28:04,952 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.4545454545454546].
2023-08-21 21:28:04,952 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.020202020202020204 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9090909090909091 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.4545454545454546].
2023-08-21 21:28:29,622 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:28:29,623 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:28:33,195 INFO: Building the Keras optimizer to use for [Base=SGD, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:28:33,195 INFO: Building SGD optimizer to use for [Base=SGD, learning_rate=0.5353535353535354, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.8686868686868687 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.98989898989899 ,learning_rate_power=-0.7474747474747474 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.5454545454545455 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6767676767676768 ,beta=0.05050505050505051].
2023-08-21 21:28:51,348 INFO: Building the Keras optimizer to use for [Base=Nadam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.25252525252525254 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.43434343434343436].
2023-08-21 21:28:51,348 INFO: Building Nadam optimizer to use for [Base=Nadam, learning_rate=0.11111111111111112, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.25252525252525254 ,epsilon=0.0005555556 ,centered=False ,beta_1=0.8989898989898991 ,beta_2=0.6060606060606061 ,learning_rate_power=-0.18181818181818177 ,initial_accumulator_value=0.8383838383838385 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7373737373737375 ,beta=0.43434343434343436].
2023-08-21 21:28:58,543 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:28:58,543 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:29:20,152 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.7373737373737375 ,nesterov=False ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.7272727272727273 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.05050505050505051].
2023-08-21 21:29:20,153 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0.7373737373737375 ,nesterov=False ,amsgrad=True ,weight_decay=0.0047480000000000005 ,use_ema=False ,ema_momentum=0.7474747474747475 ,rho=0.7272727272727273 ,epsilon=0.0007171717454545454 ,centered=True ,beta_1=0.20202020202020204 ,beta_2=0.4646464646464647 ,learning_rate_power=-0.6363636363636364 ,initial_accumulator_value=0.8181818181818182 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5858585858585859 ,beta=0.05050505050505051].
2023-08-21 21:29:43,885 INFO: Applying selection operators for generation 35.
2023-08-21 21:29:43,885 INFO: Applying genetic operators for generation 35.
2023-08-21 21:29:43,886 INFO: Evaluating fitness for for generation 35.
2023-08-21 21:29:43,886 INFO: Will evaluate fitness for 14 individuals.
2023-08-21 21:29:44,525 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:29:44,526 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:29:44,810 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:29:44,810 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:30:05,923 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:30:05,924 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:30:10,471 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:30:10,471 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:30:28,580 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.01 ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.05050505050505051].
2023-08-21 21:30:28,581 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.13131313131313133, momentum=0 ,nesterov=True ,amsgrad=False ,weight_decay=0.01 ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.7373737373737375 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.7474747474747475 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.5454545454545455 ,beta=0.05050505050505051].
2023-08-21 21:30:39,815 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:30:39,816 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:30:50,714 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:30:50,714 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:31:04,245 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.17171717171717174 ,nesterov=True ,amsgrad=True ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.42424242424242425 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.33333333333333337].
2023-08-21 21:31:04,246 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.9595959595959597, momentum=0.17171717171717174 ,nesterov=True ,amsgrad=True ,weight_decay=0.006263000000000001 ,use_ema=False ,ema_momentum=0.42424242424242425 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.797979797979798 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.16161616161616163 ,beta=0.33333333333333337].
2023-08-21 21:31:11,953 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:31:11,953 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:31:28,253 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:31:28,254 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:31:33,224 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:31:33,224 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:31:55,080 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:31:55,080 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:31:55,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:31:55,433 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:32:17,754 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:32:17,754 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:32:37,908 INFO: Applying selection operators for generation 36.
2023-08-21 21:32:37,908 INFO: Applying genetic operators for generation 36.
2023-08-21 21:32:37,910 INFO: Evaluating fitness for for generation 36.
2023-08-21 21:32:37,910 INFO: Will evaluate fitness for 13 individuals.
2023-08-21 21:32:38,636 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:32:38,636 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:32:40,745 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:32:40,745 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:33:00,348 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.9797979797979799 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:33:00,349 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.9797979797979799 ,epsilon=0.0005858586272727272 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:33:06,123 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.06060606060606061, momentum=0.0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.38383838383838387 ,rho=0.22222222222222224 ,epsilon=0.0008888889 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.0].
2023-08-21 21:33:06,123 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.06060606060606061, momentum=0.0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.38383838383838387 ,rho=0.22222222222222224 ,epsilon=0.0008888889 ,centered=True ,beta_1=0.9393939393939394 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.5353535353535352 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.48484848484848486 ,beta=0.0].
2023-08-21 21:33:26,409 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.05050505050505051].
2023-08-21 21:33:26,409 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5858585858585859, momentum=0.9696969696969697 ,nesterov=True ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.020202020202020204 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.24242424242424243 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.29292929292929293 ,l1_regularization_strength=0.8484848484848485 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.05050505050505051].
2023-08-21 21:33:37,392 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:33:37,393 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:33:47,817 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.010101010101010102 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.29292929292929293].
2023-08-21 21:33:47,817 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.48484848484848486 ,rho=0.010101010101010102 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.595959595959596 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.29292929292929293].
2023-08-21 21:34:01,604 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.8787878787878789, momentum=0.8282828282828284 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.05050505050505051].
2023-08-21 21:34:01,604 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.8787878787878789, momentum=0.8282828282828284 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.5757575757575758 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.9494949494949495 ,initial_accumulator_value=0.9595959595959597 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.06060606060606061 ,beta=0.05050505050505051].
2023-08-21 21:34:15,083 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005960000000000001 ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.05050505050505051].
2023-08-21 21:34:15,083 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.005960000000000001 ,use_ema=False ,ema_momentum=0.06060606060606061 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.32323232323232326 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.33333333333333337 ,beta=0.05050505050505051].
2023-08-21 21:34:33,490 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.08080808080808081 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.696969696969697].
2023-08-21 21:34:33,490 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.4141414141414142, momentum=0.08080808080808081 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.9191919191919192 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.9797979797979799 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8989898989898991 ,beta=0.696969696969697].
2023-08-21 21:34:37,320 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:34:37,320 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:34:58,854 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:34:58,855 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:35:00,733 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.8484848484848485].
2023-08-21 21:35:00,733 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.19191919191919193 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.24242424242424243 ,learning_rate_power=-0.8181818181818181 ,initial_accumulator_value=0.07070707070707072 ,l1_regularization_strength=0.8585858585858587 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9090909090909092 ,beta=0.8484848484848485].
2023-08-21 21:35:24,030 INFO: Applying selection operators for generation 37.
2023-08-21 21:35:24,031 INFO: Applying genetic operators for generation 37.
2023-08-21 21:35:24,032 INFO: Evaluating fitness for for generation 37.
2023-08-21 21:35:24,032 INFO: Will evaluate fitness for 10 individuals.
2023-08-21 21:35:24,897 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.8787878787878789 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.29292929292929293].
2023-08-21 21:35:24,897 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.5555555555555556, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=0.4747474747474748 ,rho=0.8787878787878789 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.08080808080808077 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.29292929292929293].
2023-08-21 21:35:25,432 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:35:25,432 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:35:50,194 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:35:50,195 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:35:50,752 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:35:50,752 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:36:12,985 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:36:12,985 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:36:20,385 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:36:20,385 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:36:34,463 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.3434343434343435 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:36:34,463 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.3434343434343435 ,epsilon=0.0005353535818181818 ,centered=True ,beta_1=0.31313131313131315 ,beta_2=0.3535353535353536 ,learning_rate_power=-0.696969696969697 ,initial_accumulator_value=0.9090909090909092 ,l1_regularization_strength=0.8787878787878789 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:36:44,960 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.23232323232323235 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.6060606060606061].
2023-08-21 21:36:44,960 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.002829000000000001 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.23232323232323235 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.2828282828282829 ,beta_2=0.8585858585858587 ,learning_rate_power=-0.5252525252525252 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.43434343434343436 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4747474747474748 ,beta=0.6060606060606061].
2023-08-21 21:37:00,208 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.9696969696969697, momentum=0.06060606060606061 ,nesterov=False ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.4646464646464647].
2023-08-21 21:37:00,209 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.9696969696969697, momentum=0.06060606060606061 ,nesterov=False ,amsgrad=False ,weight_decay=0.0032330000000000006 ,use_ema=True ,ema_momentum=0.42424242424242425 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.9797979797979799 ,beta_2=0.27272727272727276 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.7777777777777778 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.29292929292929293 ,beta=0.4646464646464647].
2023-08-21 21:37:28,652 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:37:28,653 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:37:49,373 INFO: Applying selection operators for generation 38.
2023-08-21 21:37:49,374 INFO: Applying genetic operators for generation 38.
2023-08-21 21:37:49,375 INFO: Evaluating fitness for for generation 38.
2023-08-21 21:37:49,375 INFO: Will evaluate fitness for 11 individuals.
2023-08-21 21:37:50,106 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:37:50,106 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=False ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:37:51,298 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.29292929292929293 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.29292929292929293].
2023-08-21 21:37:51,298 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.29292929292929293 ,epsilon=0.0008383838545454545 ,centered=False ,beta_1=0.393939393939394 ,beta_2=0.04040404040404041 ,learning_rate_power=-0.7575757575757576 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.06060606060606061 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.29292929292929293].
2023-08-21 21:38:10,986 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:38:10,987 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:38:22,877 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:38:22,877 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:38:32,518 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:38:32,518 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:38:50,662 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.05050505050505051].
2023-08-21 21:38:50,663 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.05050505050505051].
2023-08-21 21:38:54,638 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:38:54,638 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:39:16,575 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0.5252525252525253 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.4545454545454546 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.98989898989899].
2023-08-21 21:39:16,575 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.7272727272727273, momentum=0.5252525252525253 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.4545454545454546 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.22222222222222224 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.09090909090909083 ,initial_accumulator_value=0.0 ,l1_regularization_strength=0.5353535353535354 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.9797979797979799 ,beta=0.98989898989899].
2023-08-21 21:39:17,502 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:39:17,502 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:39:39,120 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:39:39,120 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:39:43,799 INFO: Building the Keras optimizer to use for [Base=Ftrl, learning_rate=0.6666666666666667, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.393939393939394 ,rho=0.7272727272727273 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:39:43,799 INFO: Building Ftrl optimizer to use for [Base=Ftrl, learning_rate=0.6666666666666667, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.393939393939394 ,rho=0.7272727272727273 ,epsilon=0.0007272727545454545 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.8383838383838385 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:40:09,067 INFO: Applying selection operators for generation 39.
2023-08-21 21:40:09,067 INFO: Applying genetic operators for generation 39.
2023-08-21 21:40:09,068 INFO: Evaluating fitness for for generation 39.
2023-08-21 21:40:09,068 INFO: Will evaluate fitness for 12 individuals.
2023-08-21 21:40:10,139 INFO: Building the Keras optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.020202020202020204].
2023-08-21 21:40:10,139 INFO: Building RMSprop optimizer to use for [Base=RMSprop, learning_rate=0.7272727272727273, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=0.0007272727545454545 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.9292929292929294 ,learning_rate_power=-0.46464646464646464 ,initial_accumulator_value=0.21212121212121213 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.020202020202020204].
2023-08-21 21:40:10,967 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:40:10,967 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.7171717171717172 ,beta=0.05050505050505051].
2023-08-21 21:40:35,956 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:40:35,957 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=False ,ema_momentum=1.0 ,rho=0.7272727272727273 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:40:36,639 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:40:36,639 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:40:59,138 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:40:59,138 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:41:11,153 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:41:11,154 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:41:20,813 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:41:20,813 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:41:39,749 INFO: Building the Keras optimizer to use for [Base=Adamax, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.25252525252525254 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.5353535353535354].
2023-08-21 21:41:39,750 INFO: Building Adamax optimizer to use for [Base=Adamax, learning_rate=0.09090909090909091, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.14141414141414144 ,rho=0.25252525252525254 ,epsilon=0.0001919192727272727 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.8181818181818182 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.8484848484848485 ,beta=0.5353535353535354].
2023-08-21 21:41:42,327 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7474747474747475 ,epsilon=0.0009696969727272727 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.5858585858585859].
2023-08-21 21:41:42,328 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.20202020202020204, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.7474747474747475 ,epsilon=0.0009696969727272727 ,centered=True ,beta_1=0.09090909090909091 ,beta_2=0.7272727272727273 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.4444444444444445 ,beta=0.5858585858585859].
2023-08-21 21:42:10,103 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:42:10,103 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:42:10,778 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:42:10,778 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:42:35,620 INFO: Building the Keras optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=1.0 ,rho=0.18181818181818182 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.42424242424242425].
2023-08-21 21:42:35,621 INFO: Building Adam optimizer to use for [Base=Adam, learning_rate=0.2828282828282829, momentum=0 ,nesterov=False ,amsgrad=False ,weight_decay=0.003839000000000001 ,use_ema=False ,ema_momentum=1.0 ,rho=0.18181818181818182 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.10101010101010102 ,beta_2=0.8484848484848485 ,learning_rate_power=-0.7777777777777778 ,initial_accumulator_value=0.25252525252525254 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.6060606060606061 ,beta=0.42424242424242425].
2023-08-21 21:43:07,628 INFO: Applying selection operators for generation 40.
2023-08-21 21:43:07,628 INFO: Applying genetic operators for generation 40.
2023-08-21 21:43:07,630 INFO: Evaluating fitness for for generation 40.
2023-08-21 21:43:07,630 INFO: Will evaluate fitness for 10 individuals.
2023-08-21 21:43:08,352 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:43:08,352 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:43:08,707 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.17171717171717174, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.10101010101010102 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.29292929292929293].
2023-08-21 21:43:08,708 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.17171717171717174, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=0.0030310000000000007 ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.10101010101010102 ,epsilon=0.0002727273454545454 ,centered=False ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.25252525252525254 ,beta=0.29292929292929293].
2023-08-21 21:43:30,316 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:43:30,316 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:43:45,885 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:43:45,885 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:43:52,160 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:43:52,160 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:44:13,212 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.6161616161616162 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.29292929292929293].
2023-08-21 21:44:13,212 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.393939393939394, momentum=0 ,nesterov=True ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.38383838383838387 ,rho=0.6161616161616162 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.09090909090909091 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.07070707070707072 ,beta=0.29292929292929293].
2023-08-21 21:44:18,183 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:44:18,184 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:44:46,460 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:44:46,460 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:45:00,360 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:45:00,361 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.7272727272727273, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.22222222222222224 ,epsilon=5.050514545454545e-05 ,centered=True ,beta_1=0.010101010101010102 ,beta_2=0.6666666666666667 ,learning_rate_power=-0.98989898989899 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.9292929292929294 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.0 ,beta=0.29292929292929293].
2023-08-21 21:45:07,587 INFO: Building the Keras optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5050505050505051 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.29292929292929293].
2023-08-21 21:45:07,587 INFO: Building Adadelta optimizer to use for [Base=Adadelta, learning_rate=0.8181818181818182, momentum=0 ,nesterov=False ,amsgrad=True ,weight_decay=None ,use_ema=True ,ema_momentum=0.9393939393939394 ,rho=0.5050505050505051 ,epsilon=5.050514545454545e-05 ,centered=False ,beta_1=0.17171717171717174 ,beta_2=0.22222222222222224 ,learning_rate_power=-0.4747474747474747 ,initial_accumulator_value=0.393939393939394 ,l1_regularization_strength=0.98989898989899 ,l2_regularization_strength=0.5252525252525253 ,l2_shrinkage_regularization_strength=0.696969696969697 ,beta=0.29292929292929293].
2023-08-21 21:45:33,596 INFO: Saving the results to the folder specified in the arguments.
2023-08-21 21:45:33,599 INFO: Closing the multiprocessing pool.
2023-08-21 21:45:33,599 INFO: Experiment finished.
